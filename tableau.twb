<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook source-build='2020.3.4 (20203.20.1208.1036)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='4.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.percap' ordinal='12' />
            <column datatype='string' name='deaths.new.percap' ordinal='13' />
            <column datatype='string' name='cases.new.perM' ordinal='14' />
            <column datatype='string' name='deaths.new.perM' ordinal='15' />
            <column datatype='string' name='cases.new.7dsma' ordinal='16' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
            <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
            <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
            <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
            <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
            <column datatype='integer' name='cases.active' ordinal='22' />
            <column datatype='string' name='cases.active.percap' ordinal='23' />
            <column datatype='string' name='cases.active.perM' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.percap' ordinal='12' />
            <column datatype='string' name='deaths.new.percap' ordinal='13' />
            <column datatype='string' name='cases.new.perM' ordinal='14' />
            <column datatype='string' name='deaths.new.perM' ordinal='15' />
            <column datatype='string' name='cases.new.7dsma' ordinal='16' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
            <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
            <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
            <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
            <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
            <column datatype='integer' name='cases.active' ordinal='22' />
            <column datatype='string' name='cases.active.percap' ordinal='23' />
            <column datatype='string' name='cases.active.perM' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases.active (data.csv)]' value='[data.csv].[cases.active]' />
          <map key='[cases.active.perM (data.csv)]' value='[data.csv].[cases.active.perM]' />
          <map key='[cases.active.percap]' value='[data.csv].[cases.active.percap]' />
          <map key='[cases.new.7dsma]' value='[data.csv].[cases.new.7dsma]' />
          <map key='[cases.new.perM (data.csv)]' value='[data.csv].[cases.new.perM]' />
          <map key='[cases.new.perM.7dsma (data.csv)]' value='[data.csv].[cases.new.perM.7dsma]' />
          <map key='[cases.new.percap.7dsma]' value='[data.csv].[cases.new.percap.7dsma]' />
          <map key='[cases.new.percap]' value='[data.csv].[cases.new.percap]' />
          <map key='[cases.new]' value='[data.csv].[cases.new]' />
          <map key='[cases.percap]' value='[data.csv].[cases.percap]' />
          <map key='[cases]' value='[data.csv].[cases]' />
          <map key='[countyState]' value='[data.csv].[countyState]' />
          <map key='[county]' value='[data.csv].[county]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[deaths.new.7dsma]' value='[data.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.perM (data.csv)]' value='[data.csv].[deaths.new.perM]' />
          <map key='[deaths.new.perM.7dsma (data.csv)]' value='[data.csv].[deaths.new.perM.7dsma]' />
          <map key='[deaths.new.percap.7dsma]' value='[data.csv].[deaths.new.percap.7dsma]' />
          <map key='[deaths.new.percap]' value='[data.csv].[deaths.new.percap]' />
          <map key='[deaths.new]' value='[data.csv].[deaths.new]' />
          <map key='[deaths.percap]' value='[data.csv].[deaths.percap]' />
          <map key='[deaths]' value='[data.csv].[deaths]' />
          <map key='[fips]' value='[data.csv].[fips]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[state]' value='[data.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyState]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>countyState</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.percap</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.percap</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.perM</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.perM</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.percap.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.percap.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.percap.7dsma</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.percap.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.percap.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.percap.7dsma</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.perM.7dsma (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.perM.7dsma</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.perM.7dsma (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.perM.7dsma</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.active (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.active.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active.percap</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.active.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active.perM</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;' value='Σ Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' value='Case 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;' value='Σ Deaths' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;' value='Deaths 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY() - 1' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='County-Level' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.state.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[cases.active (data.csv)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
      <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[cases.new.percap.7dsma]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County and State' datatype='string' name='[countyState]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' hidden='true' name='[fips]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
        </groupfilter>
      </group>
      <group caption='Action (County, State,Cases per Capita (bins))' hidden='true' name='[Action (County, State,Cases per Capita (bins))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
          <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),County,State)' hidden='true' name='[Action (MDY(Yesterday),County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),State)' hidden='true' name='[Action (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (cases.new.7dsma,State)' hidden='true' name='[Action (cases.new.7dsma,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cases.new.7dsma:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Contiguous USA' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[state]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Northern Mariana Islands&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Puerto Rico&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cases per Capita (bins),County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County, State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1718193694053994508:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Bins' role='dimensions'>
        <folder-item name='[Cases per Capita - County (bin)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[cases.active (data.csv)]' type='field' />
        <folder-item name='[cases.active.perM (data.csv)]' type='field' />
        <folder-item name='[cases.new.7dsma]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new.7dsma]' type='field' />
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='dimensions'>
        <folder-item name='[Calculation_1718193694053994508]' type='field' />
        <folder-item name='[Calculation_204561939512385536]' type='field' />
        <folder-item name='[countyState]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='state, county' type='drillpath' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='measures'>
        <folder-item name='[Calculation_1718193694052151304]' type='field' />
        <folder-item name='[population]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='groups'>
        <folder-item name='[Continental United States]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Bins'>
          <folder-item name='[Cases per Capita - County (bin)]' type='field' />
        </folder>
        <folder name='Cases'>
          <folder-item name='[cases.active (data.csv)]' type='field' />
          <folder-item name='[cases.active.perM (data.csv)]' type='field' />
          <folder-item name='[cases.new.7dsma]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new.7dsma]' type='field' />
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
        <folder name='Metadata'>
          <folder-item name='[Calculation_1718193694052151304]' type='field' />
          <folder-item name='[Calculation_1718193694053994508]' type='field' />
          <folder-item name='[Calculation_204561939512385536]' type='field' />
          <folder-item name='[Continental United States]' type='field' />
          <folder-item name='[countyState]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[population]' type='field' />
          <folder-item name='state, county' type='drillpath' />
        </folder>
        <folder name='State-Level Fields' />
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Documents/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='01/25/2021 11:52:47 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[cases.active (data.csv)]' value='[Extract].[cases.active]' />
            <map key='[cases.active.perM (data.csv)]' value='[Extract].[cases.active.perM]' />
            <map key='[cases.active.percap]' value='[Extract].[cases.active.percap]' />
            <map key='[cases.new.7dsma]' value='[Extract].[cases.new.7dsma]' />
            <map key='[cases.new.perM (data.csv)]' value='[Extract].[cases.new.perM]' />
            <map key='[cases.new.perM.7dsma (data.csv)]' value='[Extract].[cases.new.perM.7dsma]' />
            <map key='[cases.new.percap.7dsma]' value='[Extract].[cases.new.percap.7dsma]' />
            <map key='[cases.new.percap]' value='[Extract].[cases.new.percap]' />
            <map key='[cases.new]' value='[Extract].[cases.new]' />
            <map key='[cases.percap]' value='[Extract].[cases.percap]' />
            <map key='[cases]' value='[Extract].[cases]' />
            <map key='[countyState]' value='[Extract].[countyState]' />
            <map key='[county]' value='[Extract].[county]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[deaths.new.7dsma]' value='[Extract].[deaths.new.7dsma]' />
            <map key='[deaths.new.perM (data.csv)]' value='[Extract].[deaths.new.perM]' />
            <map key='[deaths.new.perM.7dsma (data.csv)]' value='[Extract].[deaths.new.perM.7dsma]' />
            <map key='[deaths.new.percap.7dsma]' value='[Extract].[deaths.new.percap.7dsma]' />
            <map key='[deaths.new.percap]' value='[Extract].[deaths.new.percap]' />
            <map key='[deaths.new]' value='[Extract].[deaths.new]' />
            <map key='[deaths.percap]' value='[Extract].[deaths.percap]' />
            <map key='[deaths]' value='[Extract].[deaths]' />
            <map key='[population]' value='[Extract].[population]' />
            <map key='[state]' value='[Extract].[state]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='939891' timestamp-start='2021-01-25 23:52:47.183' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>465</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8054</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21785</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2731</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14237</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>406635</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117823</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyState]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>countyState</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16309</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2212</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.percap</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>302529</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.percap</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>120308</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.perM</remote-alias>
              <ordinal>13</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>302529</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.perM</remote-alias>
              <ordinal>14</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>120308</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>15</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5466</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>16</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>445</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.percap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.percap.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.percap.7dsma</remote-alias>
              <ordinal>17</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>398388</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.percap.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.percap.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.percap.7dsma</remote-alias>
              <ordinal>18</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>115900</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.perM.7dsma (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.perM.7dsma</remote-alias>
              <ordinal>19</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>381843</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.perM.7dsma (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.perM.7dsma</remote-alias>
              <ordinal>20</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>108528</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.active (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active</remote-alias>
              <ordinal>21</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6290</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.active.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active.percap</remote-alias>
              <ordinal>22</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>386386</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active.perM</remote-alias>
              <ordinal>23</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>406521</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>5</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>4</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>3</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_187532707401031681:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203182039043:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:Calculation_187532707400040448:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_325455445230501890:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.perCap:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203179343874:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864367105:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864514562:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864535043:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864580100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864633349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864649734:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864666119:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864682504:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864698889:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.perCap:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='County-Level' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='deaths.percap' ordinal='8' />
                  <column datatype='string' name='countyState' ordinal='9' />
                  <column datatype='integer' name='cases.new' ordinal='10' />
                  <column datatype='integer' name='deaths.new' ordinal='11' />
                  <column datatype='string' name='cases.new.percap' ordinal='12' />
                  <column datatype='string' name='deaths.new.percap' ordinal='13' />
                  <column datatype='string' name='cases.new.perM' ordinal='14' />
                  <column datatype='string' name='deaths.new.perM' ordinal='15' />
                  <column datatype='string' name='cases.new.7dsma' ordinal='16' />
                  <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
                  <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
                  <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
                  <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
                  <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
                  <column datatype='integer' name='cases.active' ordinal='22' />
                  <column datatype='string' name='cases.active.percap' ordinal='23' />
                  <column datatype='string' name='cases.active.perM' ordinal='24' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5a' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County-Level Hot Spots
[&gt;100 New Cases]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='in-range'>
            <min>100.0</min>
            <max>6933.4285714285716</max>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='New Cases 7D SMA'>
              <formatted-text>
                <run>New Cases 7D SMA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Cook&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Illinois&quot;</value>
                    <value>3497.4285714285716</value>
                    <value>335204</value>
                    <value>5150233</value>
                    <value>41.812899999999999</value>
                    <value>-87.753600000000006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-114' y='-130' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Maricopa&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Arizona&quot;</value>
                    <value>3457.0</value>
                    <value>238187</value>
                    <value>%null%</value>
                    <value>33.279800000000002</value>
                    <value>-112.7681</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-9' y='83' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]>, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;New York City&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;New York&quot;</value>
                    <value>3350.5714285714284</value>
                    <value>342755</value>
                    <value>8336817</value>
                    <value>40.712800000000001</value>
                    <value>-74.006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-125' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='186'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Miami-Dade&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2164.8571428571427</value>
                    <value>246914</value>
                    <value>2716940</value>
                    <value>25.559200000000001</value>
                    <value>-80.590599999999995</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='20' y='60' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{277AF070-EEB8-474C-A442-6620AAEDDFD8}' />
    </worksheet>
    <worksheet name='5a'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[State-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6670967.0743742296' min='-14670203.825095043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;New York&quot;</value>
                    <value>653.85714285714289</value>
                    <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                    <value>43.0</value>
                    <value>-75.489999999999995</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6E5C1D5A-A324-4D39-AA35-1E76DE613F2C}' />
    </worksheet>
    <worksheet name='5b'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[County-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201213' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20200730</value>
                    <value>&quot;Douglas&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>123.85714285714286</value>
                    <value>&quot;POLYGON((-96.3274 41.19,-96.3656 41.2341,-96.3506 41.2652,-96.4076 41.3146,-96.4244 41.3661,-96.4707 41.3932,-96.329 41.3931,-95.9387 41.3932,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9276 41.2984,-95.9115 41.229,-95.9235 41.1909,-96.3274 41.19))&quot;</value>
                    <value>41.291899999999998</value>
                    <value>-96.150199999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-55' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='259'>
            <formatted-text>
              <run fontcolor='#787878'>County: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Contageous Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]> ]]></run>
              <run>per million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Westchester&quot;</value>
                    <value>494430.00870278862</value>
                    <value>&quot;POLYGON((-73.9826 41.3217,-73.5447 41.3664,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9826 41.3217))&quot;</value>
                    <value>41.124899999999997</value>
                    <value>-73.771799999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='160' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{42E61C40-2836-4455-BDA4-B4B6380BBC4B}' />
    </worksheet>
    <worksheet name='5c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'>WAVE 1 PEAK</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-15#</value>
                    <value>5425.7142857142853</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='124' y='0' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>CURRENT</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>3561.7142857142858</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-149' y='0' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C85D93EA-FE10-4771-B4D8-03FB23236857}' />
    </worksheet>
    <worksheet name='5d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Deaths - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='185'>
            <formatted-text>
              <run bold='true' fontalignment='0'>WAVE 1 PEAK</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>New Deaths 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-12#</value>
                    <value>828.85714285714289</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='133' y='-20' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>CURRENT</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>19.428571428571427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-62' y='-77' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C63D437F-3477-486E-A4A0-0691D9000DA3}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
            <format attr='break-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{C7BE4A65-2880-415E-821D-E62636CC1C9A}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Deaths: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2021-01-15#</value>
                    <value>390697</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-119' y='-53' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Σ Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2021-01-15#</value>
                    <value>23481749</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-124' y='-53' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='10' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 2 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-18#</value>
                    <value>65731.714285714261</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-71' />
          </annotation>
          <annotation class='point' id='12' mark-position='1' pullback='12' text-width='155'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-10#</value>
                    <value>31486.285714285692</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-65' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK/CURRENT</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2021-01-08#</value>
                    <value>258836.00000000006</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-154' y='0' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Notable States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' max='25000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{18B2D08C-D4D2-4F82-8F4C-7C904941F167}' />
    </worksheet>
    <worksheet name='Tri-State New Cases + Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='12' />
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])))</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-07#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>3674.2857142857142</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='147' y='0' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'>WAVE 1 PEAK</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-10#</value>
                    <value>&quot;New York&quot;</value>
                    <value>9877.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='74' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-22#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>1102.0</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='114' y='-27' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-12#</value>
                    <value>&quot;New York&quot;</value>
                    <value>1065.5714285714287</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='138' y='1' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-26#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>114.00000000000001</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-65' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-21#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>278.28571428571428</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-94' />
          </annotation>
          <annotation class='point' id='29' mark-position='1' pullback='12' text-width='181'>
            <formatted-text>
              <run bold='true' fontalignment='2'>Current</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;New York&quot;</value>
                    <value>10031.285714285716</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-123' y='0' />
          </annotation>
          <annotation class='point' id='30' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>Current</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2720.8571428571431</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-149' y='-59' />
          </annotation>
          <annotation class='point' id='31' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>Current</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>4666.5714285714294</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-132' y='-51' />
          </annotation>
          <annotation class='point' id='32' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Current</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;New York&quot;</value>
                    <value>92.285714285714292</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-81' y='-61' />
          </annotation>
          <annotation class='point' id='33' mark-position='1' pullback='12' text-width='144'>
            <formatted-text>
              <run bold='true'>Current</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>31.0</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-55' y='-54' />
          </annotation>
          <annotation class='point' id='34' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Current</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>61.428571428571423</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-71' y='-50' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3AEE0153-2BB7-47F3-A410-04767AF59D72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='511' param='horz' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='58' param='vert' w='98698' x='651' y='1060'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='61465' id='35' name='Nation-Wide Daily New' w='49318' x='25245' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30696' id='146' name='Nation-Wide Cumulative New' w='24594' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30769' id='155' name='Nation-Wide Cumulative Deaths' w='24594' x='651' y='37319'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30852' id='311' name='Notable States' show-title='false' w='98698' x='651' y='68088'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57200' id='324' name='1d' w='24786' x='74563' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4265' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24786' x='74563' y='63823'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='556' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='555' param='vert' w='98698' x='651' y='1060'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30696' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24594' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61465' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49318' x='25245' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57200' id='324' is-fixed='true' name='1d' w='24786' x='74563' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4265' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24786' x='74563' y='63823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30769' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24594' x='651' y='37319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30852' id='311' is-fixed='true' name='Notable States' show-title='false' w='98698' x='651' y='68088'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State- and County-Level New Cases and Deaths'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='178' param='vert' w='98888' x='556' y='979'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='179' w='98888' x='556' y='979'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='28' param='horz' w='98888' x='556' y='6120'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='7' param='horz' w='98888' x='556' y='6120'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92901' id='5' w='98888' x='556' y='6120'>
                  <zone h='42379' id='3' name='5c' w='49462' x='49982' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41983' id='10' name='5b' w='49426' x='556' y='52603'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4435' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' show-title='false' single-line='true' w='49426' x='556' y='94586'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42379' id='14' name='5a' w='49426' x='556' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4104' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49426' x='556' y='48499'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42082' id='26' name='5d' w='49462' x='49982' y='52555'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4056' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49462' x='49982' y='48499'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4384' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49462' x='49982' y='94637'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='221' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='220' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='179' w='98888' x='556' y='979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42379' id='14' is-fixed='true' name='5a' w='49426' x='556' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4104' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49426' x='556' y='48499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42379' id='3' is-fixed='true' name='5c' w='49462' x='49982' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4056' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49462' x='49982' y='48499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42082' id='26' is-fixed='true' name='5d' w='49462' x='49982' y='52555'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4384' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49462' x='49982' y='94637'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41983' id='10' is-fixed='true' name='5b' w='49426' x='556' y='52603'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4435' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' show-title='false' single-line='true' w='49426' x='556' y='94586'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836711AE-A8FC-40BB-A283-4102C7E23F92}' />
    </dashboard>
  </dashboards>
  <windows source-height='2'>
    <window class='dashboard' maximized='true' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='1d'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Notable States'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='35' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='dashboard' name='State- and County-Level New Cases and Deaths'>
      <viewpoints>
        <viewpoint name='5a'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>20201213</value>
                  <value>&quot;New York&quot;</value>
                  <value>3561.7142857142858</value>
                  <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                  <value>43.0</value>
                  <value>-75.489999999999995</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5b'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;New York City&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>374198.80992949707</value>
                  <value>%null%</value>
                  <value>40.712800000000001</value>
                  <value>-74.006</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='5d'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3FD9FA44-6E72-44CA-A079-4E2D80E4338F}' />
    </window>
    <window class='worksheet' name='Tri-State New Cases + Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E29869-794A-42BD-9FD3-6C37C11A1D8D}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C16D9719-18FC-49FF-9506-40BA605AB53C}' />
    </window>
    <window class='worksheet' hidden='true' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-16#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A69FE9-8E67-4E4E-8D8A-5DEA02588AF4}' />
    </window>
    <window class='worksheet' hidden='true' name='5a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED5063A-3620-48EF-A2E5-BD1E1DA58829}' />
    </window>
    <window class='worksheet' hidden='true' name='5b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4B5A0E-088B-4C88-A0B3-21B1C81304AE}' />
    </window>
    <window class='worksheet' hidden='true' name='5c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D64A6E8-DE6A-46B7-B86E-B23AC593D8C9}' />
    </window>
    <window class='worksheet' hidden='true' name='5d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E95A138C-5A92-427D-9DA7-5B0D9AF77F38}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='worksheet' hidden='true' name='Notable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{798B147B-0696-4FFF-81B2-64334898F022}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]' width='384'>
      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
      ioqKsNlsbNq0Kei+hq6J8vJy2tvb2bp1K1FRo68B43K56OjowGw209b24VOliYmJQa8Jh8NB
      cXExDoeDiIiIcV17uq7jcDgwm82YzWZcLlfQpHvnMZ07dw6n08n27duDJpz29nYSExOpq6vj
      xo0bbNiwIegd7FB/vs1mw2g0jis+TdM4ffo0q1evHtYq6e3tDVhptra2kpKSwrVr12hoaGDr
      1q3Exo58aPCj+6qsrKShoYGEhARWrVqF1WoNekxXr16lrq4OgPnz57Nq1aqAv8Oh8bShmwmn
      0+n/mwVSXV1NXV2dvwV5Z1fiWIbqFpvNRlFR0bjqFo/Hw+HDh9m1axdGo5GTJ0+yefPm8EsA
      vb29w+6QU1JSgl6wt27dIjU1FavVitPppK6uLujyE7qu09LS4r/rN5lMpKenB62MLl26RE1N
      DRaLBYfDwb59+8a8yH0+n//O/c47+EAXns/no7d35OJVJpOJ2NjYoBf5nauvlpaWcuDAgYAX
      ua7rHDt2jAcffHBcA1NDPySz2TzsrsZoNI75w9U0jZaWlhFPRRoMBtLS0sY850MtOp/PN6ys
      1WoNmtR0Xae/v9//97XZbGMOag5RVZXu7m7/viIjIwOWKS0tJScnh7KyMv+2yMhI1q5dG/Q6
      6u7uHtZSTU9PD9pyuH79OkajkaysrKCV5BCXy8Xx48fp7e0lOjoaq9XKrl27Av6tVVWltLTU
      P45WXFzMunXr/JMLxmK32+no+HCFzXnz5gU95263m+rqav/vIy4ujoULFwY9Lq/X67/+FEUJ
      eiOm6zonT570j1N1dnbS1NTEypUrA+5nKMEP7ctisQS9Kejq6kLXdX9Luq6ujvnz5wfshnQ6
      nZSUlLB9+3YAampqBsduAu7pHuP1ejl69ChLlizx/zGDdX0AxMTEcOzYMdasWcOFCxf8JzGQ
      Gzdu0NjY6O8nHs8PyuPx0N3dzbJly0hNTeX27dsBu436+vro7+/H6XTS0vLh+j85OTljXuQu
      l4vq6moaGxuJjY0lJiYGXddpamri4x//eMD4FEVh+fLl/n9rmkZHR4f/BT1jSU9P5/Lly6xZ
      sybg52Dw71FTU0NiYuKwPuikpCRWrFgxahld1+nu7qa3t5e2tjb/+MK1a9d46qmnxqwsm5ub
      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
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3gWxfb4P/uWJG8qSUjvISHUBAglNCE0uRQBRUXsWLh6FW8Rr4KFi6hX
      vIAKFpQmVZAiIiUYegolYAipEFJIb6Qnb939/cEv+zWGqqgI+3mePM+b2Z3ZmS1zZs6ZOUeQ
      JElCQUFBQeGOQ/VHV0BBQUFB4Y9BEQAKCgoKdyiKAFBQUFC4Q1EEgIKCgsIdiiIAFBQUFO5Q
      FAGgoKCgcIeiCAAFBQWFOxRFACgoKCjcoSgC4CoYjUaUfXIKCgq3K9cUAGfPnmXlypXU1NS0
      St+zZ0+btMshSRJms7lN2pIlSzAYDDdY3StTV1fH1q1bW3XY+fn5rFq1iubm5lbn7dixA0mS
      OH36NLGxsVes98yZM6mrq7vuOjQ0NLB8+XKWL1/OypUr2bVrF9XV1b+8Ub8ToihisVhapRUX
      F7NhwwZFACoo3MZcUwBkZmaydu1avvrqq1bpO3bsuK7OLS8vj//+97+t0lqEgiAIN1jdK6PV
      alm9ejW1tbVyWkxMDKtXryY9PV1OO3XqFElJSQiCgMViuWoHV11djSiK112HhoYGvv32Wzw8
      PHB2diYjI4PHHnuMgoKCX9ao34ldu3bx3XfftUoTRVHp/BUUbnM013PSmDFjiIuLY/Lkyfj4
      +LQ5LkkSNTU1lJWV4eDggJeXFyqVCqPRSFVVFRUVFfJswd7eHo1Gw7Rp09BqtXIZ9fX1ZGRk
      YGdnR1hYGBrNpao1NDSg0+koKyujpKSEoKAgnJ2d2wgPnU5HcHAwmZmZREVFIUkSP/74Iw88
      8ABJSUlERkYClwRA7969AejWrVurka8kSTQ0NFBYWIijo2ObDrC6upqsrCzc3NwIDg6+rABr
      164d48aNk//39PRky5Yt/P3vf0eSJIqKiigoKCAoKAgPDw8EQUAURRobG3FwcMBgMFBZWYmP
      jw+SJFFaWkpNTQ1eXl44OTkhCAJNTU1oNBoKCwupqakhLCwMOzs7+ZoWi4XMzEwaGxvp1q0b
      tra28jGTyUR+fj42NjZ4eXlhMBioqKjAYrFQU1ODIAg4OTnh5eXFPffc0+p6VlZWcjmNjY1Y
      W1uj0WiwWCykp6ej1+vp1q0bOp3uSq+SgoLCLcR1CQA7OzumTp3Kl19+yVtvvdWm41u1ahWx
      sbEEBQVRWFiIn58fc+bMISkpiaVLl1JUVMRrr72GIAi8+uqr+Pv78/jjj/PNN9+g0WjIyMjg
      jTfeoEuXLlRVVaHRaPjvf/+LTqfj5ZdfljtiLy8vjh8/zsqVK/Hw8GhTz969e3Pq1CmioqKo
      r6+noaGBe+65hzlz5sjn/Pjjj0yZMgWAAwcOcO7cOV544QUkSeL777/niy++oFu3bjQ2NpKf
      ny/nS0pK4v3336dPnz5kZGQwYMAAnn766WvOYvz8/MjIyABg06ZN7Nixgx49evDhhx/y3HPP
      MXToUOrq6njppZf4xz/+wZtvvklgYCAfffQRCxcu5PTp0/j7+3Pu3DmmT5/OsGHD+Oijjzh1
      6hSBgYEIgkBmZiZLlizB398fk8nEv//9bwRBwMXFhUWLFvHRRx/h7u7OhQsXmDVrFi4uLphM
      JoKDg/Hw8JBVYidPnsTa2poPP/yQgoICFixYwOLFi/nuu+8oLS3l73//O3BJwDz33HPMmzcP
      d3d3/v3vf2NlZYWjoyOLFi1i8eLFuLq6Xs+rpaCg8EciXYPt27dLn332mWQwGKSpU6dKmZmZ
      kiRJ0vPPPy/l5ORIkiRJNTU1kiiKkiRJktlslh577DH5WGZmpvSvf/2rTbkTJ06UTCaTJEmS
      NG3aNOno0aOSJEmSKIrSu+++K61fv16SJEn661//KsXFxcn5PvjgAyk2Nvaydc3MzJSefvpp
      SZIkKT4+Xnrvvfcks9ksPfTQQ1JjY6NUV1cn3XvvvZLZbJYkSZL27NkjLV68WJIkSSouLpbG
      jx8vFRUVyfV49NFHpYsXL0qiKEoPPviglJubK0mSJOn1eumhhx6Sz22hpKREeuSRR+T/6+rq
      pBkzZkjbtm2TysvLpfvvv19qaGiQJEmSCgoKpKlTp0oGg0Gqrq6WxowZIz322GPS2bNnJUmS
      JJPJJI0ePVq+R2azWaqurpYkSZLeffddaffu3fJ1Nm3aJM2ZM0d+XvPmzZOPffPNN9L//vc/
      SZIk6W9/+5u0Z88e+VhLXTZs2CCtXbu2VVtyc3OlF154QZIkSSovL5cmT54s6fV6SZIkKT09
      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
      nZeXFw6HA6fzh8lca7XaE0YFKSgonFucLok26/cTs+MaAE/I3Q/F4XAcUxzlzNtJkoTL5UJ7
      knj9U23n2dA+2eDpWTKdbPA6X9d1uVyoVKqTDu6n815otVpltq6gcJGjOGkVFBQULlJq6xvo
      6Ow87vPn3ACcbDZ8uu1ONfvzVNqd6rlOZXZ9Pq+rVqtPabZ+tt8LBQWFC5vN+4/S2m4d8TlR
      FM+9FtCpuhFOpd3ZPJfS7oe3U1BQGL00NDYpLiAFBQWFSxF9b83oUgMtLi4mJSXlpO16enrI
      zs5m/vz5QySCJUli586ddHd3Ex0dTWJiItu3b0eSJDIyMoZtkLpcLrKysnA6naSkpDB27NgT
      XleSJEpLS+nr6+Oyyy4b8lxzczMHDhzA7XYzf/586uvrKS8vJzY2luTk5CFt6+rqKCoqQqvV
      kp6eLoffnuh+s7KyuOqqq4bdb05ODlarlaioKJKTk9m+fTuiKI54vwoKCpcIkhvvA2+PrhVA
      fX39sJ9NTU3k5uaSnZ0tR83U1dXJBUMGI0kSycnJLF68mMrKSoqKikhOTiY1NZXCwsJh16uu
      riY0NJSFCxcSEhJCX18fWVlZHDlyBJvNxp49e9i+fbuc/9DX14fb7cZqHe5zU6lUXH311SQl
      JVFdXU1JSQmLFi2ioqJiWD87OjqYOHEiM2fOZNOmTUiSxKFDh9i1axdut5v6+nqys7NxOBzy
      66DVake836SkJBYvXkxVVRXFxcUkJiaSlpbGoUOHzuQtUFBQGKW43W76+vsGfj/0MWJ97ugy
      AB5KS0vln0ePHiU8PByDwUBbWxsA48aNw2AwDDtOpVJhNptZt24dSUlJdHd3ExQURGBgIN3d
      3cPaR0dHU11dzfr163E6neTk5DBjxgyqqqpoa2tDEAQmT57M7t27ATAYDMNm8x6Cg4PlQTg2
      Nha9Xo8gCJhMpuNWsvLx8cHb25uGhgbcbjcxMTEcPHiQw4cPM2PGDHmDODk5GR8fn+Pe7/r1
      60lMTMRqtRIUFERAQAC9vb3D2isoKFy8uN1u7P39hNeuQX/w70jSKCsIM1JimiAImM1m2tvb
      R8w8HowkSXz11VfMnz8fs9lMZ2cnvb29qFQq9Hr9sPYqlYrFixfLM3+bzcb+/ftl14mPjw8G
      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
    </thumbnail>
    <thumbnail height='384' name='State- and County-Level New Cases and Deaths' width='384'>
      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
      CxcuxMGDB/Gv//qv6O7uxr59+3Dvvffi6NGjuPfee7Fx40b4/X788Ic/xP3334+SkhJ1CeD4
      8eO45JJLhoiqmzZtwqlTp3D//fdjypQp+OlPfwoA2Lp1Kz1ldHV14cCBAwCAd999F8ePH8fd
      d9+NhQsX4vXXX8eECROwYMECLF68GDfddBOmTZuGo0eP4vDhwwDSKoGzZ89mXRBJkvDoo49i
      xYoV+N73vodXX30VTU1N6O/vp6ewzs5O7Ny5ExzH4dFHH8WqVavwve99D6+88ormiZ7jOHz9
      61/PkAKANAN85JFHsGbNGnznO9/BCy+8gI6ODrS3t2Pv3r2QJAkbN27Ea6+9BlEU0djYiKNH
      j9LrBUFAZ2en4ssYj8fx+c9/Hl/72tfwyiuvoKOjA6+//jocDgfuvfdeTJgwAYlEAr29vXj8
      8cdx3333Yd26dXjkkUc09YHV1dW0KPSTTz6JyspK/PCHP8TevXuxe/duAMBrr72GYDCIb3/7
      23A4HHj//ffx0Ucf4eDBg7j33nuxbNkyBAIBAMDmzZshiiJWrFiBiooK3HDDDbj++utRXFyM
      jRs30hP1O++8g0gkkvU5ynH11Vdj//79SKVS+I//+A984QtfwD333IOf/exniMVi6Orqwn/+
      53/i5ptvxs0334xYLIZNmzahpaUFDzzwAADgD3/4AwDg1VdfxYQJE+j+CIVC+O53v4tz587R
      QtzBYBBf+MIXcOedd+LRRx9FMBjE2bNn8fLLL+MHP/gBVqxYgf/6r/8CAGzfvh0/+tGPEIlE
      sGDBAjpnu92eUbmORUtLC/7617/i4YcfRnl5OebMmaPYzm63g+M4iKKITZs24fjx41i0aBFa
      Wloy9kt9fT1aW1sz2r/xxhv4+OOPMX/+fDQ3Nyu2N3Fhw2Kx4Ctf+Qp++9vfZnz+4osv4p/+
      6Z9w77334v7778eLL76IhoYGHDp0CJIk4cMPP8S6deuwZ88exONxRKNRWrhelQGkUinY7fYh
      n7/77ru455574Pf7cd1116Grq0vTiGqxWPD5z38eFRUVmDFjBiKRCLxeL8rLy1FRUYEpU6bA
      6/Xitttuw5///GdIkoQ333wTN998M06cOIHnn38eL730kqKaIRqNor+/H5WVlejt7cWll16K
      ffv24dprr8WWLVsgSRLeeecdXHfddYhEIggGgygvL0dvby8WL16M/fv3ay54fX09vF5vRrtg
      MEgXsL+/H4sWLcKBAwewcuVK7Ny5E5FIBBaLBdOnT0dLSwt27tyJT33qU/R6URRVdeZz587F
      Rx99hLfeeguSJKGzsxNVVVXYu3cvjh8/jssuuwxerxcHDhzAwoULEQqF6DMixFkNNpsNgiDg
      2LFjmDNnDjo7O7FixQrs3LkTQLpe86c//WmUlJSgvr4ekUgExcXFaGpqwp49ezBt2rQhJeuq
      q6vh9XoxefJkTJo0CTzPY926ddi4cSMkScK7776Lq666irbftWsXnn/+efzlL3/RNLxarVaI
      oojm5maUl5eD53mEw2HU1dXh5MmTeP/993H77bdjxowZmDFjBurr6+lYHR0dWL58Ob2vsrIy
      XH755SguLkZ1dTVuvPFGFBUVoba2FvF4HAAwc+ZMTJw4EdOmTcPq1atx4sQJfPDBB7j88svR
      29uL8vJytLe3U4eBNWvW4K677kJVVZXmmhOEQiF0dXUhkUggFAppqswikQh+9KMf4eDBg3j0
      0UfhcDggCAIt6M2uDwCEw2E89NBDOHbsGB555BE4HA6IophhQ7FYLKajw0WClStXorGxMUON
      ePbsWbz00kt48MEH8eyzz6KzsxN2ux1+vx89PT04c+YM1q9fj7///e84fPgwGhoa6LWqKqCp
      U6fSF5UlVnLGYLFYCuJFMXfuXDz55JNobW1FR0cHZsyYgZ6eHsyfPx88z4Pnh/IqSZLQ29uL
      bdu20c9mzJiBiooKcByHrq4u7N27F7fccguSySR6enoy2spVO3JwHIevfe1rePTRR7F48WIA
      6RM82w/P85g6dSqmTZuG1tZWHDp0CPPnz0dVVRV27dqFI0eO4JZbbqF9Wq1WOJ1OdHV1Zaht
      kskkHnjgAXzuc5+jorwkSbjqqqtQW1uLDz74AM888wz+3//7f0gmkzh9+jQcDgcAoKGhATab
      TfU+IpEI+vv74ff7EQwGsX37drqeS5YsUb1uypQp+PGPf4z33nsP//Zv/4Y777wTq1atGvIM
      WFx99dX4x3/8R6xevRrl5eXw+Xz0u5qaGthsNjpvNRw6dAjTp09HMplEW1sbXevq6mqUlZXh
      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
      ynd/wV5eDqwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Tri-State New Cases + Deaths' width='384'>
      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
      R49SVVXFiy++SN++fXnppZcYPXo0I0aM4MCBAxQVFaHRaPjjH/+ITqfjV7/6FTfccANff/01
      v/nNb3q9BvWVxtUeQbhYnJcDMBqNp9VWvZpxaLXIJwI/Pl3oAAEgisiihEGrJTkohLyGuu93
      STKirDqA3iI5OZn9+/fTv3//HzzOZDIxc+ZMpRc6aNAgRd5cFEWKi4vx8fFh4sSJSgPvabiu
      xo6PyuWP6nZ7AJtOh3zi++91Fimd6RGdV/1KyEiqcmevcdddd/HFF1/wwgsv8Ne//pVDhw7h
      7+/P8uXLWbJkCY2NjcAPN+Ljx4+nvLwcQRCoqKjAZju9spter8dkMvHhhx9SW1vba+/nasXh
      cGA2m3/8wJNwuVw0NJyad6fiQfvss88+e7GN6G3sdrsyqdTTSFYrVUVF5Ph5gyCQYm4lpq2z
      GJ6g16MLCkRsteDVty9xsbHotDpsbhcWhwMBuDYuAZP++ywFyWLBVV6BV1par9h9vtj27QdZ
      Ah+fi23KWePv78+MGTMASEhIYMiQIcrk38iRI5k0aRKxsbGkpqYSExODIAh4e3srUgIAcXFx
      DBw4kPb2doYNG0a/fv1ISkoiNjYWg8FASkoK0dHRjBw5kvb2dlJSUi77UbIsy12GZpxOJ4WF
      hTQ3N6PVajEajWd0nqIonld4p7m5mV27duHv7698d1euXEltbS3R0dHs2rWL3NxcgoODMZlM
      2Gw2MjMzOXToEMHBwfic+Hxu3ryZnJwc4uPj2blzJ/n5+YSFhWE0GhFFkW3btpGbm0t0dDQ6
      nY76+nqysrIoKysjMjISnU6HzWZj8+bNlJWVERcXd0HDVd0tCfljKrKqA+gmktVK2fFijvl2
      ZHwMaDAT3t65d+hxAO6mJlxVVQiiRN/BgzG3t1PS3IQsy4yOS8DH8H2Dcak6APuhQ2h8fRAu
      sxi3l5cXSUlJJCYmotPpMJlM9OvXj4iICKKjo9FqtUrjDx1hTk/j7yEkJITU1FQiIyMRBIGo
      qCi0Wi1arZaoqCgAfHx86Nu372Xf+MOZHUBLSwu7du0iMDCQ7OxsGhsbiY2N7bKh8tQKOfW6
      P9SoSZLEK6+8wieffEJ6ejpxcXHIsszbb7/N/fffz1NPPUVjYyO1tbUsX76cadOm8eyzz1JV
      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
      4+DBgyxbtuy2VxQPPPAAP/7xj/nWt74165o4nU6i0Si9vb0MDg5y8OBB1q9fD8Dq1av5zW9+
      QzAYnOMziUaj9PX1kclkiEajHDx4kKqqKlatWnXDMmYyGc6ePYskSezevZuvf/3rQEnZ79mz
      B7/fz0cffUR9ff1lxwiHwwwMDFhmq4MHD1JbW0tbW9sNyzWTl19+mYaGBpYvX87IyAgulwuP
      x8PWrVt58803Ub773e9+tyxnWsTk83k8Hs9NPWd1dTW1tbWoqkpzczNr167F4/HgdDqpqamh
      oqKCzs5Ozpw5gyzLPP7449TX1xMIBKwxTNOcY/83DINQKIRhGKxatcoqr9vc3Dwvefv7+xke
      Hmb9+vWWAmhsbCSTyTA5Ocn999/PmjVrqK2tRVEUqqqqZjmuDMNgdHQUIQQrV660arRcHH1z
      o6xYsQKv10s4HEaWZf7yL/+SyspKnE4n9913H6FQiGw2y4MPPkhdXR39/f3kcjkKhQIrV67k
      0UcfnRMFND4+jhDCWgSmo4VuVAF4PB5qamrwer3IskxbWxsrVqygvr6eiooK2tvbOXPmDC6X
      i+3bt+NylXorV1dXYxgGmzZtmlMzPpFIkEwm8Xq9NDU1IYSgoqJi1n2yEEzb0hf6PDNRVZWq
      qiqqqqqoqKhg2bJldHR0oCgKgUCAuro66/+zZ8/S1NTE1q1bqa2txel0IssyIyMj3H///TQ0
      NMwaO5vNWhFhbW1tCCFwu93zMq9OPxilUik+8YlP0NDQYPmAzp8/j67rbNu2jaamJoLBIC6X
      i5qamlk7hWmFNFMur9dLVVXVDcs1k7Vr15LP54lEItTV1fHJT34SVVWpra2lpaWF/w8IJj8O
      8lRJQgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
