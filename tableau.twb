<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook source-build='2020.3.2 (20203.20.1018.2303)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='4.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.percap' ordinal='12' />
            <column datatype='string' name='deaths.new.percap' ordinal='13' />
            <column datatype='string' name='cases.new.perM' ordinal='14' />
            <column datatype='string' name='deaths.new.perM' ordinal='15' />
            <column datatype='string' name='cases.new.7dsma' ordinal='16' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
            <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
            <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
            <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
            <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
            <column datatype='integer' name='cases.active' ordinal='22' />
            <column datatype='string' name='cases.active.percap' ordinal='23' />
            <column datatype='string' name='cases.active.perM' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.percap' ordinal='12' />
            <column datatype='string' name='deaths.new.percap' ordinal='13' />
            <column datatype='string' name='cases.new.perM' ordinal='14' />
            <column datatype='string' name='deaths.new.perM' ordinal='15' />
            <column datatype='string' name='cases.new.7dsma' ordinal='16' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
            <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
            <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
            <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
            <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
            <column datatype='integer' name='cases.active' ordinal='22' />
            <column datatype='string' name='cases.active.percap' ordinal='23' />
            <column datatype='string' name='cases.active.perM' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases.active (data.csv)]' value='[data.csv].[cases.active]' />
          <map key='[cases.active.perM (data.csv)]' value='[data.csv].[cases.active.perM]' />
          <map key='[cases.active.percap]' value='[data.csv].[cases.active.percap]' />
          <map key='[cases.new.7dsma]' value='[data.csv].[cases.new.7dsma]' />
          <map key='[cases.new.perM (data.csv)]' value='[data.csv].[cases.new.perM]' />
          <map key='[cases.new.perM.7dsma (data.csv)]' value='[data.csv].[cases.new.perM.7dsma]' />
          <map key='[cases.new.percap.7dsma]' value='[data.csv].[cases.new.percap.7dsma]' />
          <map key='[cases.new.percap]' value='[data.csv].[cases.new.percap]' />
          <map key='[cases.new]' value='[data.csv].[cases.new]' />
          <map key='[cases.percap]' value='[data.csv].[cases.percap]' />
          <map key='[cases]' value='[data.csv].[cases]' />
          <map key='[countyState]' value='[data.csv].[countyState]' />
          <map key='[county]' value='[data.csv].[county]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[deaths.new.7dsma]' value='[data.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.perM (data.csv)]' value='[data.csv].[deaths.new.perM]' />
          <map key='[deaths.new.perM.7dsma (data.csv)]' value='[data.csv].[deaths.new.perM.7dsma]' />
          <map key='[deaths.new.percap.7dsma]' value='[data.csv].[deaths.new.percap.7dsma]' />
          <map key='[deaths.new.percap]' value='[data.csv].[deaths.new.percap]' />
          <map key='[deaths.new]' value='[data.csv].[deaths.new]' />
          <map key='[deaths.percap]' value='[data.csv].[deaths.percap]' />
          <map key='[deaths]' value='[data.csv].[deaths]' />
          <map key='[fips]' value='[data.csv].[fips]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[state]' value='[data.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyState]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>countyState</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.percap</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.percap</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.perM</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.perM</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.percap.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.percap.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.percap.7dsma</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.percap.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.percap.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.percap.7dsma</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.perM.7dsma (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.perM.7dsma</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.perM.7dsma (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.perM.7dsma</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.active (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.active.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active.percap</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.active.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active.perM</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;' value='Σ Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' value='Case 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;' value='Σ Deaths' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;' value='Deaths 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY() - 1' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='County-Level' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.state.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[cases.active (data.csv)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
      <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[cases.new.percap.7dsma]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County and State' datatype='string' name='[countyState]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' hidden='true' name='[fips]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County, State,Cases per Capita (bins))' hidden='true' name='[Action (County, State,Cases per Capita (bins))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
          <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),County,State)' hidden='true' name='[Action (MDY(Yesterday),County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),State)' hidden='true' name='[Action (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (cases.new.7dsma,State)' hidden='true' name='[Action (cases.new.7dsma,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cases.new.7dsma:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Contiguous USA' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[state]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Northern Mariana Islands&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Puerto Rico&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cases per Capita (bins),County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County, State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1718193694053994508:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Bins' role='dimensions'>
        <folder-item name='[Cases per Capita - County (bin)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[cases.active (data.csv)]' type='field' />
        <folder-item name='[cases.active.perM (data.csv)]' type='field' />
        <folder-item name='[cases.new.7dsma]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new.7dsma]' type='field' />
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='dimensions'>
        <folder-item name='[Calculation_1718193694053994508]' type='field' />
        <folder-item name='[Calculation_204561939512385536]' type='field' />
        <folder-item name='[countyState]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='state, county' type='drillpath' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='measures'>
        <folder-item name='[Calculation_1718193694052151304]' type='field' />
        <folder-item name='[population]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='groups'>
        <folder-item name='[Continental United States]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Bins'>
          <folder-item name='[Cases per Capita - County (bin)]' type='field' />
        </folder>
        <folder name='Cases'>
          <folder-item name='[cases.active (data.csv)]' type='field' />
          <folder-item name='[cases.active.perM (data.csv)]' type='field' />
          <folder-item name='[cases.new.7dsma]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new.7dsma]' type='field' />
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
        <folder name='Metadata'>
          <folder-item name='[Calculation_1718193694052151304]' type='field' />
          <folder-item name='[Calculation_1718193694053994508]' type='field' />
          <folder-item name='[Calculation_204561939512385536]' type='field' />
          <folder-item name='[Continental United States]' type='field' />
          <folder-item name='[countyState]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[population]' type='field' />
          <folder-item name='state, county' type='drillpath' />
        </folder>
        <folder name='State-Level Fields' />
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Documents/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='12/01/2020 03:03:38 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[cases.active (data.csv)]' value='[Extract].[cases.active]' />
            <map key='[cases.active.perM (data.csv)]' value='[Extract].[cases.active.perM]' />
            <map key='[cases.active.percap]' value='[Extract].[cases.active.percap]' />
            <map key='[cases.new.7dsma]' value='[Extract].[cases.new.7dsma]' />
            <map key='[cases.new.perM (data.csv)]' value='[Extract].[cases.new.perM]' />
            <map key='[cases.new.perM.7dsma (data.csv)]' value='[Extract].[cases.new.perM.7dsma]' />
            <map key='[cases.new.percap.7dsma]' value='[Extract].[cases.new.percap.7dsma]' />
            <map key='[cases.new.percap]' value='[Extract].[cases.new.percap]' />
            <map key='[cases.new]' value='[Extract].[cases.new]' />
            <map key='[cases.percap]' value='[Extract].[cases.percap]' />
            <map key='[cases]' value='[Extract].[cases]' />
            <map key='[countyState]' value='[Extract].[countyState]' />
            <map key='[county]' value='[Extract].[county]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[deaths.new.7dsma]' value='[Extract].[deaths.new.7dsma]' />
            <map key='[deaths.new.perM (data.csv)]' value='[Extract].[deaths.new.perM]' />
            <map key='[deaths.new.perM.7dsma (data.csv)]' value='[Extract].[deaths.new.perM.7dsma]' />
            <map key='[deaths.new.percap.7dsma]' value='[Extract].[deaths.new.percap.7dsma]' />
            <map key='[deaths.new.percap]' value='[Extract].[deaths.new.percap]' />
            <map key='[deaths.new]' value='[Extract].[deaths.new]' />
            <map key='[deaths.percap]' value='[Extract].[deaths.percap]' />
            <map key='[deaths]' value='[Extract].[deaths]' />
            <map key='[population]' value='[Extract].[population]' />
            <map key='[state]' value='[Extract].[state]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='762911' timestamp-start='2020-12-01 03:03:38.808' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>380</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8124</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14768</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2348</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13951</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>313696</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83482</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyState]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>countyState</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16147</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1459</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>134</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.percap</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>235227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.percap</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65044</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.perM</remote-alias>
              <ordinal>13</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>235227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.perM</remote-alias>
              <ordinal>14</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65044</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>15</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3996</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>16</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>421</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.percap.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.percap.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.percap.7dsma</remote-alias>
              <ordinal>17</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>303880</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.percap.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.percap.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.percap.7dsma</remote-alias>
              <ordinal>18</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>104076</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.perM.7dsma (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.perM.7dsma</remote-alias>
              <ordinal>19</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>293136</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.perM.7dsma (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.perM.7dsma</remote-alias>
              <ordinal>20</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>84296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.active (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active</remote-alias>
              <ordinal>21</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4457</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.active.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active.percap</remote-alias>
              <ordinal>22</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>320242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.active.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active.perM</remote-alias>
              <ordinal>23</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>322686</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>5</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>4</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>3</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_187532707401031681:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203182039043:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:Calculation_187532707400040448:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_325455445230501890:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.perCap:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203179343874:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864367105:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864514562:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864535043:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864580100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864633349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864649734:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864666119:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864682504:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864698889:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.perCap:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='County-Level' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='deaths.percap' ordinal='8' />
                  <column datatype='string' name='countyState' ordinal='9' />
                  <column datatype='integer' name='cases.new' ordinal='10' />
                  <column datatype='integer' name='deaths.new' ordinal='11' />
                  <column datatype='string' name='cases.new.percap' ordinal='12' />
                  <column datatype='string' name='deaths.new.percap' ordinal='13' />
                  <column datatype='string' name='cases.new.perM' ordinal='14' />
                  <column datatype='string' name='deaths.new.perM' ordinal='15' />
                  <column datatype='string' name='cases.new.7dsma' ordinal='16' />
                  <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
                  <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
                  <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
                  <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
                  <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
                  <column datatype='integer' name='cases.active' ordinal='22' />
                  <column datatype='string' name='cases.active.percap' ordinal='23' />
                  <column datatype='string' name='cases.active.perM' ordinal='24' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5a' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County-Level Hot Spots&#10;</run>
            <run fontsize='12'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='New Cases 7D SMA'>
              <formatted-text>
                <run>New Cases 7D SMA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{277AF070-EEB8-474C-A442-6620AAEDDFD8}' />
    </worksheet>
    <worksheet name='5a'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[State-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6670967.0743742296' min='-14670203.825095043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6E5C1D5A-A324-4D39-AA35-1E76DE613F2C}' />
    </worksheet>
    <worksheet name='5b'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[County-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20200730</value>
                    <value>&quot;Douglas&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>123.85714285714286</value>
                    <value>&quot;POLYGON((-96.3274 41.19,-96.3656 41.2341,-96.3506 41.2652,-96.4076 41.3146,-96.4244 41.3661,-96.4707 41.3932,-96.329 41.3931,-95.9387 41.3932,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9276 41.2984,-95.9115 41.229,-95.9235 41.1909,-96.3274 41.19))&quot;</value>
                    <value>41.291899999999998</value>
                    <value>-96.150199999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-55' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{42E61C40-2836-4455-BDA4-B4B6380BBC4B}' />
    </worksheet>
    <worksheet name='5c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C85D93EA-FE10-4771-B4D8-03FB23236857}' />
    </worksheet>
    <worksheet name='5d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Deaths - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C63D437F-3477-486E-A4A0-0691D9000DA3}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{C7BE4A65-2880-415E-821D-E62636CC1C9A}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' minor-origin='#2020-05-14#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='#898989' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='subtotal' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='total' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='*m/d/yyyy' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_5' value='0' />
            <format attr='line-visibility' id='annotation_5' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='192'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases Reported: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-04 18:21:18.720#'>
                  <node-reference>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12348.994845360825'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;New York&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='119' y='1' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='114.477' text-width='166'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Peak New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-12#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>15282</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-98' y='-89' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-08-30#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2979.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-52' y='-131' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='291'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-11#</value>
                    <value>&quot;New York&quot;</value>
                    <value>4607.3826791917427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='186' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-19#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>4925.0533238208473</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='185' y='-20' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='296'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;South Dakota&quot;</value>
                    <value>8058.4722474987548</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-236' y='29' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='293'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>4077.2163886832536</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-186' y='-29' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='294'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2579.3154940962677</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='187' y='-20' />
          </annotation>
          <annotation class='point' id='15' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='2'>on</run>
              <run bold='true' fontalignment='2'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='2'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-27#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>7178.2694316500638</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-173' y='31' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0CF20289-F574-46F5-941E-C539B8F24827}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='132'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Σ Deaths: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-29#</value>
                    <value>265526</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-193' y='-64' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='140'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Σ Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-29#</value>
                    <value>13352592</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-195' y='-64' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>36648</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-103' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 2 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-16#</value>
                    <value>75490</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-162' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 3 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-27#</value>
                    <value>203990</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-140' y='-326' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Notable States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{18B2D08C-D4D2-4F82-8F4C-7C904941F167}' />
    </worksheet>
    <worksheet name='Tri-State New Cases + Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])))</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D SMA: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-07#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>3674.2857142857142</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='50' y='-105' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='1'>WAVE 3 PEAK</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='1'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878'>New Cases 7D SMA: </run>
              <run bold='true' fontalignment='1'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-27#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>4160.0</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-71' y='-93' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3AEE0153-2BB7-47F3-A410-04767AF59D72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='511' param='horz' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='58' param='vert' w='98698' x='651' y='1060'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='61475' id='35' name='Nation-Wide Daily New' w='49318' x='25252' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30709' id='146' name='Nation-Wide Cumulative New' w='24601' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30766' id='155' name='Nation-Wide Cumulative Deaths' w='24601' x='651' y='37332'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30842' id='311' name='Notable States' show-title='false' w='98698' x='651' y='68098'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57209' id='324' name='1d' w='24779' x='74570' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4266' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24779' x='74570' y='63832'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='538' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='537' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30709' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24601' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61475' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49318' x='25252' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57209' id='324' is-fixed='true' name='1d' w='24779' x='74570' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4266' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24779' x='74570' y='63832'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30766' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24601' x='651' y='37332'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30842' id='311' is-fixed='true' name='Notable States' show-title='false' w='98698' x='651' y='68098'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State- and County-Level New Cases and Deaths'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='178' param='vert' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='179' w='98698' x='651' y='1060'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='28' param='horz' w='98698' x='651' y='6623'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='42122' id='3' name='5c' w='49360' x='49989' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41719' id='10' name='5b' w='49338' x='651' y='52823'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4398' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' show-title='false' single-line='true' w='49338' x='651' y='94542'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42122' id='14' name='5a' w='49338' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4078' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49338' x='651' y='48745'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41818' id='26' name='5d' w='49360' x='49989' y='52776'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4031' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49360' x='49989' y='48745'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4346' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49360' x='49989' y='94594'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='203' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='202' param='vert' w='98698' x='651' y='1060'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='179' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42122' id='14' is-fixed='true' name='5a' w='49338' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4078' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49338' x='651' y='48745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42122' id='3' is-fixed='true' name='5c' w='49360' x='49989' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4031' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49360' x='49989' y='48745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41818' id='26' is-fixed='true' name='5d' w='49360' x='49989' y='52776'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4346' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49360' x='49989' y='94594'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41719' id='10' is-fixed='true' name='5b' w='49338' x='651' y='52823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4398' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' show-title='false' single-line='true' w='49338' x='651' y='94542'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836711AE-A8FC-40BB-A283-4102C7E23F92}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='1d'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Notable States'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='worksheet' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='dashboard' maximized='true' name='State- and County-Level New Cases and Deaths'>
      <viewpoints>
        <viewpoint name='5a'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5b'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='5d'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{3FD9FA44-6E72-44CA-A079-4E2D80E4338F}' />
    </window>
    <window class='worksheet' name='Tri-State New Cases + Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E29869-794A-42BD-9FD3-6C37C11A1D8D}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C16D9719-18FC-49FF-9506-40BA605AB53C}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27A623D-2455-4E71-9350-83AEACEE3B0B}' />
    </window>
    <window class='worksheet' hidden='true' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-16#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A69FE9-8E67-4E4E-8D8A-5DEA02588AF4}' />
    </window>
    <window class='worksheet' hidden='true' name='5a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED5063A-3620-48EF-A2E5-BD1E1DA58829}' />
    </window>
    <window class='worksheet' hidden='true' name='5b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4B5A0E-088B-4C88-A0B3-21B1C81304AE}' />
    </window>
    <window class='worksheet' hidden='true' name='5c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D64A6E8-DE6A-46B7-B86E-B23AC593D8C9}' />
    </window>
    <window class='worksheet' hidden='true' name='5d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E95A138C-5A92-427D-9DA7-5B0D9AF77F38}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Notable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{798B147B-0696-4FFF-81B2-64334898F022}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]' width='384'>
      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
      dRGNRpmcnOTRRx/l9OnT+L7P2NgYhYWF+L7P1atXyWQyrF+/nhMnTuA4zm3988wzz6zacZB5
      xhjOnj3L6Ogo69ato7CwkNraWs6dO0dHRweJRILJyUm2b99OXl4ehw4doqCggLGxMXbt2sWh
      Q4fo6elhz549HD9+nNLSUnp7e6mrq6Ovr4++vj5KS0sXDrWtRm1tbTzyyCOUl5fT1tbGxz72
      MVzX5eTJk3R1ZX/kfnx8nCeffJL29namp6eZnp7GGMOaNWs4f/4809PTPPbYYxw6dIjCwkJG
      RkbYtWsXhw8fpru7m6eeemrVXz1sjOH8+fMMDQ1RX1/PzMwMO3bsoL+/nwsXLtDf309RURHJ
      ZJLNmzfz1ltvUVpaSl9fHzU1NfT399PX10dJSQmpVIrh4WHi8Tie51FZWcmZM2cYHx/n4x//
      +PKNh9hl4LqudV3X3rhxw/b09Nz2eEdHh+3v77/jc40xNp1OW2PMHR+/12Mr4dChQ9b3/ffc
      FwSBbW5uvutzXNe97Tnz5ud3tTPG2EwmYz3Ps4cPH77t8bGxMdvW1nbX597rffM8z3qet6T1
      Lqf5fjhy5Ih1Xfe2xw8ePHjXefV9/47PsfbhWRbmBUFgDx06dNv9c3Nz9sSJE3d93r2WhXv1
      z2o0X+/w8LBtb2+/7fH29nY7PDx8x+cu9rnIZDI2CIIlrff9lvU6gLGxMdauXfue3xOA7EBh
      fX39Q7Gb934jIyOsW7fuPff5vr+wS/xRNz9wN38m17zJyUnKyspC9TsRd1oW7nX/R43rusTj
      8feMfUD2J2Tz8vJuOzT2UTY+Pk5VVdVtF/yt9nWdLgQTEQmp/x+C82w3k/iXlQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Daily New' width='384'>
      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
      UhKjRo2irq6OkSNH9vn3ZzKZ5M7jPIreR1Maer1eVFUlJCSkLz5OiF4ls4FemmQ20K7kmxBC
      iAAlASCEEAHqcwNA13Xcbrfx2O/3G6P5Ol9vbW3F6XQar3e+5vP5jJ+FEAOf3+/n1Vdf/dy2
      DU3T8Pl8XZ7bs2cPJSUlxuvnV4npun7B9p2D0c4nVWn9q9tuoPX19Xz00UdYLBZWr16Nruts
      2rSJ6OhoGhoa+OY3v0lBQQE5OTn4fD7mzp2Lpmm0trYyYcIENm/ezLJlywgNDe3r4xHistDW
      1sY777xDREQEVquV+fPnd9t+1traisfjYfDgwT3a75tvvsnbb79tPL799tu5+uqrKSoqoqam
      Br/fz9atW9m5cye//e1vCQoKIj09nT//+c9omsZ3v/td5s6dC8C7777L97//fX76059SUlJC
      TEwMDz30EDabjV//+teUlZVx5ZVXcuedd/Lcc89x8OBBAH74wx8yY8YMYxzCkCFD+OUvf0l4
      ePhF+ObEV9FtAOi6zooVK9i2bRvQMQfI4MGDWbhwIfv376eyspITJ05w00034Xa72bFjBxMn
      TsTn85GRkcHYsWMJDQ294Irg/P8Lcanrzd/lzh43aWlp1NfX8+GHH3LjjTfS1tZGeXk5wcHB
      xMXFkZeXR1NTE8nJyYwYMQJVVTl79iwRERHExcXR1tYGYFyMrVq1ipUrV+LxeLjnnntISUlB
      13V2797NokWL2LdvH/n5+TQ2Nhp3+c8//zz/8z//Q0xMDF6vF13XjRN+e3s7q1atYtq0afzf
      //0fBw8exOVyGWHwwx/+kLS0NAYPHsxzzz1HdnY2b775JnFxcezYsYNnn32WDRs2sHnzZu64
      445e+z7PJ+egT3UbAJ+9mmhpaSE6OhpFURgyZAhNTU1Ga3pwcLDRhzgjI4OwsDDWrl1rvLfz
      NZ/Ph6qqxpwjQlzK+rInyaBBg7Db7aiqSllZGUFBQRQXF9PS0oKmaWiaZnSz7rwYy8vLw+fz
      GeXsDIDOQWJ79uwhKSmJ4cOH4/V6KSoq4o477mDy5MnMnTuXH/7wh+i6TllZGaqq8pe//AWz
      2cy//du/ERwczM6dO1m8eDEpKSkA5OTkcPz4cVatWsVrr73G4sWLCQoKYurUqRQXF3PTTTfR
      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
      nhdJkiRp2P3/Fx6yj2AbtcMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
      /H/AAZF/L0ujfgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='State- and County-Level New Cases and Deaths' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3xUZb748c+U9JAOpJCQQEgIhJKAFEEQRFgFFbEsWJCi2Muq7NWV9YpX
      UVFRvNiARUERUSkuLYEgBEhIQigJBAikA+m9zSQzc87vD36ca5Zqoeh836+XL8kpz3lOmfN9
      2syjU1VVRQghhN3RX+0MCCGEuDokAAghhJ2SACCEEHZKAoAQQtgpCQBCCGGnJAAIIYSdkgAg
      hBB2SgKAEELYKbsPAKqq0traerWz8Ydis9mwWCxXOxt/ajabDavVelXzoCiK3Oc/OcNrr732
      2oU2UBSFtLQ0vvvuO3bu3EllZSVBQUE4OTmhqio2mw2dTodOp7ukA9psNoBL3v5yKyws5KOP
      PmLEiBFnrbPZbCQmJrJy5UpSUlJoaWmhc+fOly3viqKgKAp6/a+Ly8nJyVitVry9vX/nnLW1
      d+9e1qxZw8CBA9ssP3HiBD/88ANBQUG4u7tryxMTE3FycqJdu3aXJT9ms5m1a9eyZs0aMjIy
      cHV1pUOHDtfMM/ZrbNmyhfT0dHr16tVmeVpaGnFxcRw4cIDjx4/j5OSEt7f3bz7XM5/lnz97
      hw4dYsWKFQwePPg3pS2uXRd906xevZrPP/+cPn36EBsbS3Z2NgsXLgSgtraWl1566Rcd8H//
      9385fPjwr8vtZWCxWKivrz9ruaIozJ07l2+//ZaBAwcSExNDfHz8Za0tbNiwgXXr1v3q/Xfs
      2EFeXt7vmKNzs1gsNDU1nbW8sLCQb775hk8//ZSf/8JIQkICxcXFlyUvJpOJJ554gkOHDjFi
      xAjCwsJYv379ZTnWlWQymTCZTGctT0pKori4GF9fX+rq6nj55Zf54IMPtILVr3Xo0CE+/vjj
      NstaW1tpbGz8TemKa5vxYhusX7+eV155hW7dugEwatQorFYrFouF6upqysvLqaurA8DNzQ0H
      BwcsFgulpaU0NjbSqVMnrTTY2NhIWVkZ1dXV1NbWYjQacXd3R1VViouLKSoqIjQ0FH9//4uW
      aFRVpbm5mZKSEnQ6HSEhITg4OACnPzwGg4Hm5mZyc3Pp2LEjQUFBWpqKolBaWkpdXd05P2Rw
      upR7+PBhFi9ejJOTEwA33XRTm+Pn5uZSWVlJeHg4vr6+6HQ6FEWhublZO2dVVWloaKBdu3bo
      dDoaGhpwdXXl5MmTVFVV0a1bN9q1a0dzczMVFRWoqkptbS06nQ53d3ctrTN5t9lsmEymNiXs
      S1FbW0t2djY+Pj6Eh4ej0+lobGzE2dkZo9Go5bWxsVE7XktLC4cOHcJoNNKzZ09tuwu58cYb
      ycrK4vjx40RERJxzG4vFwpEjR7BYLERHR2u1yZ9fJ1VVqa+vx83NTTtuU1MTzs7OGAwGLa0V
      K1YQFhbGrFmztGs0btw47Xzq6uooLS3F3d2dwMBArYR75jqXlpbi6+tL+/bttf1bW1vJyspC
      p9PRs2dP7blSVZWamhrKysrw8/PDz8/vrOdUURQqKiqoqqqiY8eO+Pj4aNs0Njbi4uJCeXk5
      xcXFhIWFtSm922w2ioqKaG1tpaWl5bzXuF+/ftx6660A3HfffTz99NMkJCQwZswY7foePnwY
      m81Gz549tedXVVWampooKSnBaDQSHByM0WjEbDZTWVlJRUUFtbW1AG1qay0tLWRnZ+Pg4EBk
      ZKR2DW02GydPnqSlpYWgoCBcXV3/0LUue3TRT3RAQADbtm0jLCxM+yAajUaysrL44IMPKCoq
      4uWXXwbgiSeeICwsjMceewxvb288PDzIysripZdeYuDAgcyfP599+/Zx4sQJ2rVrR7du3Xj+
      +edZvXo1q1evJiYmhvnz5zN9+nRuvvnmC+YrLS2Nd999l/DwcEwmE1VVVSxYsAAvLy8WL17M
      /v37sVqtdOvWjT179vDSSy9x/fXXY7FYePXVV8nPz6dbt25agPhPCQkJ3HPPPdqH5+cUReGd
      d97h6NGjdO3alblz5/LMM89w44030tDQwNNPP82yZcu07adPn85XX32Fs7MzDz30EO3bt8fJ
      yQl3d3eOHz/OF198wapVq7SSa3p6Os7OzrzxxhvcddddrFy5UmvWSUxMZPPmzbz99tsXu3Wa
      jIwM3nzzTfr160dOTg69e/fmqaeeYv78+fTq1Yvbb78dOP2Cvf/++/nhhx+oq6vj+eefJzw8
      nKamJsxmM+++++45r8fPGQwGHnvsMT755BPmzZt3VnNWU1MTM2fOxNPTEycnJ/73f/+X+fPn
      4+7uzsSJE/nuu+9wd3cnPz+f++67j9dff53Ro0djs9mYMWMGH3zwAR06dNDuw7Zt25g9e/Y5
      XzwrVqxg3bp1dOnSRXvRz5kzB6PRyIYNG/jyyy/p0aMHhYWFDBo0iMcff5zq6mpefPFFOnXq
      hMVioba2lvfffx9XV1fWrFnDt99+S/fu3SkoKGD48OFMnz69zTFfeuklqqurCQgI4MiRI9x5
      553cf//9AMycORNFUQAIDAwkNTWVJUuW4O/vT0VFBS+++CJOTk506NCBAwcOcOedd1703rq5
      ufHYY4/x9ddfM3r0aBobG5k5cyY+Pj4YjUY+/vhjPvjgAzw8PEhMTOTjjz8mPDychoYGmpqa
      WLBgAcnJyXz55ZdUVVXx8ssvo9frOdMynJGRwbRp0wgPD6egoIB+/frx9NNPY7VaeeGFF7DZ
      bHh4eHD8+HHeeustraAo/iDUiyguLlZnzJih3nnnneqiRYvUsrIybV15ebk6depUVVEUbZnF
      YlHr6+u1v/fu3as+/fTT2t+vvvqqunfvXu3vyspK9d5779X2KSkpUSdOnKiazeYL5quhoUG1
      WCza3++99566evVqVVVV9aOPPlIXLVqk2mw2VVVVNS4uTp03b56qqqq6fPly9aWXXtL2PXbs
      mPrcc8+dlf6TTz6pHj58+JzHTkpKUh9//HEtjcLCQvXuu+9Wm5qa1NraWvXBBx/UtlUURb37
      7rtVk8mkqqqq3nXXXWp2dra2/rnnntOO880336jLly9vs+/cuXPVL7/8Ulv24osvqrt27Tpn
      vt566y01ISHhrOWTJ09Wjxw5oqqqqra2tqqTJ09W8/Ly1P3796uPP/64tt2GDRvUt99+W1VV
      VX377bfVVatWafl4/fXX1Q0bNmjnP2fOnLOOs3PnTvXNN99UFUVRH374YTU1NVVVVVWdNWuW
      mp6erqqqqi5dulRdsGCBlu6iRYvUf/3rX6qiKOo///lP9aefftKuxauvvqq+9tprqqqqakFB
      gTpt2rQ2z1pLS4t66623avf5P9XW1mrb22w2dcaMGdq1njFjhnrs2DFt28rKSlVVVXX+/Pnq
      119/reXv3Xff1a7D1KlT1fz8fG1dVVXVWcesqalpk+aECRPU1tZWVVVV9fHHH1d37typrX/v
      vffUzZs3q6qqqv/4xz/UpUuXavlds2aNunjx4rPSnzdvnnYfzqiqqlInTpyoWq1WdfHixern
      n3+u5fHTTz9Vly5dqqqqqtbX16tWq1Xbb/bs2Wp8fLyqqqqalpamzp49u0266enp6uOPP642
      NTVp5zZx4kRVURQ1NzdXnT59upbf5uZmbTvxx3FJNYDPPvuM48ePs379eiZPnswrr7zCDTfc
      cM7tjUYjlZWVrF69msrKSpqbm7UmonM5fvw4nTp1atNGbDAYqKysJCsri6ysLABuvfVWIiMj
      tW3c3NzYvXs3mZmZNDQ0kJubi6+vr7Y+NDRUK326urpqbaTJyck8/vjjF23OONOccy4HDhzg
      1ltv1dIIDg4mMDCQU6dOaaXT83FwcCA4OLjNeZyv/Van0/HXv/6V5557jvvvv5/6+noKCwvp
      378/Bw4cYNu2bQD079//vPejoaGBxsZGVFUlOzsbgLCwMLKzs7npppuoq6ujpKQEf39/4uPj
      eeSRR7RzHDVqlLZPly5dyMrK0poeLkSn0/HUU0/x4YcfEhsb22bdgQMHGDNmjJZucHAw8fHx
      6HQ6hg4dyu7duxkxYgSpqak8//zzzJo1i5aWFtLS0hg8ePA5S/rn6zh3dnYmPj6enJwcmpub
      qamp0fp7YmJimDNnDhMmTGDAgAHafTtw4AAPP/ywlr/Q0FAOHTrEhAkT6Nu3L2+++SZ33HFH
      m31+zmaz8d1331FcXKw15ZjNZhwcHNDpdISGhmrbnnkuFUUhMzOTf/zjH7+qCUVRFG0gRkZG
      BnfccUeb67tjxw7g9LO2a9cusrKyaGhooLCwkKioqAum7e/vj6ura5v8qqqKv78/9fX1zJ07
      l+HDh9O3b19cXFx+cd7F1XXxRl1Of6AjIiL429/+xk033cTcuXPP+8I5cuQIr732GpMnT6Z/
      //6YTCYWLFhw3rRbWlo4ceIEP/74o7asV69eGI1GOnfujLOzMwB+fn5t9lu6dCn79+/n3nvv
      xdfXl+3bt1/KqdDS0tJmlMz5PnCdO3cmIyODnj17nrWutbUVR0fHNmk4OjpeliFzwcHBhISE
      kJycTGVlJcOGDcPJyYn27dvTr18/AEJCQs67/5mOvH//+9/aubq4uNChQwccHBwYMWIEW7du
      ZfTo0VRVVWnn29LSQlxcnNb+DdCjR49Lznfv3r1p3749W7dubbO8paWFHTt2kJGRoS07cx6D
      Bg3is88+o6GhgebmZjp16kRwcDB5eXmkpKTw8MMPt0nLwcGBDh06cPjwYXr37t1mnaqqvPba
      a3h4eHDzzTfj7u5OZWWltn7GjBkMGDCAXbt28dVXXzF69GimT59OS0sLCQkJ2nMHaCNxnnrq
      Kfbt28euXbtYunQp48aN46GHHtK2q6ur46mnnmLs2LGMHDkSJycn9u7de9FrZbPZcHZ2bnOt
      f4n9+/fTqVMn9Ho9LS0tbN++vU0bfkxMDKqq8umnn5Kfn8/dd9+Nl5cXGzdu/FXHg9PBYMmS
      JWzbto3169fz7rvvMmfOnDaFNHHtu2AAUFWVkydPaiVWnU6Ht7e31kHl4OCAyWRCVVXt5ZKe
      ns7YsWMZO3YswFmjPxwdHduMIDnzkv/b3/6mfQDMZjNGo5GOHTue94HasWMHs2fP1vK2b9++
      SxqhExwczIEDBwgMDAQ4byl/zJgxzJo1i7Fjx+Lp6QmgDZPr1q0bqamp3HzzzVrHbkFBAQEB
      Adp2P7+GlzpCw9HRkerq6jbLdDodEydOZMWKFZhMJm3UVVBQEEFBQRdN09vbGzc3N6ZMmaL1
      ddhsNu0ejhkzhldffRW9Xq+dD5wu8Y8YMYLrr79eO49zjfw5H51Ox2OPPcY//vGPNjWeLl26
      EBoayl133XVWuh4eHvj6+vLjjz/St29f9Ho9Q4YMISEhgfLycrp27XrWMcaMGcPixYv54IMP
      tM7hM99TOH78OF9//TXOzs6oqtqmM9RqtRIbG0tsbCyPPPIIEydOZMqUKYSFhTFkyBCtw/9M
      /s7s079/f/r378+0adOYPHlymwCQm5tLSEgI999/PzqdjtbW1ksq0Ts4OODg4MCJEye0czzf
      c/mfKioqWLhwITNnzgRO1+6ioqK44447zsp/UlISH330kVaYOlMzOJOH5ubmSzomnO5odnV1
      5bbbbmPcuHGsWbOGLVu2SAD4g7loAJg9ezaenp7ExsbS0tJCfHy8VhLz9PTEYDDw8ccfExgY
      SL9+/ejevTvvv/8+7du3p6SkhF27drUZEhgbG8vChQuprq7GwcGBW265ha5du/K3v/2NkSNH
      Ultby/bt25k3b95Zpf6f69mzJ5999hnDhw9nz549pKenaw/9hdx77708//zzVFZW4uzszLp1
      6855nOjoaMaOHcvDDz/M2LFjtQ7HRYsWcdNNN7Fq1SrmzZtHVFQU69atY/To0Xh5eWGxWGht
      bWXZsmW4uLiQkJBAaWnpRfMFp0uaM2fO1NK57777ABgwYIDWUfrzJoRz2bRpkzbM1t3dnSlT
      pvDAAw/wzDPPMH78ePR6PVu3bmXatGkMGjSIoKAg3Nzc+Pbbb/n888+1dKZMmcJLL73E+PHj
      8fPzIzk5mZ49e7Z54V1MWFgYffr0YcOGDUycOBGAv/71rzz55JMUFxcTEhLC/v37cXd358UX
      XwRg6NChLFmyhHnz5gGnm7fmz5/PDTfc0KbWdcaECRNIT0/n8ccfZ8SIEVRVVZGfn897772H
      j48PixcvpkuXLiQmJpKRkcG4ceNQFIW///3vREZG0rVrVzIzM4mMjMRgMDB58mReeOEFcnJy
      6NixI6mpqYSFhTFt2jReeOEFoqOjCQsLY//+/URHR7fJS0hICNnZ2axevVp7Xs6MqrmYSZMm
      8dJLLzFx4kTq6upYs2YN48ePP+e2mzdvJicnh6qqKjIzM7n//vu57rrrtHSefvppTp48SadO
      ndi7dy8+Pj48++yzdO/enU8++YRBgwaxe/du9u7dy4MPPgicbuo6evQoS5cuxcnJiVtuueWC
      +T169CiffPIJI0eOxM3NjX//+99ndYiLa59O/fnb+RxMJhMHDhygqKgIBwcH+vXrR0hIiFay
      qa6uJiEhAZvNxujRo/Hx8WHPnj1kZGQQEBDA0KFDycnJoX///sDpks3u3bvJyckhMjKSQYMG
      YbFYSE1NJT8/Hz8/P6677jptWOX5nAlGZWVl9O3bl4CAAKxWK6GhoeTk5ODh4aG10VZWVlJT
      U6ONUDh27Bg7d+7E1dWVwYMHU19ff1YTAqC1m2dkZGAwGOjTp482hLKpqYkNGzZQUVFB7969
      GTJkiNYOXVhYyNatW3FxcWHo0KGcOnWKAQMGoNfrSUtLo1+/flppNSsri+DgYDw8PFBVlays
      LPbv34+vr2+b9vZ33nmHiIiIC44Myc7O5uTJk9rfjo6ODB06VDtORkYGbm5u9OnTh9DQUO36
      Hjx4kMLCQsaOHdvmmp84cYLdu3ejqipRUVH07NkTg8FAdXU1FRUVZ5X2qqqqqKysbLO8pqaG
      ffv20a9fP7y8vAAoLy8nKSkJs9lMeHg4MTExWn9KVVUVBw4cYPjw4RiNRlRVJTk5mc6dO9Op
      U6dznrfNZmPPnj3k5eXRrl07rX2+traWuLg4zGYz119/Paqq0qFDB7y9vWloaGDnzp2UlJQQ
      EBDATTfdpDX7nDp1it27d2Oz2YiMjKRXr17o9Xrq6urYuXMn5eXlBAYGas08P5eTk8OOHTtw
      c3Nj5MiRFBQU0LdvXxwcHNi/fz/du3fX2srz8vJwc3OjY8eOKIrS5nMTFRWF0Wg8K+Dn5ORQ
      WFgInB6q2b17d23o7BllZWUkJSXR0tJCt27d6Nu3L0ajEZPJxKZNm6iqqqJ///74+PhgMBi0
      61pUVMSuXbtwcnLi1ltvxWw2U1ZWRvfu3QG0PA4YMEAbBr1nzx5aW1uJiYmhd+/eMgz0D+ai
      AUBcXWazmcLCQl599VUWL1582b5NK4SwP5fUCSyunk2bNpGQkMDMmTPl5S+E+F1JDUAIIeyU
      3f8aqBBC2CsJAEIIYackAAghhJ2SACCEEHZKAoAQQtgpCQBCCGGnJAAIIYSdkgAghBB2SgKA
      EELYKQkAQghhp+wmALS2tl6WCVvEH4+qqphMpqudDSGuugv+GNy+fftYu3YtZrOZLl268Ne/
      /hUvLy/Kysrw9/e/aOIVFRXaT85eqoyMDCwWi/bz0b+XTZs24eXlxfDhw7VlaWlp7Ny5k2ee
      eUabjOb777/n1ltvxc3N7TcfU1VVDh06xPfff4/ZbCYyMpIpU6b8outxMevWrSM9PR2DwUDn
      zp257bbb8PHx+d3SX7ZsGTfeeCMhISGUl5fj5+d3zukXL1V9fT3z5s3joYceIiwsDDj9nJ35
      ue0rwWq18vrrr/PWW2/95rTS0tJYv349zc3NeHp6MnnyZDp37ozNZmPp0qVkZmbi6+vLU089
      1WYmup9TVZWUlBTWrVtHa2srkZGRPPTQQzg6OlJQUMDnn3+OyWRi1KhRjBs3Tvsp5uXLl1Nf
      X0+HDh2YMWMG3t7e1NXVsWDBAioqKujRowfTpk276PSn9uLbb7/FYDBw9913o9PpaGlpYdWq
      Vdq8G7+VyWRi+fLlZGdn4+rqyv33309ERMTvkvYvtXv3buLi4tDpdAQEBHDrrbe2mZjpjPN+
      kisrK1m4cCGPPvoo//jHPwgPD6esrAxFUXjzzTcvKRMffvihNgfrpTp16hQnTpz4RftcCqvV
      itVqbbOsqKiIffv2sXnzZm3Z/v37tdmyfqvCwkLeffddJk+ezKxZs4iIiOD3/u29Q4cOcccd
      dzBjxgw8PT157rnnLjgH8y914403ahPmvPfee7+55Gw2mzl69CiLFi3SrsXJkyfPmjnuclJV
      9Xe7x3V1dTz66KPMnj2b2267jXfeeQdFUYiPj6e8vJw5c+YwaNAgPvzww/OmceLECRITE3nq
      qad47bXXMJvNxMfHY7FYePvtt3nggQd4/fXXiY+P1yb7+de//sV9993H66+/Tu/evVm8eDEA
      CxYsoG/fvsyZM4eGhgbWr1//u5znn8HevXuJj4/X5syw2WyXNGXnpVBVlblz5+Lk5MQ///lP
      pk2bdtb75koqKCggNjaWJ554goiICF5++WXy8vLO2u68RYO6ujq8vLwICAhAr9czatQoFEVh
      4cKF5Obm8tZbb+Hk5MRzzz3HoUOH+PHHHzGZTAQHBzN16lTWr19PVlYW8+fPx8XFhRkzZuDm
      5saSJUvIzc0lKCiIGTNmaBNOX0hLSwtLliwhLy+PTp06MWPGDHJycqitrdXmJj5TCu7Tpw+r
      V68mNTUVT09PZsyYccGJ2u+55x7WrVvHiBEjzsrLwYMH+frrrzEYDIwfP57rrruOpUuXMmnS
      JJycnNi8eTPNzc2MHz+e1tZWVq5cqc2wBPD111/z7LPPEh4eDqDlNSsrizVr1tDc3ExQUBDT
      pk3DxcWF3bt3s3HjRlRVZdiwYYwePZra2lo++eQT6urq6NWrF5MmTTqrBuHp6Ym/vz/jx4/H
      aDSyYsUKHnvsMbKzs/nyyy8BuPXWWxk6dChms5mVK1diMpnIy8ujY8eOPPvss1itVhYvXkxp
      aSkeHh5Mnz4dPz8/MjMzGTJkCGvXruXo0aO8//77uLi4MHXqVFatWsUjjzyCXq/HYrHw5Zdf
      apPKX0hERAQODg4cOHCAmJiYNutyc3NZtGgRiqIwePBg7rjjDrZu3UpoaKg2oc/69euJjY3F
      19dXey6CgoJ49NFHcXFxYenSpbS0tHD8+HECAwPp0qULKSkpGAwGXnjhBdzc3Kivr+e9996j
      rKyM3r17c//996PX68nNzWXJkiUoisKoUaMYOXIkp06dIicnB2dnZzZt2sTMmTNxd3cH4Oab
      b9byHhgYqE3/uX37dp566ilcXV0ZMWKEds3PNXF6UFAQf//737WaVWhoKA0NDZw6dQovLy9t
      nuZ7772X7du3ExUVxf/8z/9oJfsuXbqQmppKS0sL+fn5/P3vf8fBwYH77ruPuXPnnndmMXs0
      ZcoUvvjiC/75z3+2WW42m1m8eDFFRUUEBwfzyCOPUFhYSHFxMSNGjKChoYH58+fzzDPP4OHh
      QWJiIkFBQdpnu6ioiJqaGh544AF0Oh0eHh7A6YLnF198QWFhIXq9njvvvJOYmBgaGxtZtGgR
      lZWVeHt78/DDD+Pp6Ul8fDwJCQm4u7szbdo0QkJCOHr0KN9++y0Wi4WePXsyadKkS5p4x93d
      nQ4dOmiTIC1ZsoQ33niDXbt2kZCQgMViOX8NoHPnzri6uvLCCy/w008/YTab0el03HvvvQQH
      B/Poo48ydepUdDodLi4uTJ8+nVdeeQW9Xk9CQgJjxowhPDycyZMn88gjj+Dh4cEPP/yAh4cH
      c+bMITw8nK+++uqSbtp3332Ht7c3c+bMISwsjOXLlxMYGMj333+PoiioqsqqVau0KfxycnJ4
      4403uP3225k/f/5FL9LNN9/M6tWr2yxvbGzkk08+YebMmfzXf/0Xixcvpqmpibq6Og4ePIiq
      qvz0009s3boVm81GXl4eJSUl2v6KopCbm3vOmcacnJyYOnUqr7zyCq6urmzatEl7gT777LO8
      +OKL+Pn5oaoq8+bNY/To0bzxxhuUlZWRnJx8wfMZNmwYBw8epLW1lffff59nn32WV155hZUr
      V1JVVYXFYiEhIYHrr7+e119/XXtRbt++HRcXF1555RUmTJiglV4yMzNpbm5m3Lhx2tSI06dP
      x8fHh1OnTnHw4EHgdM2psbHxku4nwNSpU/nyyy/bzJdssViYM2cOjz76KP/93/9NRkYGqamp
      2jzBcLovZ+PGjfj6+vL9999rz0WXLl34+uuvAUhKSiI2NpbXX3+dkpISWltbmTVrFlFRUaSk
      pGj3595772X27Nnk5+ezY8cOLBYL77//Po899hizZs1i/fr1FBcXU1NTw7Jly1i/fj1Tpkw5
      q6CwadMmPv74Y9544w2ef/559Ho9jY2NWs3JaDTSvn37804PaTAY0Ov1KIrCli1b2LBhA7fc
      cgulpaVtZgQLCwujpKQEnU6nvfwPHTrE3LlzmTRpEvX19Xh7e2vNmT4+PtLX8R/69OlDa2sr
      R44cabP8m2++ITAwkDfffJPAwEBWrlxJ+/btWbt2LaqqcuDAAXJycrQaw8aNG7UZ7uD0bHwx
      MTHnfDHHxsbyX//1Xzz66KN89tlnWCwW4uLi8Pf355VXXmHs2LHYbDaOHTvGtm3beOONN3jo
      oYd4//33URSFRYsW8eCDD/LSSy9phaBfKjo6muLiYhRFwcvLiyeffJKXX375/AHAaDQya9Ys
      HnvsMTIyMnjiiScoLS3F09MTR0dHfHx88Pb21tqYUlNTWbZsGSdPnqS0tJR27drh5OSEt7e3
      1g+QlpZGt27dOHr0KJ06deLAgQPk5eWxYMECFixYQE1NzTnzkp6eTteuXTl69CjBwcHaPKdu
      bm6UlJRQVVWFzWYjICCAlJQUevbsybFjx4DTTUoXm2B73LhxJCcntzn+sWPHCH46aeMAACAA
      SURBVAgIoKSkhKKiIoKCgjh27BhDhgwhJSWF6upqvLy86Ny5M6dOnSIlJYUhQ4a0SVdV1XM+
      EAEBAaSnp/PVV19RWFhIaWkpBoMBHx8fli9fTn5+Pr169QJONyM5Ojpy9OhRunXrRnp6+gXP
      Ra/Xo6oqBQUF+Pr6UlFRQX5+PiEhIdpDHxISQp8+fXBxcSEgIICWlhaCg4NJTU1ly5YteHh4
      aBPIn+Hh4dHmfur1eu6++27WrFmDqqrEx8czbtw4bfucnBztvp7rxRcUFETXrl3bTExeUFBA
      9+7dCQsLw83NjYkTJ5KSkkKvXr3Iy8vDZDKRlZVFVFQUTk5O7Nmzp81zsW/fPlRVxd3dXTs/
      X19fBgwYgJubGx06dKC1tRUALy8vQkJCcHV15Z577mH//v0UFxfj6upKbW0teXl5hIaGkpWV
      BYCbmxuvvvoqYWFhZ/WBODk50a5dOxwdHcnKytKatn5+73U63QWb/8xmM3PnziU5OZm5c+dq
      /QXnS0NRFJYvX85nn33Ga6+9pk3DKVMyXty0adP48ssv27wX9u3bp5W2O3furL1jLBYLzc3N
      pKWl8dRTT7Fnzx4aGhqwWq34+vpq+yuKcs6+MYPBgIODA99//z0//vgjjY2NmM1mOnfuzI4d
      O/jpp59o3749vr6+pKam0qtXL44fP05jYyNNTU2YTCY6d+7MihUrOHToENHR0W3ucVxcHAsW
      LOC777674DnrdDrt+fH39+enn37iq6++unAnsF6vJzIyksjISOLi4ti4cSNTpkw5a7u3336b
      66+/nttvv53s7OxztjXB6erQsWPHtBLKhAkTaN++PaNHjwY4b8frf+531113ATBmzBi2bNmC
      u7s7I0eORKfToSgKBQUFWsnn9ttvv2i7u5OTE3fffbdWgoTTN7SyslJ7aUZFReHv74+vry9f
      fPEF6enpxMbG4uLiQmpqKllZWVq+4PQFDw4O5ujRo2dNHv7ee+8RGxvLuHHjyM/P5+DBg+j1
      embPnk1GRgaJiYl88803zJ07F5PJxNGjR7V9zzQjnU9aWhpRUVHYbDZqamq0/IeGhtK5c+fz
      7hcdHc0bb7xBSkoKs2fP5sEHH2Tw4MFnbffza9mzZ08WLlxIUVER5eXlWnUYoGPHjtp9PVcz
      n06n48EHH+Tll19m1KhRODg4oChKm+Ytg8GAoig4ODgQExPD/v372bVrl9akcb7n4pdqbW3F
      0dERm81GbW2tds0CAgIIDw+nqamJ6Ojoc05KDzBy5EgtnSeeeIKbb74ZNzc3qqurCQoKwmaz
      UVlZ2abE+HOqqvLWW2/Ro0cP7rnnHu1F0qFDB4qKirTtCgsL8ff3R1VVvv32WwoLC5k3b56W
      r3bt2lFTU4PVasVoNFJXV6fNcyz+T5cuXfDz8yMtLU1bZrFYOHbsmFazOvOM9evXj3379lFZ
      WUlMTAwrV67kwIED9OrVq82LuGvXrvz0009nFfqOHDnC0qVLmTFjBh4eHuTk5ABw3XXXERQU
      REpKCrNmzeLRRx9FURSKi4u1+zl69GiMRiNPPvkkhw8fJiUlhWXLlvHee+9p78revXvTpUuX
      i97nnJwc2rdvj6qqvP7669x7773ccMMN568B5OTkkJiYSHNzMyaTiZycHDp27Ki199bU1NDa
      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
      5s6diw0bNqC7uxs/+MEP0NDQgGeeeQZvvfUWAGDFihX41re+hddeew3r1q3DD3/4QyiKgqee
      egovvfQSPv74YzzyyCOMub700kuIRqN488030dDQgJdffhkff/wxdu3ahUcffZTR85e//AX/
      +Mc/TD3PU089Fa2trWhsbMz4vLe3F7fddhu2bNmCP/3pT/jVr34FRVFw9913IxQKAeh3ET78
      8MMAtNfF3r178Y1vfAN//etf8cknn+C6667Dr3/9a2zbtg1Lly5lQvjNN9/Ep59+imXLluEn
      P/kJFEVBMBjE0qVLsWfPHvzf//0fa5f65JNPYvny5bj11lsznrHFYoHNZkMymURjYyPefvtt
      nHLKKWhtbcWUKVOYkDz11FOxY8cO3fsxZ84cxvwbGhrQ2dmJkpISbN26FQsWLIAgCLDZbJgz
      Zw727duHiRMnMubf29uLtWvXYtKkSdi6dStOP/10CIIAQRCwYMECbN261dQzGS2YO3cukskk
      tm/fnvH5iy++iNraWvz4xz9GbW0tXn75ZVRVVeG1116DoijYuHEj9uzZg88//xwA8Le//c2w
      w5jFYsGJJ56InTt3orm5Ga+++iruvfdefOc738Evf/lLJJNJ2Gw2XHnllbj77rsxZcoU/PnP
      f8bkyZNx3nnn4YwzzsANN9yAE044AUB/w/qrr74a9913H959911IkoSVK1eipKQEd911Fy69
      9NK8rDldCyAYDGb4YQnvv/8+Fi5ciCuuuAJAP6NvaGgAoN+qbcGCBfje974HANixYwcikQiu
      vPJKrFu3DjfffDNsNhsURcGzzz6LAwcOoLa2Fh999BHuueceRKNR1lXH4xnY35K08EcffZR1
      4Fm/fj0WLVrEmjpv2rQJxx57LCwWC5YtW8a0qdraWrzzzju45pprdG9QVVUVjj/+eKxYsQIn
      nngi+/zVV1/F1VdfjZNOOgkXX3wx7r77bpxzzjlIp9Po6+vD1q1bsWTJEnz66ac455xzsG7d
      Otxxxx0ZdGvdX4vFgrvuuotpzA899BA6OjqwY8cOLFq0COeccw6zarZu3Qq/349vf/vbjBG2
      t7djzBj95tITJkxAV1cX3n77bVx22WU466yzEI/H8b3vfQ+XXHIJAOArX/kKLr74YgDAzTff
      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
      Z7xdIR0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Tri-State New Cases + Deaths' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
