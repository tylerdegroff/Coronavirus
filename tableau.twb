<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook source-build='2020.3.2 (20203.20.1018.2303)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='4.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='data.state' name='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.7dsma' ordinal='12' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='fips' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='county' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
              <column datatype='integer' name='population' ordinal='6' />
              <column datatype='real' name='cases.percap' ordinal='7' />
              <column datatype='real' name='deaths.percap' ordinal='8' />
              <column datatype='string' name='countyState' ordinal='9' />
              <column datatype='integer' name='cases.new' ordinal='10' />
              <column datatype='integer' name='deaths.new' ordinal='11' />
              <column datatype='string' name='cases.new.7dsma' ordinal='12' />
              <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr' name='data.state.csv' table='[data.state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='dateState' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='cases' ordinal='3' />
              <column datatype='integer' name='deaths' ordinal='4' />
              <column datatype='integer' name='pop' ordinal='5' />
              <column datatype='real' name='cases.perCap' ordinal='6' />
              <column datatype='real' name='deaths.perCap' ordinal='7' />
              <column datatype='integer' name='cases.new' ordinal='8' />
              <column datatype='integer' name='deaths.new' ordinal='9' />
              <column datatype='real' name='cases.new.perCap' ordinal='10' />
              <column datatype='real' name='deaths.new.perCap' ordinal='11' />
              <column datatype='real' name='cases.new.perM' ordinal='12' />
              <column datatype='real' name='deaths.new.perM' ordinal='13' />
              <column datatype='real' name='cases.new.7dsma' ordinal='14' />
              <column datatype='real' name='deaths.new.7dsma' ordinal='15' />
              <column datatype='real' name='cases.new.perCap.7dsma' ordinal='16' />
              <column datatype='real' name='deaths.new.perCap.7dsma' ordinal='17' />
              <column datatype='real' name='cases.new.perM.7dsma' ordinal='18' />
              <column datatype='real' name='deaths.new.perM.7dsma' ordinal='19' />
              <column datatype='integer' name='cases.active' ordinal='20' />
              <column datatype='real' name='cases.active.perCap' ordinal='21' />
              <column datatype='real' name='cases.active.perM' ordinal='22' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases (data.state.csv)]' value='[data.state.csv].[cases]' />
          <map key='[cases.active.perCap]' value='[data.state.csv].[cases.active.perCap]' />
          <map key='[cases.active.perM]' value='[data.state.csv].[cases.active.perM]' />
          <map key='[cases.active]' value='[data.state.csv].[cases.active]' />
          <map key='[cases.new (data.state.csv)]' value='[data.state.csv].[cases.new]' />
          <map key='[cases.new.7dsma (data.state.csv)]' value='[data.state.csv].[cases.new.7dsma]' />
          <map key='[cases.new.7dsma]' value='[data.csv].[cases.new.7dsma]' />
          <map key='[cases.new.perCap.7dsma]' value='[data.state.csv].[cases.new.perCap.7dsma]' />
          <map key='[cases.new.perCap]' value='[data.state.csv].[cases.new.perCap]' />
          <map key='[cases.new.perM.7dsma]' value='[data.state.csv].[cases.new.perM.7dsma]' />
          <map key='[cases.new.perM]' value='[data.state.csv].[cases.new.perM]' />
          <map key='[cases.new]' value='[data.csv].[cases.new]' />
          <map key='[cases.perCap]' value='[data.state.csv].[cases.perCap]' />
          <map key='[cases.percap]' value='[data.csv].[cases.percap]' />
          <map key='[cases]' value='[data.csv].[cases]' />
          <map key='[countyState]' value='[data.csv].[countyState]' />
          <map key='[county]' value='[data.csv].[county]' />
          <map key='[date (data.state.csv)]' value='[data.state.csv].[date]' />
          <map key='[dateState]' value='[data.state.csv].[dateState]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[deaths (data.state.csv)]' value='[data.state.csv].[deaths]' />
          <map key='[deaths.new (data.state.csv)]' value='[data.state.csv].[deaths.new]' />
          <map key='[deaths.new.7dsma (data.state.csv)]' value='[data.state.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.7dsma]' value='[data.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.perCap.7dsma]' value='[data.state.csv].[deaths.new.perCap.7dsma]' />
          <map key='[deaths.new.perCap]' value='[data.state.csv].[deaths.new.perCap]' />
          <map key='[deaths.new.perM.7dsma]' value='[data.state.csv].[deaths.new.perM.7dsma]' />
          <map key='[deaths.new.perM]' value='[data.state.csv].[deaths.new.perM]' />
          <map key='[deaths.new]' value='[data.csv].[deaths.new]' />
          <map key='[deaths.perCap]' value='[data.state.csv].[deaths.perCap]' />
          <map key='[deaths.percap]' value='[data.csv].[deaths.percap]' />
          <map key='[deaths]' value='[data.csv].[deaths]' />
          <map key='[fips]' value='[data.csv].[fips]' />
          <map key='[pop]' value='[data.state.csv].[pop]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[state (data.state.csv)]' value='[data.state.csv].[state]' />
          <map key='[state]' value='[data.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyState]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>countyState</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dateState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dateState]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>dateState</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.perCap</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.perCap</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perCap</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perCap</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perM</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perM</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.7dsma (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perCap.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perCap.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perCap.7dsma</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perCap.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perCap.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perCap.7dsma</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perM.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perM.7dsma</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perM.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perM.7dsma</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.active]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.active.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active.perCap</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.active.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active.perM</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;' value='Σ Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' value='Case 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;' value='Σ Deaths' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;' value='Deaths 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='Death Rate' datatype='real' default-format='p0.00%' name='[Calculation_187532707400040448]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[deaths (data.state.csv)] / [cases (data.state.csv)]' />
      </column>
      <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY() - 1' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='County-Level' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.state.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' role='measure' type='quantitative' />
      <column caption='s_Cases Cumulative' datatype='integer' name='[cases (data.state.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
      <column datatype='integer' name='[cases.active]' role='measure' type='quantitative' />
      <column caption='s_Cases New' datatype='integer' name='[cases.new (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[cases.new.perCap.7dsma]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[cases.new.perCap]' role='measure' type='quantitative' />
      <column datatype='real' name='[cases.new.perM.7dsma]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='s_Cases per Capita' datatype='real' name='[cases.perCap]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County and State' datatype='string' name='[countyState]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
      </column>
      <column caption='s_Date' datatype='date' name='[date (data.state.csv)]' role='dimension' type='ordinal' />
      <column caption='s_Date, State' datatype='string' name='[dateState]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='s_Deaths Cumulative' datatype='integer' name='[deaths (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='s_Deaths New' datatype='integer' name='[deaths.new (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='s_Deaths per Capita' datatype='real' name='[deaths.perCap]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' hidden='true' name='[fips]' role='measure' type='quantitative' />
      <column caption='s_Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='s_State' datatype='string' name='[state (data.state.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_187532707400040448]' derivation='Sum' name='[sum:Calculation_187532707400040448:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases (data.state.csv)]' derivation='Sum' name='[sum:cases (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.active]' derivation='Sum' name='[sum:cases.active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new (data.state.csv)]' derivation='Sum' name='[sum:cases.new (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perCap.7dsma]' derivation='Sum' name='[sum:cases.new.perCap.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perCap]' derivation='Sum' name='[sum:cases.new.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perM.7dsma]' derivation='Sum' name='[sum:cases.new.perM.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.perCap]' derivation='Sum' name='[sum:cases.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths (data.state.csv)]' derivation='Sum' name='[sum:deaths (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new (data.state.csv)]' derivation='Sum' name='[sum:deaths.new (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.perCap]' derivation='Sum' name='[sum:deaths.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pop]' derivation='Sum' name='[sum:pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County, State,Cases per Capita (bins))' hidden='true' name='[Action (County, State,Cases per Capita (bins))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
          <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),County,State)' hidden='true' name='[Action (MDY(Yesterday),County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),State)' hidden='true' name='[Action (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (cases.new.7dsma,State)' hidden='true' name='[Action (cases.new.7dsma,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cases.new.7dsma:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Contiguous USA' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[state]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Northern Mariana Islands&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Puerto Rico&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cases per Capita (bins),County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County, State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1718193694053994508:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Bins' role='dimensions'>
        <folder-item name='[Cases per Capita - County (bin)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[cases.new.7dsma]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new.7dsma]' type='field' />
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='dimensions'>
        <folder-item name='[Calculation_1718193694053994508]' type='field' />
        <folder-item name='[Calculation_204561939512385536]' type='field' />
        <folder-item name='[countyState]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='state, county' type='drillpath' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='measures'>
        <folder-item name='[Calculation_1718193694052151304]' type='field' />
        <folder-item name='[population]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='groups'>
        <folder-item name='[Continental United States]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='State-Level Fields' role='dimensions'>
        <folder-item name='[date (data.state.csv)]' type='field' />
        <folder-item name='[dateState]' type='field' />
        <folder-item name='[state (data.state.csv)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='State-Level Fields' role='measures'>
        <folder-item name='[cases (data.state.csv)]' type='field' />
        <folder-item name='[cases.new (data.state.csv)]' type='field' />
        <folder-item name='[cases.perCap]' type='field' />
        <folder-item name='[deaths (data.state.csv)]' type='field' />
        <folder-item name='[deaths.new (data.state.csv)]' type='field' />
        <folder-item name='[deaths.perCap]' type='field' />
        <folder-item name='[pop]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Bins'>
          <folder-item name='[Cases per Capita - County (bin)]' type='field' />
        </folder>
        <folder name='Cases'>
          <folder-item name='[cases.new.7dsma]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new.7dsma]' type='field' />
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
        <folder name='Metadata'>
          <folder-item name='[Calculation_1718193694052151304]' type='field' />
          <folder-item name='[Calculation_1718193694053994508]' type='field' />
          <folder-item name='[Calculation_204561939512385536]' type='field' />
          <folder-item name='[Continental United States]' type='field' />
          <folder-item name='[countyState]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[population]' type='field' />
          <folder-item name='state, county' type='drillpath' />
        </folder>
        <folder name='State-Level Fields'>
          <folder-item name='[cases (data.state.csv)]' type='field' />
          <folder-item name='[cases.new (data.state.csv)]' type='field' />
          <folder-item name='[cases.perCap]' type='field' />
          <folder-item name='[date (data.state.csv)]' type='field' />
          <folder-item name='[dateState]' type='field' />
          <folder-item name='[deaths (data.state.csv)]' type='field' />
          <folder-item name='[deaths.new (data.state.csv)]' type='field' />
          <folder-item name='[deaths.perCap]' type='field' />
          <folder-item name='[pop]' type='field' />
          <folder-item name='[state (data.state.csv)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Documents/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='11/20/2020 02:55:47 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
            <relation name='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' table='[Extract].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[cases (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases]' />
            <map key='[cases.active.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active.perCap]' />
            <map key='[cases.active.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active.perM]' />
            <map key='[cases.active]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active]' />
            <map key='[cases.new (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new]' />
            <map key='[cases.new.7dsma (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.7dsma]' />
            <map key='[cases.new.7dsma]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.new.7dsma]' />
            <map key='[cases.new.perCap.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perCap.7dsma]' />
            <map key='[cases.new.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perCap]' />
            <map key='[cases.new.perM.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perM.7dsma]' />
            <map key='[cases.new.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perM]' />
            <map key='[cases.new]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.new]' />
            <map key='[cases.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.perCap]' />
            <map key='[cases.percap]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.percap]' />
            <map key='[cases]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases]' />
            <map key='[countyState]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[countyState]' />
            <map key='[county]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[county]' />
            <map key='[date (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[date]' />
            <map key='[dateState]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[dateState]' />
            <map key='[date]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[date]' />
            <map key='[deaths (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths]' />
            <map key='[deaths.new (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new]' />
            <map key='[deaths.new.7dsma (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.7dsma]' />
            <map key='[deaths.new.7dsma]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.new.7dsma]' />
            <map key='[deaths.new.perCap.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perCap.7dsma]' />
            <map key='[deaths.new.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perCap]' />
            <map key='[deaths.new.perM.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perM.7dsma]' />
            <map key='[deaths.new.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perM]' />
            <map key='[deaths.new]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.new]' />
            <map key='[deaths.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.perCap]' />
            <map key='[deaths.percap]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.percap]' />
            <map key='[deaths]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths]' />
            <map key='[pop]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[pop]' />
            <map key='[population]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[population]' />
            <map key='[state (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[state]' />
            <map key='[state]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[state]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='744733' timestamp-start='2020-11-20 14:55:47.181' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8602</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14670</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2305</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15085</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>290413</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85976</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyState]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>countyState</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1372</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>167</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3540</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>324</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dateState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dateState]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>dateState</remote-alias>
              <ordinal>13</ordinal>
              <family>data.state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13434</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>14</ordinal>
              <family>data.state.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>362</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>15</ordinal>
              <family>data.state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>16</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6094</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>17</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2817</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[pop]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>pop</remote-alias>
              <ordinal>18</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>591</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.perCap</remote-alias>
              <ordinal>19</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4555</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.perCap</remote-alias>
              <ordinal>20</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3264</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>21</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2232</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>22</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perCap</remote-alias>
              <ordinal>23</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5817</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perCap</remote-alias>
              <ordinal>24</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2024</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perM</remote-alias>
              <ordinal>25</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5817</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perM</remote-alias>
              <ordinal>26</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2024</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>27</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4393</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>28</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>691</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perCap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perCap.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perCap.7dsma</remote-alias>
              <ordinal>29</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6103</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perCap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perCap.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perCap.7dsma</remote-alias>
              <ordinal>30</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2872</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perM.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perM.7dsma</remote-alias>
              <ordinal>31</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6103</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perM.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perM.7dsma</remote-alias>
              <ordinal>32</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2872</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.active]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active</remote-alias>
              <ordinal>33</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4683</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active.perCap</remote-alias>
              <ordinal>34</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4037</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active.perM</remote-alias>
              <ordinal>35</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4037</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>5</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>4</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>3</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_187532707401031681:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203182039043:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:Calculation_187532707400040448:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_325455445230501890:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.perCap:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203179343874:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864367105:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864514562:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864535043:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864580100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864633349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864649734:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864666119:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864682504:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864698889:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.perCap:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='County-Level' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='deaths.percap' ordinal='8' />
                  <column datatype='string' name='countyState' ordinal='9' />
                  <column datatype='integer' name='cases.new' ordinal='10' />
                  <column datatype='integer' name='deaths.new' ordinal='11' />
                  <column datatype='string' name='cases.new.7dsma' ordinal='12' />
                  <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
            </properties>
          </object>
          <object caption='data.state.csv' id='data.state.csv_09D45CB279DD4396BA9415ED380F7A05'>
            <properties context=''>
              <relation connection='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr' name='data.state.csv' table='[data.state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='dateState' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='integer' name='cases' ordinal='3' />
                  <column datatype='integer' name='deaths' ordinal='4' />
                  <column datatype='integer' name='pop' ordinal='5' />
                  <column datatype='real' name='cases.perCap' ordinal='6' />
                  <column datatype='real' name='deaths.perCap' ordinal='7' />
                  <column datatype='integer' name='cases.new' ordinal='8' />
                  <column datatype='integer' name='deaths.new' ordinal='9' />
                  <column datatype='real' name='cases.new.perCap' ordinal='10' />
                  <column datatype='real' name='deaths.new.perCap' ordinal='11' />
                  <column datatype='real' name='cases.new.perM' ordinal='12' />
                  <column datatype='real' name='deaths.new.perM' ordinal='13' />
                  <column datatype='real' name='cases.new.7dsma' ordinal='14' />
                  <column datatype='real' name='deaths.new.7dsma' ordinal='15' />
                  <column datatype='real' name='cases.new.perCap.7dsma' ordinal='16' />
                  <column datatype='real' name='deaths.new.perCap.7dsma' ordinal='17' />
                  <column datatype='real' name='cases.new.perM.7dsma' ordinal='18' />
                  <column datatype='real' name='deaths.new.perM.7dsma' ordinal='19' />
                  <column datatype='integer' name='cases.active' ordinal='20' />
                  <column datatype='real' name='cases.active.perCap' ordinal='21' />
                  <column datatype='real' name='cases.active.perM' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' table='[Extract].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[date]' />
                <expression op='[date (data.state.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[state]' />
                <expression op='[state (data.state.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='data.csv_62B351438B2C46A48040691DC829D2A9' />
            <second-end-point object-id='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5a' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>State-Level New Case Density</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{B06C2684-0D41-49AE-A343-241CCF03CE02}' />
    </worksheet>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County-Level Hot Spots&#10;</run>
            <run fontsize='12'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='New Cases 7D SMA'>
              <formatted-text>
                <run>New Cases 7D SMA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{277AF070-EEB8-474C-A442-6620AAEDDFD8}' />
    </worksheet>
    <worksheet name='5a'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[State-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6670967.0743742296' min='-14670203.825095043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6E5C1D5A-A324-4D39-AA35-1E76DE613F2C}' />
    </worksheet>
    <worksheet name='5b'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[County-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20200730</value>
                    <value>&quot;Douglas&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>123.85714285714286</value>
                    <value>&quot;POLYGON((-96.3274 41.19,-96.3656 41.2341,-96.3506 41.2652,-96.4076 41.3146,-96.4244 41.3661,-96.4707 41.3932,-96.329 41.3931,-95.9387 41.3932,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9276 41.2984,-95.9115 41.229,-95.9235 41.1909,-96.3274 41.19))&quot;</value>
                    <value>41.291899999999998</value>
                    <value>-96.150199999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-55' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{42E61C40-2836-4455-BDA4-B4B6380BBC4B}' />
    </worksheet>
    <worksheet name='5c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C85D93EA-FE10-4771-B4D8-03FB23236857}' />
    </worksheet>
    <worksheet name='5d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Deaths - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C63D437F-3477-486E-A4A0-0691D9000DA3}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Missouri&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Virgin Islands&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{C7BE4A65-2880-415E-821D-E62636CC1C9A}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' minor-origin='#2020-05-14#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='#898989' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='subtotal' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='total' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='*m/d/yyyy' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_5' value='0' />
            <format attr='line-visibility' id='annotation_5' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='192'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases Reported: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-04 18:21:18.720#'>
                  <node-reference>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12348.994845360825'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;New York&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='119' y='1' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='114.477' text-width='166'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Peak New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-12#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>15282</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-98' y='-89' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-08-30#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2979.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-52' y='-131' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='291'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-11#</value>
                    <value>&quot;New York&quot;</value>
                    <value>4607.3826791917427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='186' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-19#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>4925.0533238208473</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='185' y='-20' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='296'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;South Dakota&quot;</value>
                    <value>8058.4722474987548</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-236' y='29' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='293'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>4077.2163886832536</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-186' y='-29' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='294'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2579.3154940962677</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='187' y='-20' />
          </annotation>
          <annotation class='point' id='15' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='2'>on</run>
              <run bold='true' fontalignment='2'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='2'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-27#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>7178.2694316500638</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-173' y='31' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0CF20289-F574-46F5-941E-C539B8F24827}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='128'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Deaths: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-19#</value>
                    <value>251264</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-145' y='-53' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>36648</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-103' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 2 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-16#</value>
                    <value>75490</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-162' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Notable States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{18B2D08C-D4D2-4F82-8F4C-7C904941F167}' />
    </worksheet>
    <worksheet name='Tri-State New Cases + Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])))</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{3AEE0153-2BB7-47F3-A410-04767AF59D72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='511' param='horz' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='58' param='vert' w='98698' x='651' y='1060'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='61476' id='35' name='Nation-Wide Daily New' w='49318' x='25254' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30710' id='146' name='Nation-Wide Cumulative New' w='24603' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30766' id='155' name='Nation-Wide Cumulative Deaths' w='24603' x='651' y='37333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30841' id='311' name='Notable States' show-title='false' w='98698' x='651' y='68099'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57210' id='324' name='1d' w='24777' x='74572' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4266' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24777' x='74572' y='63833'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='532' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='531' param='vert' w='98698' x='651' y='1060'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30710' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24603' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61476' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49318' x='25254' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57210' id='324' is-fixed='true' name='1d' w='24777' x='74572' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4266' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24777' x='74572' y='63833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30766' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24603' x='651' y='37333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30841' id='311' is-fixed='true' name='Notable States' show-title='false' w='98698' x='651' y='68099'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State- and County-Level New Cases and Deaths'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='178' param='vert' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='179' w='98698' x='651' y='1060'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='28' param='horz' w='98698' x='651' y='6623'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='42123' id='3' name='5c' w='49359' x='49990' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41718' id='10' name='5b' w='49339' x='651' y='52825'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4397' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49339' x='651' y='94543'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42123' id='14' name='5a' w='49339' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4079' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49339' x='651' y='48746'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41818' id='26' name='5d' w='49359' x='49990' y='52777'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4031' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49359' x='49990' y='48746'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4345' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49359' x='49990' y='94595'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='197' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='196' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='179' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42123' id='14' is-fixed='true' name='5a' w='49339' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4079' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49339' x='651' y='48746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42123' id='3' is-fixed='true' name='5c' w='49359' x='49990' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4031' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49359' x='49990' y='48746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41818' id='26' is-fixed='true' name='5d' w='49359' x='49990' y='52777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4345' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49359' x='49990' y='94595'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41718' id='10' is-fixed='true' name='5b' w='49339' x='651' y='52825'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4397' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49339' x='651' y='94543'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836711AE-A8FC-40BB-A283-4102C7E23F92}' />
    </dashboard>
  </dashboards>
  <windows source-height='23'>
    <window class='dashboard' maximized='true' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='1d'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Notable States'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='worksheet' name='1c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59732700-92E5-42F2-AB6B-3436D85DF36F}' />
    </window>
    <window class='worksheet' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='dashboard' name='State- and County-Level New Cases and Deaths'>
      <viewpoints>
        <viewpoint name='5a'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5b'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='5d'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3FD9FA44-6E72-44CA-A079-4E2D80E4338F}' />
    </window>
    <window class='worksheet' name='Tri-State New Cases + Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E29869-794A-42BD-9FD3-6C37C11A1D8D}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-10#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C16D9719-18FC-49FF-9506-40BA605AB53C}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27A623D-2455-4E71-9350-83AEACEE3B0B}' />
    </window>
    <window class='worksheet' hidden='true' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-16#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A69FE9-8E67-4E4E-8D8A-5DEA02588AF4}' />
    </window>
    <window class='worksheet' hidden='true' name='5a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED5063A-3620-48EF-A2E5-BD1E1DA58829}' />
    </window>
    <window class='worksheet' hidden='true' name='5b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4B5A0E-088B-4C88-A0B3-21B1C81304AE}' />
    </window>
    <window class='worksheet' hidden='true' name='5c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D64A6E8-DE6A-46B7-B86E-B23AC593D8C9}' />
    </window>
    <window class='worksheet' hidden='true' name='5d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E95A138C-5A92-427D-9DA7-5B0D9AF77F38}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Notable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{798B147B-0696-4FFF-81B2-64334898F022}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='1c' width='384'>
      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
      /wetEnOTeDbr0AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXQb1303/O9gsBAACe77JpGUuGqxJGqzJVne7caLnMRJ3MZZ2qRp2qZt
      2rRv+3ZJzpO2SdM0r99sbps0T9s4tVM/jlPHkZdYi2VroUSKpMR933cSBEnsM/P8AWEsigBI
      SgRBCN/POToSocuZe2cu7m/unTt3BEVRFBARUczRRDoDREQUGQwAREQxigGAiChGMQAQEcUo
      BgAiohjFAEBEFKMYAIhow1AUBVevXsULL7yApqYmyLKMqampgGknJychy/I65/D2wgBARBvG
      1NQUfvCDH6CkpAR9fX3o6+vDV7/6VXR2dsLtdqOxsRGdnZ1wOBz4u7/7O9TV1cFut2N0dBSX
      Ll2CJEmRLkJUYQAgog0jLi4ODocDV69exf79+zE+Po7Z2Vl0dXWhp6cHHR0d+P73v4/GxkZY
      rVa0t7djeHgY//AP/4COjg786Ec/inQRogoDABFtGGazGd/61reQl5eHL3/5yygrK0NhYSEe
      fPBBzM3Noa2tDV6vF4qioLCwEI8++ijsdjtmZ2cxNTWFmZmZSBchqmgjnQEiIr/BwUH89Kc/
      RXZ2NoxGIwwGA4aGhvCrX/0KHR0dyM/Px/T0NAAgJSUFL7zwAo4ePQqTyYTi4mIIghDhEkQX
      gWsBEdFGoSgKuru7MTMzg4qKCphMJgwODmJqagolJSW4evUqcnJykJycDI1GgytXrqCqqgoL
      Cwvo6+tDSUkJkpOTI12MqMEAQEQUozbUPQDGIiKi9bOhAgDn9BIRrZ8NFQCIiGj9MAAQEcUo
      BgAiohjFAEBEFKMYAIiIYhQDABFRjGIAICKKUQwAREQxigGAiChGMQAQEcUoBgAiohi15u8D
      kGUZ9fX1mJycxAMPPABJknDy5El4vV5UVlZiamoKlZWVGBsbw8LCAkpLS9c6C0REtAJrHgC8
      Xi+SkpIwMTEBAGhvb0d+fj6Ki4shiiI6OjrgdDpx4cIFPPHEE4tWAFUUhSuCEhGtkzUPAHq9
      HkVFRejo6AAAjI6Owm63o7OzEwUFBfB4PHj++efx6KOPQhRFKIoCr9cLwNd74EudiYjWR9hf
      CZmQkICysjJkZWXhl7/8JYxGI5566imcOHECx44dgyiK0Ol0AABJkiCKYrizRERECMMbwaxW
      K+rq6tDX14fy8nLs3LkTx48fh8lkQn5+PmZnZ7F7926MjIxgfHwc1dXV6u8yABARrZ91eSWk
      f2hHq9WGfGkzAwAR0foJ+xAQAGg0Gmg0nHFKRLSRsFUmIopRDABERDGKAYCIKEYxABARxSgG
      ACKiGMUAQEQUoxgAiIhiFAMAEVGMYgAgIopRDABERDGKAYCIKEYxABARxSgGACKiGMUAQEQU
      oxgAiIhiFAMAEVGMYgAgIopRDABERDGKAYCIKEYxABARxSgGACKiGMUAQEQUoxgAiIhiFAMA
      EVGMYgAgIopRDABERDGKAYCIKEYxABARxSgGACKiGBW2AOBwOBb9PDc3B1mW4Xa7oSgKFEWB
      y+UK1+6JiGgZax4A3G43XnnlFbz66qvqZ5OTk/jOd74Dp9OJd999F263G+fOncPg4OBa756I
      iFZIu+Yb1GrxgQ98AG+//TYAQJIknDt3Dvv27QMAKIqCvr4+OBwOFBUVQVEUeL1e9f8kSVrr
      LBERUQBrHgA0Gg00mvc7FrW1tSgsLMTw8DDm5+chSRJqa2uxe/duCIIARVEgiiIAQJblRb9L
      REThs+YBwD++rygKZFlGamoqrFYrJiYmMDIyAq1Wi2PHjuH48ePIysqCxWKBIAjq7zIAEBGt
      D0FRFGUtN2i1WlFfXw+Xy4Xk5GTs3bsXANDT04O8vDwMDAygoKAAHo8Hvb29KC8vV39XkiS1
      N0BEROG15gHgVjAAEBGtH463EBHFKAYAIqIYxQBARBSjGACIiGIUAwARUYxiACAiilEMAERE
      MYoBgIgoRjEAEBHFKAYAIqIYxQBARBSjGACIiGIUAwARUYxiACAiilEMAEREMYoBgIgoRjEA
      EBHFKAYAIqIYxQBARBSjGACIiGIUAwARUYxiACAiilEMAEREMYoBgIgoRjEAEBHFKAYAIqIY
      xQBARBSjGACIiGIUAwARUYxiACAiilHatd6gLMu4evUqJiYmcO+992J6ehrnz5+Hx+PBHXfc
      gZmZGVRUVGBiYgJzc3MoLS1d6ywQEdEKrHkA8Hq9iIuLg9frBQCIooj7778fkiTh1KlT0Ov1
      cLlcOHv2LJ544gkoirLWWSAiohVY8wCg1+uxdetW9PT0AAASExMxNTWFEydO4L777kNNTQ2e
      f/55fOADH4BWq4WiKPB4PAAARVHUwEFEROG15gHgRjMzMzhx4gQef/xx6PV66HQ6fPCDH8Q7
      77yDJ554AhqNBnq9HgAgSRJEUQx3loiICICgrPEYjNVqRV1dHXp6elBZWQlBEDA0NISEhATk
      5eVhenoa1dXVGBoawuTkJKqrq9XfZQAgIlo/ax4AbgUDABHR+uE0UCKiGMUAQEQUoxgAiIhi
      FAMAEVGMYgAgIopRDABERDGKAYCIKEYxABARxSgGACKiGMUAQEQUoxgAiIhiFAMAEVGMYgAg
      IopRDABERDGKAYCIKEYxABARxSgGACKiGMUAQEQUoxgAiIhiFAMAEVGMYgAgIopRDABERDGK
      AYCIKEYxABARxSgGACKiGKVdTWJJktDTP4TiTfkQBCFceSKKKEVRcLF1GK+ebYeiKHhobwnu
      3MY6T7efVQUAt8eL7/3oRTzz4Uexo6qUXwi6LV3tmcDXnn8XkqwAAJp6JmDQi6guy41wzojW
      1oqHgCRJxmtvnYbL5ca//dfPUNfYAkVRwpk3oog4e3VAbfwBQFYUvHdlIII5IgqPFfUA/vt/
      3sSV5nZMz8xClmUIAvDz428jNzsDWRlp4c4j0boyx+lW9BlRtFtRALjv8H40tXZCkmVoNAI+
      9bEnsGt7BYeA6Lb0QHUxTl7uxeSsHQCQFB+HR/ZviXCuiNbeioaA7A4n0lOTkZmeiq3Fhdi9
      o3LZxt/pdKr/XlhYgM1mAwB4PB4oigJFUeB2u28h60ThkZFsxjd/9wHkpiUgPcmEf/q9B5Cb
      bol0tojW3LI9AK/Xi4amNvzWxz8Iu92Bq62dIdO73W68/vrrcLlc+PCHP4yJiQm8++670Ov1
      qKqqQnd3Nw4ePIj6+nqkpqaipKRkzQpDtFaS4uOQYDLA4fIg1WKKdHaIwmLZACCKIh66505o
      NBoY9Hoc2r879Aa1Wjz00EM4efIkAKCtrQ333HMPTCYTTpw4Aa1Wi6GhIdhsNuzduxeKokCS
      JAC+6XccVqKNw3cjWJblCOeDKDyWDQCCIKyqUdZoNNDr9erPHo8HBoMBWq0WsixDkiScPXsW
      +/fvhyAIUBQFGo1vJEqSJHi93psoBtHaUxTfRQnrJN2uVvUcwM1IS0vDwMAAEhISkJiYCKfT
      iQ996EN47bXXkJmZiYSEBDXAKIoCURTDnSWiFfFf/Fx/QUN0O1lxAHj22WcxNDQEo9EIAEhK
      SsIXvvCFJQ221WpFXV0dJEnC+fPnUV1djXfeeQderxdHjhxBf38/tFotHn74YfT09KCysnJt
      S0RERCsiKCt8mqu1tRXnzp2DJEkoLi7Gzp07kZSUtKZj9pIksQdAG8afPfcrOFwe/P9/8HCk
      s0IUFivuAZSVlaG0tBRTU1P47//+b/z85z/HN7/5TTbYRERRasUB4PTp06irq0NKSgqOHDmC
      z3zmM+rNWyIiij4rDgAjIyOw2+1wOBwYGhpCYmIiPve5z7EHQEQUpVYcAD760Y+itrYW2dnZ
      yMnJCWeeiIhoHaxqDCcpKQkvvvgipqamYLVauRooEVEUW1UAmJ+fh8FgwIsvvohXX32VT0gS
      EUWxVQWAkpISmEwmVFVVIT8/nzeBiYii2Kpa8Jdffhl33303BgYG0N7eDpfLFa58ERFRmK1q
      KYiCggKcOnUK7e3tMBqN0On4kgwiomi1qgBw+PBhZGdnY/Pmzdi9ezengBIRRbFVBYBLly7h
      Zz/7GSwWC1pbW/HZz36WyzcTEUWpVd0D6Orqwh/8wR/gz/7szyDLMt/oRUQUxVbVA8jMzMS3
      vvUtmM1mjI2N4Rvf+AY++9nPIiMjI1z5IyKiMFlVADh69CiOHj0KAHA4HIiLi+MQEBFRlLrp
      ifz//M//zAfBiIii2Kp6AJIkoba2FhaLBQ8//DBnARERRbFVBYBf/OIX0Ol0aGtrg91ux+bN
      m/m6PCKiKLWqISCv14uUlBTMzs5ibGyM4/9ERFFsVQHgsccew/T0NEwmEz7+8Y/zSWAioii2
      qgBQW1uLhoYGpKenIzExMVx5IiKidbCqALBv3z780R/9ESRJwhe/+EU4HI5w5YuIiMJsVTeB
      a2trcfz4cWzZsgVf/epXERcXF658ERFRmK04AIyNjaGoqAi/+Zu/CQCcAkpEFOVWHAAaGxuR
      kZGBmpoaAEBCQgKeeuopzgQiIopSK74HcP/998Pj8eCpp57CZz7zGWRnZ8Pr9YYzb0REFEYr
      7gF0dXXhpZdeQlFRERISEtDU1ISDBw+GM29ERGtGkmXMLbih14kwGrQcvcAqAkBaWhp27dqF
      4uJiJCYm4pFHHuFzAEQUFaZsDnzrp+fQ3DuBeKMeH723Cg/vK4n5ILDiIaDExEQkJiYiLy8P
      JSUleO211+DxeMKZNyKiNfGjX17Gle5xSLKC2QUXfvjaZfSOWiOdrYhb1XMAc3Nz6O3thdVq
      RV9fHxRFCVe+iIjWTFv/1KKfvZKMruGZCOVm41hVAHj00UfR2tqKH/7whzh27BgXgiOiqFCY
      tXjlAo0goCCDqxmsKgAsLCzA7XZDr9fj3LlzkCRp2d/xeDw4f/483n33XTidTgwNDUGSJDgc
      DgwODt50xomIVupTD+9EfoYFAKAVNfjw0QqU5KVEOFeRt6oA8Prrr6OkpAQlJSXweDwrGgKq
      r69Heno6tm7dirNnz6KtrQ1erxdvvfUWLBbLTWeciGilctMt+Npv3wcAeGhvMT52bxU0MX4D
      GFjlUhDJycnIycnBK6+8goWFBXg8Hmi1oTexadMmvPXWW9Bqtdi3bx/a2tpw/PhxbN26FQkJ
      CVAURb2ZrCgKny2gDUNRZCiKApfLFems0BqQr41YCFDgdrsjnJuNYVUB4IEHHgAAPPPMMxAE
      AUajcdnf6e7uxp133gmj0YimpiaIoojNmzdjYmIC5eXlEARBvZcgSRI0mpt+SyXRmhIEzaL6
      SdFNhu/iUiOKPKfXrCoA+Nf/yc7Oxte+9jV86UtfWnZNII1Gg7GxMRiNRgiCAEEQUFZWhkuX
      LqGzsxNbtmxZlD7W5+XSxsM6eXu4/jzynPqsKgD4XwI/MzOD3/7t317RgnB79uzB4OAgvF4v
      KisrsbCwAJ1Oh4MHD2JmhtOwiIgiZVUB4JVXXsGuXbvwr//6rzCbzfjSl7607NPAgiAgPz9f
      /TkhIUH9d0oK78ITEUXKqgfcT548iYMHDyI1NXVF00CJiGhjWlUP4JFHHsGFCxdQXV2Njo4O
      GAyGcOWLiIjCbFUBoL+/H+fPn8fw8DDcbje2bdvGmylERFFqVUNAZ86cwec//3nIsoy5uTnO
      j6YN442aTnQMTkc6G0RRZVUB4N5778V3v/tdnD17FgkJCXwnMEWcoih470o/vvfKJTz380sY
      mpyLdJZonb12rgPffOFspLMRlVYVABITE/G5z30OTz/9NHbs2MHhH4q4X9X24BvXvvydQ9P4
      qx+cwMycI8K5ovXU0jeB2vaRSGcjKq0qALzxxhtYWFjAqVOncOrUKTidznDli2hF3qzpwvVL
      Uk3ZHLjYOhy5DBFFkVUFgPT0dHz729/GPffcA61Wu6IHwYjCSaNZ2gsVA3xGt6d5hxtTs3Z4
      JRlDE7ZIZyfqrGoW0D333IPKykoYjUbk5eUtuxAcUbg9flcpOl6YgiT7ugE5aQnYV54X4VzR
      eph3uPGnz72FoQnffZ8/+s4b+Mqnj6K8MC3COYseq+oBnDt3Ds8++yy+/vWv47nnnlOXhiCK
      lAOVefjKp48CACo2peNvf+sexJu40FcseLexX238AcDlkfCzd1oimKPos6pL+J6eHnzqU59C
      V1cXBgcH4Xa7V7QiKFG4CIKAbUUZEAQgL92CFAvrY6ywu5a+kzzQZxTcqnoA+/fvh8ViQV9f
      HzweD5dUJaKI2VeRC4Nu8X3IwzsKI5Sb6LSqAGC1WqHVavG5z30OJSUlnAZKRCsmyQoGx20Y
      nZpf0dsEl5ObZsFXPn0UWSnx0Ioa/O6xaty/p2gNcho7VjUE1NzcjLS0NKSkpODq1as4fPgw
      HwYjomXN2V34+k/eQ1PPBAQBOLS9EL/3ZDV02lubSVhemIYteSmYs7vwQHXxGuU2dqwqAPza
      r/0annvuObhcLhw6dIiLwRHRivzsTCuudI/7flCAU/W92LklE0fv2BzZjMW4VQWAlJQU/MVf
      /EW48kJEt6neEWvgz+6IQGZIxRfwElHYlRakBviM8/UjjQGAiMLu8bvKcGh7ATSCAJ1Wg2OH
      yrCvIjfS2Yp5DABEFHZxei2++JEDSLEYUbkpA594aAdEDZufSOMZIKJ1oREECIJv/SZOId8Y
      GACIbpHD5UH7wBSmbVyGmqILV3MjugUtfRP4+k/ew8ycEzqtBs88uAOPHtzKK1yKCuwBEN0k
      RVHw3M9rMTPney+Gxyvj31+vx4TVHuGcEa0MAwDRTZIVBYM3rEHvlRSMTPG1lBQdGACIbpJG
      EFCav3h+e5xei01ZSRHKEdHqMAAQ3SRBEPD7H9yLrXm+IJBiMeKPP3IAFjOXSKHowABAdAuy
      UxPw+x/cCwB44q4y7C3P5Q1gihoMAES3SHOtweeriCnaMAAQEcUoBgDakBRFwYR1AX2jVngl
      vnuaKBzC/iCY1+vF22+/DUVRUFlZiYmJCWzbtg3Dw8NwOp0oLS0NdxYoysiygh8dr8fx8x3w
      yjI2ZSXh//34IaQnmSOdNaLbSth7AO3t7SgqKsK9996LvLw8WK1WOBwO1NbWoqSkBIqiLPpD
      dKV7DK+ebYNHkqEoQM+IFf/5ZmOks0V02wl7D2BsbAwOhwMdHR3Izc2Fx+PBT37yEzz66KMQ
      RRGKosDr9QIAZFmGJEnhzhJtcN1DU7jxWqBnZAYulyv4LymALEmh06ySoshQFGXZbbo9bgC+
      3u5a7v92pCgKZFle0+MkXbtQWG6bLrf3Wvq1rSfRLOwBwGKxoLS0FNnZ2Th+/Dji4uLw0Y9+
      FG+99RaefPJJiKIInU4HwHdiRPHW3hFK0a9sUwY0ggD5uihQXpAe+hWkAqARxTV9TakgaCAI
      wrLb1Ot8jYlWq+VrUpchCAI0Gs2aHidR1EAQsOw2FUG8ln5t60k0C/sQUFVVFWpqavDGG2+g
      qKgIZrMZJpMJBw4cwOXLl8O9e4pCZQVpeObB7TAafNcnu7Zm4zce2B7hXBHdfsLeAzAYDHj8
      8cfVq3v/QzJ5eXnIy8sL9+4pCgmCgCcOlWFwYg4n6nrwV88choaT7InW3LpMAxUEAVqtNmxP
      SCqKgvGZBdS1j2DKZufN5NuAb6jA9282/kThcVu8D+CNmi784Bd18EgyDDoRv/fkXhzeURjp
      bBERbWhRHwBmF1z499cb4Ln2sJDLI+HffnkZ1WU5MBp0Ec4dbSQ2uwv/824bBsZnUV6YjkcO
      bIFey0kHFLuiPwDMO+FwexZ9Zltwwe70MACQSpYV/P2P30Vz7wQA4HzzEIYn5/A7T+zh4m0U
      s6J+KYjMFDMyk+MXfVaYlcQleWmR/rFZtFxr/P1ON/TBcW1uOFEsivoAYNBp8aWPHcSmrEQA
      wJa8FHzxqf3QsWtP19FoBEBY+hmv/SmWRX0AAICS3BQ8dbQSAPDxB7YjPyMxwjmijSY/w4K9
      ZbmLPntk/xbE6aN+FJTopt0WAYBoOYIg4I8/cgAP7S0BAHz6kZ14+r4qjv9TTGMAoJhh0Gux
      JS8FAFBemA5Rw+pPsY3fACKiGMUAQEQUoxgAiIhiFKdArDNFUbDg8EDQACaDjjchiShiGADW
      kcvtxXdfuYjzTYMQRQ1+bf8WPH3fNi52RkSqebsbJy/3YHbBhf0VeSjOTQ7bhSIDwDp65d1W
      nK7v8/3gkfDfp5pRkpeC/RVcFpuIALvTg7/417fRNzYLAHj5nRb8+W/cheobnmFZK7wHsI5a
      +6eWftY3GYGcrEz38Ay+/XIN7E7P8okpJnklGbVtI3ijphOD47ZIZyfq1bQMqY0/AEiygpff
      aQ3b/tgDWEcFmYmoax9Z9Flh5sZ9avlqzzh+dakbxw6VwRTHhfVoMUmS8exLF/BOg69Xa9CJ
      +OJTB7C/kj3am+XyLH0nujvAZ2uFPYB19OThMpQXpgEABAE4tL0Ad20viHCuiG5Ox9C02vgD
      vsbr+bcaI5ij6LenNBuJNyxkec+uTWHbHwPAOko0x+FvP3MPUixG7CjOxB9/5AAXraOoNTvv
      XPKZNcBntHKpiSb8r988ik1ZSQCA339yLx7etyVs+4vJADBls2Nkai4i+xY1GmgEAaKo4RRQ
      imrlhelIio9b9NmByvwI5eb2UZiVhNL8VADAfXuKwjpLMCYDwPdfuYSv/O/Tkc4GUVSzmA34
      q08cRuG1pdgf3leCTz2yM8K5otWIyQDglWRIMl8cTxvbheZB9IxYI52NkEpyU3Bnle+q/8NH
      K/gWvgj4qx+exPHzHTf1uzEZAIiiwbMvXcBLp5ojnQ3a4K52j6NreOamfpcBgIgoRjEAEBHF
      KAYAIqIYxQBARBSjGACIiGIUAwARUYxiACAiilHrEgAURUFtbS28Xi9GRkYgSRKcTieGhobW
      Y/dERBE3O+/E155/F72jG+fhvnUJAK2trbh48SLcbjdaWlrg9Xrx1ltvIT4+fj12T0RRxjrv
      xPdfuYgJ60Kks7Jmxq0LONc0iM7B6UhnRRX29wE4HA709vaivLwcANTGf/PmzbBYLFAUBR7P
      rb9wRFEU9W9JWsH62StNFxYKoCCC+18Z/zGVZTkiefXvf8X7XsE5XV2ZVrZ/WZZ9f4ehTimI
      ZD1dmdXWk5V8R3uGp/F6TRe2FWUgJSEuZFpFUaBg5edpxW3EGnu/nix/nJQV1j01/U2WKewB
      4NSpUzAYDOjr64PFYoFGo0F2djZmZnyPLguCAL1eD8AXHPwHabXUgyvLy27DX2Fudl+3SlF8
      eYjU/ldqNcc0HK61Kyvb9wqPqay8/yVcvp6scJvXNSxrfpyioJ5cHwCWzauCFZVJlt+/oFvJ
      99m//1D8DWSkvntqPZHXrkzXp7+ZMoU9ANx9993wer3wer0oKCjAzMwMqqqqcOHCBXR3d6O4
      uFhNKwgCtNqby5IoiurfOl3oBakEQYAgCMumCxdBECBoIrf/lfIfU61WG5G8+pfBXdG+BUDQ
      aJZNK2qulUlcvkwrrSf+Oisus39ZVtA/NouZeQe25KUi3qgPuV1fHpYvU6RpNL6R5BXVk5We
      J+3Kv88ajQYClq8nkiKo6SNxTNV6spIyCb5jutJ83myZwh4AjEYjAGD//v0wm83YvXs3dDod
      Dh06hKmppe/IJbodybKC5/7nEt6o6QIAJCfE4S+fOYyS3JQI54xi2bpNA7VYLBBFEYmJib6I
      LQhIS0tbr93flHmHG5/5xqs409gf6axQlGvunVAbfwCYmXPi34/XRzBHRHwOIChJlnH26gDG
      ZxZw6nIvZhf4qju6eeMBZrOMztw+M1woOjEABPHKmTZ872cXAQCX2obxlf99Gi6PN8K5omhV
      mp8Kg27x+593FGdGKDcUitPtxWvn2vGDX9ThfPOgekP6dsQAEMRr59px/WnvGppBS99kxPJD
      0S033YI//PB+dUrjoe0F+MRDOyKcK7qRLCv4+x+/i395tQ6vnm3H3//4XfzsTIs6K+d2wwBA
      tE4OVuXj8I5CAMDvHtuLBJMhwjmiG3UNT6O+c3TRZz870wqZASAyZhdccLnXf+jl1w5shXDd
      z8W5ySgv3Ng3rYno1kjS0oY+0Ge3iw0fAP74u2/gRxGYLfHEoVJ8/lg1AGBPaQ7+5pNHYNCF
      fdYsEUVQcW4yinKSF312357N0AhCkN+Ibhs+ACw4PJh3uNd9v6JGg91bswEApQWpSDSHfhyd
      iKKfTivibz5xBNVlOQCAj91bhWce3AHhNg0AvKTdoOxOD15+pwUdg9MoyknCk4fLOWZMtA6S
      EuKwoyQLF1uHcee2fOi04vK/FKUYADYgWVbw/710Hheafctl13eOont4Bn/zybvV5RGIiG7V
      hh8CikXWeSfq2kYWfXalexxjM/MRytHyJFm+redLE92OGAA2II1GgChqlnymFTfu6frWT8/j
      uZ9finQ2aI3IioLLHSOYnecT8LezjduixLBEswEPVBcv+uzoHZuRlmiKUI6W1zc2i/7x2Uhn
      g9aIdc6JL//oNF6v6Yx0ViiMeA9gAxIEAZ98eAeS4g34jzca8dTRSnzknsrbdiYCEUUGewAb
      lKjRoCjHt1RwUU7Shh7+IaLoxFaFiChGMQAQEcUoBgAiohjFAEBEFKMYAIiIYtSGDgDXv4Th
      dn0hAxFRpGzYAOD2SPjeK5fgcHtwuWN00Qu1iej2NTA+ix+/2QgAePFEE7qGpiOco9vXhg0A
      L51uxpsXu6AowLzDjX/+n1q09E1EOlu3BY9XYo+KNiSPV8I/vXgOHYO+Rr931IpvvHCW7+MO
      kw0bABq7xhb9LCsKrvYwANwqt0fC7z97HL883xHprBAtMbvgQu/Y4iVFRqfnMT6zEKEc3d42
      bADITI5f8llWijkCObm9SLKMkal5TFjtkc4K0RImgw6WG957YTToov6FTIqiwOWWAAAuz8bp
      gW/YAPD0fVXISnk/COyvyMWByvwI5oiIws0Up8OnH9kJvc73EhadqMEnHtwBixptaw0AACAA
      SURBVDm6X4ZU2zaCr/7HOwCAf/tlHV492x7hHPls2ACQmRKPZ7/wEOL0Wuwrz8WfPX0X18Mh
      igGHdxTij586AAD4nSeq8eDe4mV+Y2PzeCX8y6u1cLh99zG8koL/eKMB0zZHhHO2gQMAAMTp
      tdAIAvQ6cU3ehKUoCoYmbBifWYDd6UFb/+SG6YoRkY8gCIgz+BYqNhq0Ub8KrtsrYXJ28ZCr
      xysv+SwSNnQAWGtjMwv4f/75bQxNzmHe4cZf/vAkmnvX5sby0IQNL7/TAq8kr8n2ooWiKBia
      tGHe4YZ13onxmQUGVaLrxOm12JKXuuizpHgD8jMsEcrR+2IqAJy83Aub3aX+7PZIOH5hbV54
      caaxH//+egPmrtt+NPNKMoYn5wD45mUH0zs6iy997y1M2xwYmZrHn3zvTYxOb9xXVxKtN1Gj
      wR9+eB9K831BICctAX/69F0wGnQRzlmMBYBAV6a3w9Wqw+XBmcZ+vHmxa026lbKs4B9fOKsG
      x3/4ie/fgY7V6xc6sOD0qD/PLrjw1sXuW84DRc7sghP/+os6AMDbtT2o7xiNcI6iX3ZqAn7r
      A7sAAE8eLkflpvR13b8sK3i3sR9/8r03cbVnXP0uhz0ATE5O4rXXXsMrr7yC3t5e1NfXw+Px
      YHBwEG1tbeHe/SJHdhTCHPd+1NWJGty/J7pvMDlcHvzlD07iH184i+/+7CL+8Nuvo3t45pa2
      2TtqxbmmQfVnWVHw0xNNCBQq3d6lQ15ur3RL+6fI+sEv6nD26gAA37DpP/zXe5iyRX68Otr5
      b2Ws9x0NRVHwb7+8jH988Sw6Bqfx1z88qV7QhT0AGAwGPPjgg3jwwQfR1taG6elpOJ1OXLhw
      ASUlJVAURf0TbjlpCfjbz9yDrJR4mON0+OtPHsGOksyw7zeczjT2o/O6R+Xn7G68dLr5lrZp
      v+6KXv3M5UGgCHBkZ+Gi2Vl6rYhDOwpvaf8UWZfbF1/xLzg96BjgcgzRanxmAb883wF/EyvJ
      Cl480QSXRwr/O4ETEhIwOTmJkydP4v7778eFCxfw/PPP49FHH4UoilAUBV6vb3qULMvqv/0U
      KJBlGS5X6LF1/+95PJ6QaXNSTMhMNkGSZZTmJcHtdgdN67r2f16vd/n9S779u1xuuPSh46qi
      rKxMHo/n2t/B9z81u/QJyRmbI2h6l8s/FU0KmqYgIx6ZySaMzbx/1XegIgcez9JjVZ6fjD95
      ai++80ottKIGX3hyDzZlxC9btpWQJBmAsrJtKYAcokx+K60nAKAosu8BnmXSua8dF6+0fD2R
      JF/vyO12QYPle0qyvHyZ1lpqohFzjsXn2mLSBs2HVy2TGy6XGHLbq6/7y58nSZKhKFg2neva
      NExpFfXE7V5+/yvldl8r0wraE0m+9tDYCvcdqp5M2xYgyYuv3uYdbtgdzvAHgOnpaZw6dQrH
      jh2DVquFTqfDU089hRMnTuDYsWMQRRE6nW9YRpIkaDSLG08BAjQaDfR6fcj9aLW+ouh0umXT
      ajQaCBCWTafXS+q2l92/6Nu/3qBfNq0grKxMOp1W/TtY2gNVBXjpdOui2Ud3bS8Mml6+1unT
      imLQNHo98L9+8x48+38uoKlnAo8e3IqPP7gdem3gL/f+qkL85EQLzHE67CrNC1mm1RBFDbCC
      8wQAEABNiDL5raaeCIIGgrD8/nU63/9rxeXriSj6jqFer4dev/zXT6NZvkxr7bc+sBtff/5d
      zDncEAB84OBWlBVmIthsTO2iMq1V3depfy9/TDUQBCybThHEa+lXUk/8ZVp+/yul95dpBe2J
      qHn/mK5EqHpSkpeGvHQLBids6md3bMlCUoI5/ENAnZ2dEEURJ0+eREtLC4xGI+Lj41FdXY26
      urol6QVBWPQn2OfB0q04rbB8OmG12/RtduVpl023fNpNWUn481+/C2mJRogaAZ94aAce3ldy
      y8cpMyUe+yt8jflD+0pg0GnXpEyr+bOabYatnqxk/zexTWBty7/SYzS74ML0nAOKEny724oy
      8HefvRcA8Nhdpfj0I3dAo1nfYxr5bYbh+Aur2f/a1X2dVsRfPnMIVZt9N57v2paPL3xwHzQa
      Ifw9gL179wb8vLCwEIWFHCteC3vKclB6OQ0NnWN48nB5pLNDG5Aky/jRL+vx1qUuSJKC3WU5
      +IMP7YMpyFTEeKPvatIcp1uThzApsrJTE3DPriJc7ZnAY3eWqktrxNQ0UKJYda5pEK+ebYfT
      LcEjyTjfNIifn2mNdLYowhgAiGJAoFk87YOc2RPrGABo3Y3PLECWo/8BvGhSlJO05LPinOQI
      5IQ2EgYAWle9I1b8zj+9tuhBMwq/O7cV4P49RRA1vpvWd2zJwhOHyiKdLYqwsN8EJrqeyyvB
      K8lwupc+bEbhoxU1+N1j1ZiwLmBgwoa//sQR3twl9gDWwuj0PBo6fU9Pvl3bE3MrgtLa80oy
      FPhm76zVU/KC4JuDrxEENv63CX9b45Vurp4wANyiBacbf/Nvp9DcNwkA+M83G/Ffv7oS4VxR
      NJu2OfCl778Fu9ODC81D+Pb/qYEk86KCFhubmccffecNyIqC0w19+JdX61Z9b40B4BY1904s
      Wf74RF1vZDJDt4UXTlxVF/STFQVv1/WgpmUowrmijebHb15B/5hvqXZZVnD8fAcaula3cisD
      wC0y6JbeRjHoQ6+HQhSK/0u9+DNbgJQUSf6XIf3kV1fwwttXMTY9v67Ly99YTxQAA+OrqycM
      ALeovDANVZsz1J81goAPHuHTuHTzygrSAnyWGiAlRVLfmO9lSC+eaMJ/vX0Vf/L9tzAytX4v
      Q7qxnmgEAVvzV1dPGABukU4r4q8/cRh3bSsAAPzFxw/hvt1FEc5VYPMON577+SUAwDsNfbjQ
      zKmYG9FH7qnEwao8CILvdYK/8cA2bC+O7mXLb0fHL3QuehmSbcGFNy92rdv+P/7AduwtzwEA
      mAw6fOqRnepbx1aKAWANGPRa9f2eJbnJSxae2ij+/fUGnKrvAwBM2Rz4p5+ex8jUXIRzRTcy
      GnT40sfuhMmgw+6t2fjQkYoNW6dimSfAi48CfRYu8SY9/vzXD0EjCDhYlYdHD25ddT1hAIgh
      N77az+n2ovXa7CXaWDTXvsiBVrK8nqIoGJmax8WWIYzPLNwWrziNFnfv3LTkZUiH1/llSP7p
      vMvVk2D4IFgMSU82Ydy6+AUy6UnmCOWG1sLxC5344WuX4ZVk6LUiPv/EHhzdtTnS2YoJ24oy
      8JfPHMI3XzwHrajBn3zk4KrH4CONPYAY8smHdiIpPk79+f49RSjftPSGI0WH2QUn/vONRvVh
      ILdXwo+O1wd8pSetPUEQcMeWbKRYjMhMjkdVUUbUDdUxAMSQrfmp+MfP3w8AeHBvMT7/RDVE
      DatAtLItuOG4YUmNOYfb9/5mohXgtz/G+F/0YTLwRR/RLjPZjJzUhEWfbc5KQpI5LshvEC3G
      AEAUpfQ6EV/62EF1WefS/FR88SMHoNXya00rw5pCFMU2ZyfjQ3dXAACevn8b8tItEc4RRRMG
      AFo3k7N2/OQt30J5vzjXoa53Q0SRwQBA60KSFTz70gXUX1s2u3t4Bn//43fh8ngjnDOi2MUA
      QOvC4fKguXdi0Wfj1gUuckYUQQwAtC50Wg0SzYZFn2lFDZITOGOFKFIYAGhd6LUiPvnwTui1
      vqWyNRoBTx2tQKrFGOGcEcUuBgBaF4Ig4ND2Avzp0wcBAM88uANPHa2MuicniW4n6xIAZFmG
      JPlWyVMURf0j8zV3MUUQBFiuPaRkMenZ+BNFWNgXg5ufn8ebb77puwI8dAidnZ3YtWsXenp6
      oCgKysrKwp0FIiIKIOwB4MqVKzh8+DDMZjPee+89aDQazM3NobW1FY899li4d09EREGEfQjI
      4XAgISEBRqMRHo8HHo8HL730Enbv3s0hACKiCAp7ALBYLJicnITNZkNcXBx0Oh2efvppnDt3
      Dm63O9y7JyKiIMIeALZt24ba2lqcPHkSe/bsQXJyMuLi4nD33Xfj6tWr4d49EREFEfZ7AAaD
      YdFY/x133AEASE9PR3p6erh3T0REQUT8lZCKosDrfX89GFEUI5gbIqLYISgRfou0/5kAwPe8
      wI03hiesdhh0IizXLSPgf4bg+mDhcnsxu+BCUnwc9Lr3P5ckaUlQsc47IUkyUhNNiz6/Ma0k
      K5iatcNs1MMcp1M/9z+/oLnubVoLTjcWHB6kJZoWvWgl0P4nZ+3QippFr2cMlNbtkWCddyIx
      3gCDTrsonUajWXSsZhdccHskpCeFLpOiKJiw2mGK06kvh/F/rijKojLZXR7M291IsRgXvfw6
      UJmmbQ4IApCcsPjJ3hvTerwSZuacsJgNiNO/Xyb/ub++THN2FxwuLzKSzSG3CQDjMwswGrRI
      MBkWpbvxODlcXszZXUhOMEKnDV2mmTkHFAVIue5p5UDHySvJmLY5EG/Sw2TQhdzmvMMNu9OD
      9CTTonwFSjthtUOvExctoRHoOK227nslGWnX1f1A3ydZVjA5a4fZqIM5Th9ym6up+1Ozdog3
      1P1A3ye17psNMOgX1/0btxmo7gcqU7C6H6ie3GrdD1Qmj1fGzJwDCSYDjIbQZVpt3Y8zaGFZ
      pu473V7YFlxIToiD7toT+REPANcLVLhA/A+W6XS6ZdN6PB5otdoVzThyu93Q6/XLpvM/1LaS
      vK50m/6eUCTLpCgKtNrlO4Ur3eZq0nq9Xmg0mkVfmEBWe5xEUVx2m6vJpyzLkGV5wx+n1Wxz
      tWXS6XRrWve8Xi8EQbjtvk/A2rcRHo9nRWlXWve5FAQRUYzaUD0ARVGWRGG32w273Q4AMJvN
      0Ol06pDR9WkVRcHCwoJ6hZSQkABBEAKmlSQJ8/PzUBQFBoMBRqMx4P79ERcApqamkJWVFXSb
      iqJgbm5OvZKKj48PWaaBgQEkJiYiNTU16Dbn5uZgNBqh1Wphs9lgNpshimLQMo2MjCAtLQ2S
      JMFsNgfdv8vlgsPhAADEx8dDq9UGLdP8/LzaM4uPj1fzeuM2vV4v5ufnAQBGoxEGg2HJ/mVZ
      DnpFEmj/sixjaGgIBoMB6enpQY+Tv0fodrvhcDiQlpYWcptzc3NQFAV6vR4mk+mWj5O/ztls
      NgiCgMTExIDbVBQF/f39yM7OXnIVF2j/drtdnSptsVig0WiClml0dBRJSUmQZTlg3XO73Uum
      XcfFxQUtk/8Kdn5+HrIsIzk5Oegx9Xg86nEyGAwBz72fw+GAy+UKWabl6smN2/R4PFhYWAAA
      mEwm6PX6oPXZbrfD4/H4liWxWG65jfAfI5vNhsTERBiNxqDnaXx8HHFxcWrbtFyZ+vv7YbFY
      kJaWFjSfCwsL0Ov10Ol0mJqaQmJiYtBzGqjui1/+8pe/HPBIR8CNB0GWZZw6dQpdXV2YmZmB
      Xq9HYmLikjFQAOjr60NnZyc6OzvR39+P4uJidQzsxrTnzp1DW1sbPB4PxsbGkJubG3D/09PT
      GB0dRWdnJ5xOJ7RaLcxmc8BtXrlyBe3t7ZidnUVPTw+KiooCblOSJJw5cwZZWVkYHR3FwsIC
      UlJSlmxTkiS0tLTAYDBAEAS0tLQgKSkJer0+4P4vXLgAp9MJURTR0dGBvLy8gPt3uVw4c+YM
      urq6MDY2htTUVBiNxoDbbG1tRXt7OyYmJtDT04Pi4uKA6RRFwZkzZ9DR0QG73Q6Hw6HO8Lo+
      bVdXF7RaLS5duoSBgQEMDg4iOzs76Hm6ePEiDAYDZmZmMDc3pwbLG9N1dHRAp9Ph8uXLsFqt
      SE1NVYcpbkxbU1ODlpYWKIqCvr4+FBQUBDxObrcb77zzDrq7uzE+Po7k5GSYTKaA22xsbERi
      YiJqa2sxMTGB/Pz8gOn8221ubsbAwMCioLrk3tfEBBobG9HZ2Ym+vj4UFxdDFMWAaS9dugSP
      xwOn04ne3t6A535ychK9vb24fPkyZFlWz0VSUlLAbTY1NSE+Ph51dXWYmppCTk5OwPOkKApO
      nDgBWZYxOzurlinQMbVaraitrUVnZycGBgZQUFAQ8Dx1dXXBZrOhqakJAwMDmJubQ0ZGRsBt
      yrKM06dPo6urC1arNWSZBgYG0NHRgY6ODgwMDIRsI86fP4+2tjZ4vV6MjIwE/T7ZbDY0NDRg
      enoaoijC7XYHPacajQadnZ3o7u6G3W5HYmKiek5vLNOZM2eQkZGB8fFx2Gy2oHVflmWcP38e
      kiRhaGgIeXl5arpQdb+3txeFhYUbewjI6/UiJSUFOTk5uPPOOzE2NhY07czMDHbt2oXMzEzk
      5uaqVxmBaLVabN68GRUVFeqVTiCCIGBiYgKKoiA5OTlkWqfTicrKSuTn56tfgGBlMplMyMnJ
      QXl5OSYmJgKmczgcGBgYQHt7O1paWpCcnKxe1QciSRKysrLg9XpDlt3pdCI3Nxc5OTnYs2dP
      0P0DvquL7du3IycnB0lJSUHTybIMs9mMvLw8VFdXw2YL/JKXwsJCxMfHY+/evdi7dy+qq6tD
      jpE6nU4UFRWhrKwMk5OTQdNpNBr09vbCYrHAbDarVz/BlJSUoLi4OOSYt9vtRk5ODnJyclBd
      XR3yOAG+BrOwsHDZMefk5GQYjUa4XC6Mjo6ipqYmYDqr1YrKykpkZWWhvLwcVqs1ZF5zc3Mh
      SRKcTmfANJmZmaisrER2djZ27NiB6upqTE1NBd2mIAhob29HVlYWDAZDyGNqsVhQUVGBiooK
      taEOZG5uDlu2bEF2dja2b9+O6enpgOlKSkpQUFCA9PR0pKWlhVwvTJIkJCUlIScnB4cOHcLo
      6GjQtFNTU9i1axeysrKQn5+v9loCEUVRrXuhyu5yuZCamgqTyQSXyxWyjTAYDEhJSYHX64XN
      ZsPp06fVEYbreb1exMXFITc3F+Xl5UHP0/T0NKxWK4qLi1FTU4PCwsJl6/6WLVtQVFSk1tMN
      1QO4kf8mRmJiIurr61FeXo64uMAvEPE3urOzs3C5XCgoKAh6U0en0yEzMxN1dXXIzc0N2rjF
      xcXBZDKhuLgYer0eycnJQbep1+uRmpqK9vZ2mEwmZGZmBkyn1WqxsLCA5uZmDA0NYc+ePQEb
      Ir1ej9zcXMiyjLi4OGg0GvXKJpDExES0tbXBarVi9+7dQW8U+XsQBoMB7e3tKC8vD9poxcXF
      IT4+HgMDA9DpdOoQ2I00Gg20Wi3S09Nx6dIlFBcXBwyC/f390Ol0aGxsxMjICMbGxpCZmRm0
      u28ymXDp0iUMDQ1h9+7dQfOZnJysfmHNZjMSEhICpgN85z4nJwd1dXXIyMhASkpKwHT+m4JG
      oxGtra0oLy8PekzT09PV85WYmBi0jgJAfX09CgoKUF5ejuzsbJhMJnV44Xrx8fGQJAlerxdj
      Y2PYunVr0OOUkpKCpqYmzM7OYufOnUH3r9VqYbVa0dHRgaGhIezcuTPoMU1KSoJOp0NhYSGM
      RqPa8w1kdHQU/f39GB4eBgB1COxGJpNJnR0zMDCA0tLSoBcAZ8+eRVZWFoxGIxoaGtSe2o1E
      UYQoikhKSkJtbS3Ky8sDHk8ASEhIgCzLsNlssNvt2LRpU8g2IisrC3V1dcjOzlaHwAKVaXp6
      GpOTkzAajWovOZC+vj643W7s3LkTeXl5SEtLg16vX3JeRVGE0+lEU1MTBgcHg9b9mZkZLCws
      QJIk5OXlwev1hmwjdDodsrOzcfnyZbXuR/w5gFAURcH4+DhcLhdMJlPI6Ga32yEIAqqqqlBf
      Xx8yrcPhwODgIIxGY8grULfbjcbGRvWK9v777w94FT42NgZRFNHV1aWOAwYyNTWFwcFBKIqC
      xMREdUwy2BdWp9OpjVlzczMKCgqCNgJXrlzBwYMHQ971t1qt0Ov16pVXZmZmwMoiyzKuXLkC
      l8ulHp9gx8nlcsFut8Nut8NqtSIzM1MdA77R5s2b1d6U/3yF4h9PFwQBdrs94HHt6OhAenq6
      2rUXRTFoUAXeP6f+8e9gFEVBZ2cn0tLSsHfv3pCN+sjICJqamtSx3AceeCBk2RISEtDf3w9J
      ktShwkC6uroA+O6phKrPU1NT0Gg0MBqNmJiYCNlb8zfswPtTFQNpbW3F1q1bIQgCent7YTab
      A55XQRCwZcsW9Pf3A0DIGSr+e3TFxcWwWCyYn58P2rDqdDr1vk93d3fAaY2A7zxNTk7C6XSG
      7HkDvjZCURRUVlaioaEh4L2GhYUFtLa2wuv1QqvVqsOjwczNzcHhcODo0aMh9w34gnpzc7M6
      Q6mioiJgOn89Onz4MJxOJ8bHxwMGwJycHPT29i5bj/w8Hs+Sur+hA4DD4YDD4cCOHTsAIOQX
      Nj09HfX19airq8OePXtCNuz9/f3Yt28fgNDTtKanp1FcXIypqSlkZmZiZmYmYADwB5LU1NSQ
      +bRYLCgsLERTUxO2b98Ou92OwcHBoFeh14+nJiQkwG63w2KxBEybmJiI119/HYWFhUhOTkZO
      Ts6SNHq9HlqtVs1nsLwKgoDS0lLU1dWhsrISGo0GdXV1QfOo1+uRlJSkdn9DNZa9vb0QBEEd
      qgjVCDU3N2PXrl0QBCFow7JlyxYAwK5du9QGJVQ96e3txd69ewEgZLAURRH79u1Db28vXn75
      Zdx3331BhzdGR0exZ88ezM7OYmpqKuBNPcB3XCsrK/H222+rQzHBdHV1IS8vT23MQ9XTwcFB
      7N+/X91HMHa7Hd3d3WrDE+zqf3JyEs3NzZienoZOp4PRaAx6/BVFQWNjo9oDGx0dDdj7dblc
      aGhogMvlQkZGBiYnJ9XzEEhaWhpqa2sB+OpIbW0t9uzZs6R8TqcT8/Pz2LlzJ4Dl24iGhgZc
      vnwZu3btCpjWaDSioqICtbW12L59u1q+TZs2Bdym0WhEV1cXZFmGwWBAcXFx0Prf2dmJPXv2
      oLe3F7Ozs0HzKUkSJicnUVJSAkEQMDo6GrQHlJKSgtdeew1TU1PQ6XTYvn170LrS09OzpO5v
      6ABgNBoxNjaGhoYGAL6xwUCNZX19vTpTaG5uDr29vUhJSQn6BZckCcPDw+oVZrCrkOTkZExM
      TECr1aKlpQXV1dUB01ksFvT392NgYECdXRDoKkyn08Fisajzfp1OZ8AxQD+73Y6enh4AvgY+
      1NBGUVER8vPzAQS/CvN3wbu7u+FyuWAwGLBnz54l6QRBQFxcHBITEzExMYHMzEz1+N5Iq9VC
      FEU0NTXB4/GoZSsrK1sUaPwURVEXCDSZTJifn19yTiVJwvT0tDqzyD8UuFyDlZaWhsbGRhw5
      ciRkQzA0NKTOFAuUR8A3DvvSSy+hoqICjz32WMj7L5mZmYiLi0Nzc3PAhxkB31V6W1sbAF+D
      Nj8/j5GRkYCB2r/NpqYmdSgzLy8v6BdblmU0NzdDFEVYLBb1huWNDAbDohlqwbaXlpaGw4cP
      Iz09HTqdDjabLWhQA96v1/7hzWBpSktL4fF4kJSUhIqKipC9hczMTHU8f/v27UHrflxcHGZm
      ZjAyMgLA18gHOlcNDQ1q3mw2G/r6+pCamrrkGPh7UgDUi5TrVyq4kSiKuPfeexeVM1SZampq
      MDMzg+zs7KDptFotUlJScPr0aQAIGSjj4+Px+OOPw+VyqTOQQvHX/fj4eN/soo00DfRGdrsd
      V69eVdcPCvVgg78YTqcTkiSF7A5OTk6qN0rj4+ODjlnKsgyHwwFZltHf34+KioqgX4Jz585h
      //79yw5rAL77FG1tbTAYDKiqqgr6RfRPA0tKSkJLSwtKSkqCVrCmpiZ0dXUhKSkJRqMxaLCa
      nJzE+Pg4Kioq0N/fD0VRUFhYGDCtoijo6urC7OwstmzZErT3IUkSLl++rN5UttlsGB8fx4ED
      B5aklWUZHo8HNpsN09PTKC0tXZLG4/Ggr69v0bBHRkZG0PN08eJFVFVVwWg04urVq8jJyQna
      q5qenlZv/plMpqDBX1EUWK1WDA4OYnJyEjt27Ai6TYfDAZ1Oh+HhYYiiqM4qC7TN0dFRZGdn
      w+12w2azqVNWb+R2uxfdePbPlgrk+umiOp0uaLBSFAWXL19Wj2tJSUnQY9rQ0IDS0lLExcXh
      /Pnz2LVrV9AG2263Q6/Xo6mpCZs3bw5aT7xeL86dO6dOabzzzjuDlunMmTNqr+bcuXM4fPhw
      0DKNjo6qPcmUlJSgQ7D+crtcLni93mUnazQ3NwNA0Ptkg4ODSEhIWLSo5c6dO4Mef//DltPT
      0zCbzQHT+ZfMdzqdapni4+OD9ir8M6sSExNhs9lw5MiRoO1JoLq/4XsAQ0ND6sHfvHlz0PHN
      5uZm5OXloba2FqIo4sCBA0Er7NTUFEZHR6EoCrZs2RL0SzA5OYm5uTn1Si3UFZsoiqipqYHB
      YIDZbFaHJgIZHByEzWaDRqPBxMQEsrKyAqaz2+3qDAybzRbyycaFhQUUFRVh69atqK+vD5hm
      aGgIIyMjGBoaUhugzZs3B0zb3d0No9Go3i/o7+9HZWXgd/hqNBrMz8+jt7cXw8PDIW+uzc/P
      o7GxEXq9HtnZ2QGvLHU6HUpKSjA4OIjm5mZoNBqYzeag52nHjh147733IIoijEZj0EYd8N04
      a2trQ0JCAsxmc9C0/qtqWZaRlpYWsvfV1NSEiooKDA4OQqPRBG2sZVnGwMAAsrOzodVq1XsM
      wfbf1dWlXrVmZGQE3GZnZycAqDPkUlNTg86a8d/898+oCnbtNzk5idbWVszMzKg3DoPVO/8Q
      iX8G0szMDIqKigIOWfT29qKkpATZ2dno7e3F4OBgyJu74+PjEAQBDocDIyMjQSchDA0NYXx8
      HKIoYufOnUEDQGtrK7KysnD58uVl24ienh4MDw/DZDKhvb0dlZWVS9L4A/3BgwcDbuNGdXV1
      qKqqQlNTE0RRDBjU/M+zWK1WdXRAq9WGHFY6ePAgjEYjmpqa1GnQN+ru7oYsy+q5T09P3/gB
      AAAeeugh9d/LPQI9NDSE1NRUNdIGMz4+rh789957L+gVW1xcHK5evarOk8HrEAAAIABJREFU
      Hgi1/5KSEvUkheqGeb1e2O12pKSkoKysDN3d3UEDQGlpKWpra9Ha2or8/PygFRvwDRFlZmbi
      vffeC9pY+U/69TefglWsgoICOBwO7Ny5M+ic9uvdcccdsFqtKC8vR1JSUtCGLSEhARUVFejr
      60NDQwMyMzODHtehoSHk5OSgoKAAvb29IYNvQUGB+sBaqOGKyclJ5Ofno7S0NGigBHznsLy8
      HMPDw8jMzAw5pGQymVBTU4OtW7eqw4DBtqnVanH+/Hk4nU6Ul5cH3WZ/fz+qqqrQ398Pg8Gg
      9jJuVFRUBEEQ1EAe6jz5H5SLj49HXl4epqenA15QpaWl4dixY+jq6lIfgAtFEATceeediy4C
      /M9CXC8rKws1NTWYnp7GyMgI7rzzzqDbLCsrU8fJt27dGnRqs8fjgUajQVZWFioqKtDW1hZ0
      Bp6iKBgZGUFKSgoURQk5ZXN6eho5OTkoKytDY2Nj0HLbbDacPXtW/c6F6gFoNBo0NjZi69at
      6k3zG8XFxcFgMGBgYADl5eUYGhrC/Px80AvfyspKnDt3DjqdDqIoBr2x7O/l++9l+M/Nhg8A
      Fy9eVG9w7N69O+jYWVlZmfoghNVqDToTBfCNhdbX18PtdgcdAwZ8jVV1dTV0Op06fz+Y3t5e
      FBQUBG34/PyNgE6nQ1tbW9BgMTIyAovFgoSEBCQkJECSpJBPSBoMBsiyjCNHjgRNo9fr1QfR
      /N3fbdu2BQwYWq0Wvb29SE9PDxqgrldbW7uo+xmsUZ+cnMSJEyewZ88ebNu2LWTjYjAYkJOT
      g4aGhqBX/4BvBlRycrL6ZGcoZrMZOTk5OHv2bMiA7nQ60dDQgO3bt6O7uxterzdk3cvNzYXR
      aAw6/OFXUVEBh8MR8qoO8F3JO51O2O32kDcBNRoNrl69io6ODmRkZMDr9eLIkSMB014/NDA2
      NhZyvLq1tRXp6ekYHR2FJElIS0sLmd4/W27Tpk1B7xeZzWYcPHgQNpsNOTk5Qcvf3d0NURTV
      cX3/PYNAdDod9Ho9RFHExYsXQz6HUFZWhsHBQeTm5mJ2djbkBZXRaERGRgYuXLgQstwejwfF
      xcUhe/x+RUVFcLvdyMjICDn8JAgC8vPz8cILL2DLli1B7wEMDQ0hOTkZR48eXbJA4fXsdvuS
      mZEZGRnYsmXLxr4H4HK50NLSAlmWUVVVhebmZvVu/42mp6fVm8GiKOLBBx8MekD80zpFUYQs
      y0GvmKenp1FXV6dG36qqqqCVtr+/HzU1NcjJyYHFYkFVVVXAdLIsY2pqCmlpabDZbEEbrbm5
      ORgMBjWvgiCoTwwHYrfb0dfXh5mZGZhMpqDHaXZ2FsPDw4uGCYJtc2hoCO+99x7y8vJgNpux
      ffv2gGkVRcH58+cxNTWFlJQUbN68OeRNLlmW0dLSgpqaGvz6r/96wGURrudwOEJOxxseHobT
      6VSfggy2sNf12/X3Fv5ve+f600Z2/vGv78bYBl8g5mbA3JNwSzbAJmQ3VVWtKnWl3apVX1dV
      /7G+7YusWqlVt+nuNpsACZBAzP3iOxjbGNv4NvZ4PL8X/M4JkDkDKelCynyklbaV14ztM3PO
      8zzf5/uw3jOVSiEUCmFoaAh7e3s4PDyUrFcAR/ly0oVNVCSsv7+2tkZlsxaLRfJ3Ov35z7rW
      ly9fwmq1wu12w+v1UoUbC0EQkEwmqcxSipWVFZouymQy+PnPf/5Obvn4daZSKRiNRtTU1Lzj
      wklIJBK0+C0IAoaGhiQ39kqlcsLyBGBH1aRWQ1RocqflVCqF169fo1AoQK1W44svvmDmy6PR
      KBobG6nppNT35PP5sLe3R/8+cBQBsA6KCwsLaG5ult2kyGeamppCf38//H4/mpqaJLMUHMdh
      YWEBWq0WIyMj9LOwflNi7QKAditf+UawfD5Pi3uk0UaK1dVV3L17FzzPw2KxyMoBv/32WxSL
      RbS1tdH3lSKXy8FkMuH27dtobm6WPa2SYq3RaERPT49sGmh2dhYtLS2yzTUGgwF+vx92ux11
      dXXY3d2F0WhknlpJ+7xer5eVopHFlUqlEA6HYbPZmNGS1WpFY2PjmZ9JpVLRPHFTUxOzvwA4
      2oBmZ2dhMpnw6NEjyc9TKpUwNzeHZ8+e4fDwED6fDxzHMW8cURQRDocRi8WoaomVL9/f38f6
      +jqtg7AKu0ajkb62UChgcHCQ+Zmi0SgGBwfhdrvR2NjIfJ1KpUJDQ8OJtBZRbp2+Tr1eTy0z
      dnd30dTUxHxY8TwPt9uN6elpmEwmyc03HA5jaWmJWnAcHBzQWd1SOJ1OZLNZlEoljI6OSq4R
      nucRiUQQiUSws7NDVTususrh4SGSySR4nqefRypdolarsby8DKfTiX/96184ODhg3qOkr+PG
      jRvgOA4bGxvM15JnRLlcRn19Perq6pine/K+JFKSOrHbbDa0traitbWVduHLrf1KpYJnz54h
      k8kglUoxU1XkvQOBAPr6+lBTUyN5nVqtltYoSH2PWHZIQWw9kskkYrHY0W9wlTcAkntOJBJo
      bW2VvFkIJAQKhUI4PDyEx+ORjQD6+/sxOzuLSqXCVMFoNBq8fv0a8Xgc4XBYNgwmUlXSucjS
      DQNH4ff6+jpisRgtGktd47Nnz3BwcIDd3V3ak8D6TMVikUY/pINXCtJQdefOHbjdbtlU2erq
      KjKZDIxGIxYWFpjF3Wq1iqdPn1J998HBAXPam16vp35BsVhMsrip1WrR1taGbDaL+/fvo6Oj
      A9vb25K/P2noy+fz0Ol00Ol0cDqd77xnpVKBIAgwGo2w2+10Y5XaKEulElVqOJ1O1NfXw2Aw
      yDbDeb1eRKNR2jPCigAWFxfh8/moX5XU7+RwOKDVatHY2AibzQa1Ws38PpPJJO0cbWhooBv2
      aerq6mhe/ubNm7TDl0UoFILdbkckEkE0GpXM6ZMOXIfDAafTCZfLRf1tpDCbzTRlQvpmWA9L
      UrR0Op3I5XJMaevy8jICgQBKpRIODw9ldfDkb0UiEWQyGXg8HuZriaFcJpNBtVplHj6IBNXv
      98NkMoHjOGYa0GKxwG63o6WlBXa7nXnvCYKA2dlZVKtVtLW1YXl5WbL+tbW1hd3dXTx48ABd
      XV2yjaLA0SFxfHwczc3N2NraQnt7+9WuAZTLZdrYFQwGUa1WJXOhx3P5RP4o1zhz69YtmEwm
      3L9/X9Zjhejks9ksAPkmk1wuRyWdpINTCnIDbm5uoq6ujnljW61WfPbZZ7BaraipqUG5XJb9
      TKRTOpfLIZ1OM/P2tbW1CAQCVN0zNDTE3CxSqRTu3bsHrVaLYDDI/NuCIMBgMKClpQWNjY2Y
      m5tjvtbv96Ompga5XA4qlQqCIDC/187OTjx9+hTVapXZNGW326HX6+nmoFKpmAocYsFx8+ZN
      mo559OjRO6/leR6pVOrE/2exWJibv9vthlarPZf/fH19PUZGRqgzKItAIACLxYL19XVYrVZk
      MhnJ6Pef//wnzGYzOjo6aOe4XL2E53lMT0/DYDBQaa/UQ3h/f5+uPbVaDZ7nJR9Yoijihx9+
      oOv4xo0bzLVXKpUQCASwvb2NxsZGpg0GcCSqCAQCGB0dlRV0DA0NwWazUc0+x3HM34Cs0wcP
      HsjmzAFgY2MDFosFExMTsvcdkf8ajUZaiGXh9Xqh0WiQTCaRy+WozFWK44df1nvK2U5I4Xa7
      8fTpUwCgncNXdgMgQyrq6+thNpvR29tL7RBOs7GxccIES6fTSYbsgiAgGAyiWCzSB39LSwuz
      cEv0+sVikXr9nF5cZHEODg5iamoKAJjSSuDoJDo/P4+xsTEkEgksLS1hcHBQ8rWJRILmE1dW
      VtDb28vML/I8j1u3bsFoNMouCrVaTfPOxBaWxeDgIKanpwGAGVYDb72VfvzxRwDA3bt3ma/V
      aDQwGAzgeR46nY5KXU9TrVZx48YNGiazPhNJfR1/fykrCJIai0aj6OjogFqtRiQSkXxPs9nM
      zPdLsbS0RHX42WyWqVYKhUK0G5bYM7OiT7PZjDdv3qChoQGiKDIfar/73e+QSCQQDodRKBTO
      LC62trYilUohk8lQ3yopiWNvby+8Xi/u3LmD3d1dyXUiikfT0SwWC4aGhph/l7Czs0MLsTU1
      NUin08wNoFAo4O7du5ienpa1tiiVSvD7/bRILLeezWYzXr9+TWskcmoxo9GItbU16kbLWg9E
      KEI2E7moqlgsoq+vD5FIRNaITqvV4vbt29jY2EA6nWZ+tyqVCuVyGWq1WrZGRMjn8/jss89O
      vO7KbgCxWAyhUAjVahVzc3MQRZH5I5CCqyiKSCaTtMHpNKRdPRqNSi760/A8j8bGRioJSyaT
      7xSMiWtnqVTC5OTkmZ141WoVOp2ONmLIuVw6HA6sra3B4/FQJRSLeDyOmZkZukmxThfHC0GR
      SETSwfF4c01XVxcA+Q5H4G0EMjIyAo7jmFK49vZ2CIIAk8mEdDrNzBe/evXqhPSvu7tbMmfK
      2jxZDA0NYXp6GqIoMgv170u5XKabC8/zzCJoXV0dbVLT6XSyJ/UbN24cmXVptSiXy8x0gUql
      Qn19PRKJBLLZLP1tpRBFES9fvsTg4CD926z1x3Ec1Go1FhYWoNFoJNN/h4eHWFlZQaFQwMzM
      DADIpmrdbjdmZmZoYZnV3AUc1VVMJhPsdrusbQIxUzuPBJso6WZnZ6HT6U4UTk8Ti8WoUILl
      Wgoc3f/Pnz+H0+lEKpXCw4cPmb/VyMgIFaqwnj+5XA6vXr2iB5h0Ok3rWlLwPA+v1wtRFFFb
      W4vbt28zvwNSWyHRosFguLobQFNTE5qamrC1tSVrAw0c/UDb29soFotIJBL41a9+JbsQQqEQ
      ampqZE8WAKhXvsViQTAYpB3JxyGt6FtbW3QgiNVqZT6Y9Ho9PB4PfvzxRxiNRtnTssvlgkaj
      wc7ODiYmJmQfwsViET09Peju7qb1CCnUajU9ddbW1iKVSknmN3mel9VJH6dSqSAQCFAjvNev
      X0vKa0OhEAKBAC2uazQaNDc3S34uKYsKKbxe77kiAEIul6ObE0uu+D6IooibN29SpQjJ2UtR
      V1cHg8GAzc1NAEeabKloYXNzEy6Xi+rPVSoVlSOf5ttvv4Uoiujt7ZU14gPeDnk5nqNmRb8O
      h4Nuzq9evZI8UNXV1WFiYgLBYJBu7ES6KYVWq0Vvb++RD/2xoSlSEFuPyclJaqEhBVHHBQIB
      AEBbWxvzvrZarTAajeA4Dm63+8yU6urqKgAwJbjA0SbY29uLzs5ORKNRGmGeZm1tjT4fzGYz
      817WarV0/TQ3N6OlpUU29azT6WCz2ajDqdx3SpxLfT4fbDYb2traru4GABw9hJLJJPR6Pdxu
      N5LJpOSJkXSLDg4O0iEqctTW1mJmZgZWqxUtLS3MMLxUKmFrawtDQ0MIhUJ0Hupx1Go1JiYm
      0N3dLVvUAo42qp2dHQBvlRKHh4eyqomVlRXo9XpsbGzIFricTicaGhrODJmJbQO5dqmNinRf
      9vX10QEjcouQ5IiLxSJWV1eZslq32w232435+Xncvn37zN/pPLxvBEAMuVSq882gPYuFhQWq
      fGpoaJB9WAmCgGKxeGbnaE9PD5VJEuTqJJVKBRzHgeM42jcihUajQSqVwszMDK0bsF6bz+cR
      j8cBHKVC5eZ1R6NR+lCPRCLMCCAcDiMej6OxsVHWBDCfz6O5uRkOhwOFQuFMp0u1Wo1kMklN
      DFl4vV7qJjA9PU29jo5DnDoHBgZok51cWofYUEejUSrC0Ov172zsXV1d9DMLgoDp6ekTHkIE
      o9GIyclJupk+efIEAwMDTFHJ4eEhwuEwXC4XWltbZQ++er2ednd/FG6gxP5Vo9HQHU6KyclJ
      FItF+Hw+6o0xOjrK/DJu375Nu+zkTrk1NTVwuVz461//irGxMWZaY3NzEwaDgd78rAjAbDbT
      zYaYhsktrs3NTTx48ABerxdqtZp2cR6HeOsQlcSnn37KvFETiQRSqdSJDYJ1YiBDKPb396l1
      AQu1Wo1PP/0UkUgEJpNJVq5J/iE1nvN0GcsRCAQQDofp/9ZoNBgbG2NeL3lYqNVqOj7wIgwP
      D2NxcRFLS0uora2V9YPSaDTY39+nJ/umpiamCKBUKlExgc/nw5dffil5ajxPA9JxHj16RH9z
      ubVHpt8BwPj4OPN7UqlUcDqd+Pe//w1RFGU3ZLPZjHw+T2WqrHWayWSgVqtpespsNjPvPY7j
      kM1mqXXy8Rz/cWKxGDiOQywWQ7FYpGtQisXFRfpciMfjsFqtzOY6vV6PyclJattARjKe5vRv
      J3ePZDIZbG5uQhAE9Pb2MhVQwFGk9umnn2JlZQX/+Mc/8Otf/5oZXfj9fmoVQrIEV7oRDDh6
      wImiiN3dXbS0tJyZYweOIgepZiCiFydSUZvNhvHxcaZmnJyADg4OYLfbMTo6KnvTnJeFhQVk
      s1lUKhV88sknzFNYsVikrfMul0vy4VIsFqkXPaGhoUHyxJDL5d7ZRG02m+SC+e6776DT6bC/
      v0+7bEdHR9/5++VyGdvb2+jp6cHf/vY3WK1WdHR0SP79cDiMYDAIjuNgMBigVqsxPj5+ptXA
      hySRSFB/HeKIeBE2NzeRSqWwurpKh5Hcvn2bKQMl5oLA0cPjPBvQ5uYm6uvrmZvFeRFFEU+f
      PkU6naZ216z3DIfD8Pv9VFYsdaAihw/y7wBol7sUxWKR1hSAo82TFQUSW2nSiElqUacRBAHf
      f/89BgYGsLe3B5vNJhkxRKPREzORSfqR9TzJZDJ48+YN7Ha7rAlkPB7HysoKVT51dnZeKLI9
      ODjAn//8Z/T399Pvsauri1kDSKfT2NraosZ+coep2dlZtLW1IRwOI5/P49GjR1d3A9jZ2aF5
      PQLLYvi88DyPx48fY3R0FCaTCcViEd3d3czXZ7NZ5PN5WSuESqWCubm5E5GEXA2A4zh4vV7c
      u3cPgiBgZmaG6YkiCAIikQgNv9va2pgLNp1OY2VlBQMDA8jlcswwXBRFzM/P03CV9QBmLYvT
      CywWi1FTuc3NTfT392NqakrW5+WyePPmzQlrX4fDwUz/nRdS9CWoVCpm56goipibm0MoFMKj
      R48Qi8WYFgfZbBZer5f+d2fJEc8Dx3FYX1+HIAjo6+uD3+9nFsLn5uYwPDx8pg0CMUwkxWeX
      y8VUQfE8j6WlJfp9DQ4OMjfAFy9eoLe3Fzs7O8jn87LdzeVymTY1yk3ty2azWFhYgNFohNFo
      pLMujkMaJdVqNYaHh+nEMdYhJZ/PY3V1lSr/WBEA8HZwlFyqWCoykRqEQyBNk3q9nqrXpJ4R
      5NAFgM5utlgsVzcF1NLSQqWH5OR00b1Kp9PhN7/5DeLxOJWO1tbWMm0LjEYjbbMnub3TP4RW
      q8XExASq1SoODg5o6zgL0gi1tLSETCYjW2Dyer1Ui31WmoTMpC0UCtjZ2WFuAMlkEiaTCZ98
      8glisRi2trYk3SPPm5axWq1YX19HZ2cnbV2Xc+O8TLq6uk6sobOUTefhfd6DHBL6+vpgMplk
      1S1ms5mqxNra2j5IvcJgMFC11osXL5j58levXuHg4ABPnjyhzXIjIyPvPFjUajW1wCCqIjl/
      o3A4DLvdTg9Uct+d1WrF7OwsHj58SG2ZT5NIJDA1NUW7uYnFCSuqWVtbw8TEBLxeL3UvPS2r
      FkWR2s4Tm2eXy8W8TwuFArU/B47qi6wNoK6uDoFAAOvr69BoNJJKvfetTZGhSaurq9QK43Qj
      Gjn0kUNZXV0dPaRd2Q1AFEVwHIetrS34fD40NDQw/W3eB+Ic6HK5UK1WZQeoi6IIs9mMpaUl
      aDQaqrOXYnFxEel0GlarFel0WrLAQz7Tw4cPkUqlznT4tNvtqFardIGfpe+Px+PgeV52o7RY
      LFhYWIDJZKIWzxehpqYG/f39mJmZQbVahcPhkHW5vEzkhrr8FBDrg62tLSQSCdl8ud/vh16v
      x4MHDzA3NwebzSYrGz0LYjNM8sltbW3M0/edO3dQLBbpoSeTyUiuPUEQ8PLlSzidTnR1dZ0o
      LkpxfMoXAFmFS3t7O/r7+xEKhZgF0Pr6eng8HmSzWVgslhOOvFJ0d3fj+fPniMViaG5ulrz3
      iKjjvBiNRthsNnqNcik9MsTdaDTKZhXIA1un06Grq0vWMqazsxMvXrxAMplEXV0dM6LkOI72
      PZBZ08AVrgGEw2FMTU3hF7/4BUKhkGwT1H8TYiFL1COsa3jx4gXa29tRLpexs7MjOQxld3cX
      xWKR5jOPp4OkII1oJAwdHByUnQoViURosw/LsoH8s7e3R6eMnaeuonAxOI7D3t4efVCQZizW
      wy0YDKJQKKC/vx/T09NM19bzEgqF8Je//AWDg4N0Dff29jI3lfn5eZqimZubw9DQELMZ7ODg
      gM6mdbvdzIcbz/P0pAxA1mZ7enqaFtir1eqZKcV0Oo2///3vmJyclLWMIdd8EeHBcUhai9Df
      38881MViMXqPnpV+JLOOnzx5gjt37siqm8hBVq4JNBgMYnt7GzqdDqVSCWNjY0dT3M75OX9y
      Wltb8fDhQ6ytrdFOxN7e3p+sYJhKpbC2tgae55FIJPDVV1/JPij7+vpgsViwuLjITIHo9XpE
      o1G6AIl5GwudTkdzgnILNhgMUgtdYt0rtQjX19fR0NAAp9MJt9uNYDCIdDp94Ty4wtkYDAZw
      HIepqSk4HA7s7+/LnjTdbjf8fj+ePXsGj8dz5sDzs2hra8Mf//hHrK2toVgsyhrBAUcKpZcv
      X8LhcCCfz595353lrx8KhWCz2U50XzudTub76vV6PH/+HGNjY1heXpZ8TaVSwdbWFpU2fvnl
      l8wob3t7G7u7uwDejlr9wx/+cOE0IDmQEWeBs6JvvV5PU0Zyk/i++eYbNDY24quvvmJGNcFg
      kNqJVCoVbGxs4Pe//73kM6W9vf1EGos8T65sBHAcQRAQi8XOnPb0IfH7/QiFQnC5XNjb23un
      hfo4Xq+XhvOiKMLr9Uq2b4uiiJWVFSQSCToXYHx8nHmqn52dPTE7lWVz/MMPP+Dzzz+nreHz
      8/OSEcja2hodBgK8la/K1SEUPgzVahWFQgHpdBqvX7/Gz372s3OrgLxeLzwezwdJYeVyOfj9
      fiQSCQwPDzNFFaIoIpvNIpvNUr28lALsm2++gdPpRGdnJ/R6PSwWi6QZmiAIUKvVJzYJOfuC
      arVKO6BZndCJRALPnj07mm37/+/T19fHrAGUy2V4vV5UKhUMDw/LpovOSzKZxP7+PvL5PGw2
      G2pra5kSz0QiATKHnNg3SEFSxeFwGOFwGB6Ph2kvIwgCnd52vMP7vFzZCOA4RLL1U9LZ2YmO
      jg7s7+8jkUjgxx9/xL179945NRHdLoGc7KVQqVTvlXNvaWnBq1evqFytvb2decMc9xZhncR6
      enrw4sULbG9vQxRFWgxW+O9DTqvVahUulwsbGxtobW2VfFiUSqUTtSk5e4fzkkqlMDc3B6vV
      Co/Hg+7ubtnNZ2dnB+vr69Rj65e//KWkG+jY2Bg99ZbLZeba29jYQCQSOfHQvXfvnuRDeHNz
      EzqdjjZN1tfXS943DQ0N+Prrr8/45G//figUoqk00o9y0VQQGcTE8zxisZhs+imfzyMUCsHh
      cKBYLMree0tLS+A4TtZcLxKJYHV1Ff39/eju7gaZtcz6TGQWAvCRDIS5SpCvSerLff36NUql
      ElpbW+kM4zt37lz4b5ZKJepKqVarJW2OgSPVxnHpmMPhkDWkU7jaxONxmq4A3h4cLpL+JOZv
      x9ev3Dzs+fl59Pf3IxAIoFwu4+bNmxfSt2ezWZpSbWhooE6WZw3uIVz0QR0MBk/4Hul0Olnf
      nPNw/DorlQqy2aysDHVmZgbDw8Pw+/1IpVLMuoYoijRN1dnZSXsxTuPz+U58Jo1Gg+HhYeY6
      mZmZwfj4+InrUzaAD0Q2m0U8HkdDQ8OZYwHPS6FQwPT0NPR6PZWbXuRGyGaz1LP8shUxCleb
      RCJBB43zPI/79+9/ELEAscH+4Ycf8Nvf/lZSVPGnP/0J9fX1VP1WX1//wYz7PiTxeBxra2tI
      p9O0q/zu3bvMeyuRSGB5eRmHh4fo6upiZgPI4BitVouxsTF4vV5Zz7CzKBaLePPmDZ1yRuZL
      dHV1KRvAVebly5e0W9Lr9coaXZ2H6elpeDweBINBKtUkpmwKCsfJ5/N0Lq8gCO/tPX8aIuk+
      PDw8IdmUes9SqURtXc7yLLoKLC8vo7W1VTb/nk6nadc0sfdm1TMrlQpmZmag0+nQ3t6OaDQq
      aUR5XoiQJJfLUTFBPp+H1WqFov+7wnR3d2NqagoLCwvY39+/8E0wPDyMSCSCeDwOn88Hn88n
      2wehcH1ZX1+nFizHH17/KZubm3SoUyaTwfz8/AlrhuMYDAb09/ejr6+PWjJcRSqVCorFIsrl
      MjiOO2HzcZpsNouDgwMkk0ksLi7S2RlSaLVaDAwMQBAE7O/vn2vWghxkk11eXka1WoUgCG+d
      ZpUI4GqSy+XogG1SuGFNb3ofiNe/z+dDW1ub5Kg/BQW/34+NjQ3cunULOzs7+OSTT36ySPHN
      mzc4PDyE3W6n3jpXsVclmUzC5/NRhROp1UiltYiuf2VlBa2trdRp9DTFYvGE/Xa1WkVnZ+eZ
      vQ1n4ff7MTMzQ3uQ2tvbj0aXKhvA1eT58+e4f/8+XSTz8/MYGBi4cDNcNpvF4uIiJiYmsLKy
      ArvdLus2qHA9IWqeXC6HarX6k9p7zM7Onog46uvrmR2uHwvff/89LaarVCro9XqmXBQ42jD8
      fj/C4TAGBwdpPeQiHJerEz4KGeh1RKPR0IlZ1WoV2Wz2gzTBkcHoGo0GZrOZGYYrXG+Wl5fh
      8Xjw6tUr6HQ6jI+PfxDvpPPA6oy/ilQqFWQyGdjtdtlIur+/H6VSiW6sctFUNBrFxsYGOjo6
      ZPuP3heNRoO1tTU6w1qv1ysRwFWF53nMzs6iUqlAEAR0d3dfOAyzTgdmAAAEUElEQVQEjk4W
      Pp8POzs7cDgcsla3CteX5eVlqhbLZrMYGRn5yTaAjwlBELC+vk47gS9qGZ9Op/H48WN0dXXR
      tFd3d7esd9B5CQQCSCQS0Ol0sNvtcLvdygagoKDwLtVqFYlEAk6nkzpMKgeFdxEEASsrK9Q8
      T84w8rJJJpN0dsjQ0BBsNpuSArpukJDV4XCA4ziUy+UP1reg8L9DPB7H0tISyuUyVCoVvvji
      C2UDkKBSqSCdTqO2thZ2u/3CE+b+mywvL2NychIqlQpPnz7F559/rshArxPVapU2rySTSfj9
      /hOdhAoKhJ2dHUxMTKCjowMul+vEIB2Ft+j1ejoBzuv1Mm1grgJarRa7u7uIRCI0nadEANcI
      Yt1bKBQQj8dRU1OjGMEpSNLc3EzXC8/zSrMgA57nEQ6H0d3djZGRkSsdJY2Pj8Pv90OlUtEJ
      a0oN4JpRLpcRiUTg8XiQSCSg0Wg+iMRM4X8HjuNOnPhVKhVMJtOVfrhdFpVKBS9fvgTHcWhv
      b0djY+OV7Fp+8eIFldYKggCDwYCJiQklArhuFItFOhSd53nacKOgQPjuu++QSqXofFmDwYCB
      gQFlA5AgFouhtbUV+/v7MJlMH6Rj/7/B+Pg4RFHE5uYm9vb20NPTA0CJAK4doihiYWEB2WwW
      Op0OY2NjSnivcAJRFJFKpbC1tQXgaHKX2+1WNgAJeJ7H9PQ0kskkrFYrHjx4cCVVQOFwGD6f
      D11dXWhpafm4BsIofBgKhQK0Wi3VLAOAzWZT9N0K70DGhobDYQiCgImJiStpx3CZVCoVlMtl
      iKKISqUCrVaLmpqaK/k9PX78+MTgnBs3bijzAK4b6XQaer2eziUFjkYFXsUTi8Ll8ebNG+zv
      78PlcqGtrQ1arVZ23ux1hcxCBt7OBv76668/qpSqsgFcM4rFItbX1zE8PKzc0AqSECtmgl6v
      x82bN6/kyfayqVarWF1d/Y9HMl42ShH4mqHX67G9vQ0AVAZ6kdZ1hf89PB7PZV/CR0E8Hsfs
      7CwGBgbogPdqtfpRbZRKBHDNqFarSCaTUKvVEEURVqv1SncvKihcVZLJJEKh0IlIuq+v76M6
      UCkbwDWjWCzC7/fj5s2bSKVSODg4oB7hCgoK1wslBXSN4Hkec3Nz2N3dRSqVQqVS+SDD6xUU
      FD5OlAjgmlGpVKi7Y6FQoDNCFRQUrh9KBHDNKJfLCIfDdI6px+NBU1PTZV+WgoLCJfDxlKsV
      PgiCIIDjOOTzefT09NB5wwoKCtcPJQV0zRBFEcFgEA6HA5VKBWazWekEVlC4pigpoGtENBqF
      yWTC7u4udnd3AQCDg4PKBqCgcE1RIoBrBPmpj//kKpVK6QhWULimKBHANUIUxRO+4GazGaOj
      o5d8VQoKCpeFEgFcI0KhEHiep41fS0tLaGpqgsPhuOQrU1BQuAwUFdA1IpvNwmKxoFQqoVQq
      wWw2I5vNXvZlKSgoXBL/B0GBgbKewaSWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Daily New' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3wc133v/c/MbAMWnQUgwU4RosQmUaRINYuSqEJ1ybZsSY7tPHZyb2Kn
      1ydPcq+dmzxPbhIn1+kucYmbiilRpEhJLBIpNrB3EkQh0YFFXWzfnXKePyBCogiSCwqF5Pze
      f/CF3Z1yBlzMd+acOedoSimFEEII19HHugBCCCHGhgSAEEK4lASAEEK4lOfjbyilME1zLMoi
      hBBiFI1aAFiWhWVZBAKBYd+2EEKIodNG6ymgTCaDaZoEg8HR2J0QQojLkDYAIYRwKQkAIYRw
      KQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRw
      KQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRwKQkAIYRw
      KQkAIYRwqYsGgFKKRCIx8No0TUKhEJlMZuDz3t5eIpEIALZtY1nWwLLnfhZCCHF18gz2ZkdH
      B5s3b8bj8fDcc8+RSCR49dVXmTNnDrW1tTzzzDPU19dTV1eHaZosXrwYTdOIRCIsWLCAV199
      laeeegqPZ9DNCyGEuAoMeob2+Xx8+tOfZv369QDEYjHKyspYtmwZiUSCWCzGyZMnee6550in
      07z99tssWLAApRTvv/8+t9xyC8FgEKUUSimAgZ8dxxm9oxNCCHFRgwZAUVHRea/Hjx9PR0cH
      r7zyCqZpsmLFCgzDQNM0AoHAQHXPzp07KSwsZMWKFQPr2rYNgGVZWJaFaZojdChCCCGGIqs6
      mjNnzjBnzhyWLVvGoUOHqKmpGbiStywLTdMAWL58Oa2trdTX1zNz5kw0TcPr9QIM3An4/f6R
      OA4hhBBDNGgjcEdHB9XV1fT09FBXV0cwGOTs2bM0NDRQV1dHfn4+kydPZteuXWzdupUbbrgB
      AMMwWLVqFdu3bycWi43qgQghhBgaTZ27NP+Ijo4OwuEwAB6Ph+nTp9Pb20tTUxPl5eVMnDgR
      pRRVVVX4fD5mzZpFKpXCtm3y8vKIxWLYtk1hYeHANjOZDKZpEgwGR+/ohBBCXNSgATASJACE
      EOLqIh3BhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQA
      hBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQA
      hBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQAhBDCpSQA
      hBDCpSQAhBDCpS4aAEop0un0ea/7+vqIxWIopVBKEYvFSCQSADiOg23bAFiWNfCzEEKIq5Nn
      sDd7enrYsmULhmHw7LPPAvDuu+9iWRaapnHPPffQ2NjIsWPHsG2bO+64A8dxiEajzJs3jzVr
      1vDII4+Ql5c3qgcjhBAie4MGgOM4rFq1io0bNwLQ19dHOp3moYceQtd1dF3n8OHDfPaznyWV
      SrFp0ybmz5+PZVlUVlZyww03kJeXh1JqYJvnfv7oe0IIIcbOoAEwfvz481739vbS0NDAhg0b
      iMfjPPHEExiGga7r5ObmYpomALt37yY/P58XX3xxYN1zn1mWRSaTwTCMkToWIYQQQzBoAHyc
      1+tlwYIF3H333dTU1FBVVYXjOAAD1UIAS5Ysobm5mdbWVqZMmYKmafh8vvO2FQgEhvkQhBBC
      XIlBG4HD4TAtLS1Eo1Ha2tqYMGECdXV1tLW1UVdXx/jx4xk3bhyHDx+msrKS6dOnA/1B8eij
      j7JlyxZSqdSoHogQQoih0dQglfLNzc10dXWhlMLr9TJ37lxSqRSHDx+mrKyM2bNno5Ti0KFD
      +Hw+5s2bRzKZxDRNioqKCIfD2LbNuHHjBraZyWQwTZNgMDiqByiEEGJwgwbASJAAEEKIq4t0
      BBNCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeS
      ABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeS
      ABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJeSABBCCJe6
      aAAopVBKXfCe4zjn/fzR1+eWH2xdIYQQV5dBAyCZTLJ582Y2bNhw3vt79uzh9ddfB6ClpYWX
      XnqJl19+ma6uLlpaWqiurkYpxcaNG4lGoyNfeiGEEFds0ADo6uripptuIp1OD7zX29tLW1sb
      hmEAsGvXLj7zmc/wyCOPsGfPHtLpNIlEghMnTpCTk0NBQcHoHIEQQogr4hnszalTpwKwd+9e
      ABzHYfPmzaxatYrNmzcDoOs6Pp8Pr9dLMpkE4ODBg/j9fj7/+c8PrGeaJgCmaWKa5kCACCGE
      GFuDBsDHHT16lFQqxdGjR2lpaaGxsXHgM6UUmqYBUFFRQWNjI9FolOLiYnRdx+/3A6BpGpqm
      EQgERuAwhBBCDNWgAZBKpTBNk0wmQywWY86cOZSXl2PbNvX19ZSUlJCTkzNwsp84cSIAeXl5
      PP7446xdu5bnn38ejyerfBFCCDEGNDXI4zq1tbW0tLSQyWQIBoMsXboUr9eL4zjU1tZSUVFB
      KpVi+/bteL1e7rzzTuLxOOl0mrKyMhobG/H7/ZSWlg5sM5PJYJomwWBwVA9QCCHE4AYNgJEg
      ASCEEFcX6QgmhBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAu
      JQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAu
      JQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAuJQEghBAu
      JQEghBAuJQEghBAuddEAiEQi1NXVDbxubW1l69atnDp1CqUUtm2ze/duDhw4gOM4xGIxent7
      AWhrayMWi4186YUQQlyxQQOgpqaGTZs2ceDAAaA/DE6cOMHNN99MbW0tzc3NvPvuuxQVFWHb
      Nvv27SMUClFfX08sFmPz5s3k5OSM6oEIIYQYGs9gb86ePZs5c+bw2muvAVBQUMCDDz6IZVnY
      to3f76e3t5cHH3wQ27ZZs2YN48ePJ5VK8dZbb7Fq1SoMw0AphWVZAFiWhWVZZDKZ0Ts6IYQQ
      FzVoAOj6hTcGfX19rF+/nsWLFzNhwoSBZc6d6AGOHj1KTk4OJSUlA+sZhgGAbdvouj7wWggh
      xNgaNAA+zrIsXn/9dZ566imKi4uB/hO6bdukUil8Ph8At99+O7Zts2vXLu6++240TUPTNKA/
      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
      OSQkcpwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
      37+/zVV1S/PPkiVLePLJJ3nyySe599571WagCRMm8Mknn7R6MrBPnz54e3szbdo0xo8frzZH
      fVd5eTk33XQTAQEB6nna0hKydu1aMjIy+PTTT9Xlo6KiiI2NZfr06YwZM+a892W+7XsfAx04
      cCDHjx/nvffeY/fu3YSGhjJgwAASExP57LPPyM7OJiwsjJEjR6LRaKioqKB///5AczU4Li4O
      rVZLeXk50dHRhIWFkZSUxObNm1utq9frKSgoYPDgwURERLB69Wq++eYbnE4nISEhDB06VA08
      69at49y5cwwcOJCSkhK6deuGu7s7vr6+7Nq1izFjxtC9e3eg+Wpi586dbNq0iX379tG9e/fz
      tgefOXNGfdJCq9XSt29f3nzzTbZs2YJOp2Pu3Lno9XoiIiJYt24dO3bsoEePHkRERPDaa6+R
      mJhIWFgYYWFhdO/encrKSoKCglrd0PTz8yMsLIxVq1aRkJBAWVkZw4cPx9/fn1dffZXExESC
      g4MJDg6mV69ebN++nfXr1/P1119z880306dPH/r378/GjRv5/PPPOXz4MP3798fb25t33nmH
      zz//nIMHDzJ37tzvfZLpStPY2IhGo1GDdrdu3UhNTWXcuHFERkai0+l4++232aI/7CAAACAA
      SURBVLlzJ3a7nbi4OAwGAw6HA3d3d4YMGYKXlxeHDx9m0qRJhIaGtko/KioKp9PJqlWr2LFj
      By6XiyFDhuBwOHjzzTfZv38/0dHRdOnShfDwcD766CM2btzI7t27mTVrFl26dKF3796sWbOG
      hIQEcnJyGDp0KC6Xi9dff51t27aRn5/Pfffdd96mgW8TQrBnzx52797NoUOHGDRoELNnz0ar
      1RIeHs7rr7/Ozp070ev1BAcHM3jwYCwWCw6Hg27dumG1WmlqalJv8oeFhbF+/XoefvjhNo9C
      u7u7k5GRwY033kjnzp3x9/cnOTmZu+66S32a7+zZs2qThBCCVatWkZeXx/DhwykqKqJv374Y
      DAZsNhsWi4UePXq02pdvvvmG2bNnt/t0YEv7fMv+DhgwgDlz5qDVagkODmbr1q1s3bpVrbm1
      PEYaERHBu+++yx//+Mc2BWN1dTX+/v6EhISox3vUqFEoiqI+fNKrVy+++eYbPvroI44ePcqf
      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
      Rm8uEFcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='State- and County-Level New Cases and Deaths' width='384'>
      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
      4ovim2++EUII8dhjj4mFCxeq9V2yZIlYsGBBu/Jffvll9T0o1NbWiqlTpwqPxyMWLFgg/vWv
      f6l1fP3118XChQuFEEI0NTUJj8ejnvfUU0+JlStXCiGE2Lp1q3jqqaf8yt2+fbu46667hM1m
      U+9t6tSpQpZlcejQIXHrrbeq9W1paVGPC3Lm0K0RwBtvvMHBgwdZunQp06ZN4/HHH+c3v/lN
      wON1Oh01NTUsXryYmpoaWlpaVBNRIA4ePEjv3r39bMRarZaamhry8/PJz88H4NJLL6V///7q
      MWazmU2bNrF7926am5s5dOgQMTEx6v709HRV+zSZTKqNdOPGjdx1111dmjMUc04gcnNzufTS
      S9UyUlJSSEpK4ujRo6p22hF6vZ6UlBS/++jIfitJEv/1X//FAw88wPXXX09TUxOlpaWMGjWK
      3Nxcvv/+ewBGjRrV4ftobm7GarUihKCgoACAjIwMCgoKuPDCC2lsbKSiooKEhARWrlzJ7bff
      rt7jRRddpJ7Tp08f8vPzVdNDZ0iSxD333MP//u//MmLECL99ubm5XHLJJWq5KSkprFy5EkmS
      GD9+PJs2bWLixIls2bKFBx98kFmzZuF0Otm6dSvnnntuQE2/o4nz0NBQVq5cSWFhIS0tLdTX
      16vzPcOHD2f27NlcddVVjBkzRn1vubm53HbbbWr90tPT2bt3L1dddRXDhg3j2Wef5fLLL/c7
      xxev18snn3xCeXm5aspxOBzo9XokSSI9PV09VmmXsiyze/duHnvsseMyociyrDpi5OXlcfnl
      l/s937Vr1wKtbW39+vXk5+fT3NxMaWkp2dnZnZadkJCAyWTyq68QgoSEBJqampgzZw7nn38+
      w4YNw2g09rjuQX5dujbq0vpB9+vXjz//+c9ceOGFzJkzp8MOZ9++fTz55JNMmzaNUaNGYbfb
      mTdvXodlO51ODh8+zJdffqluy8nJQafTkZaWRmhoKAC9evXyO2/hwoXs2rWLa665hpiYGH74
      4Yfu3ApOp9PPS6ajDy4tLY28vDwGDRrUbp/L5SIkJMSvjJCQkJPiMpeSkkJqaiobN26kpqaG
      CRMmYDAYiI2NZeTIkQCkpqZ2eL4ykffvf/9bvVej0UhcXBx6vZ6JEyeyevVqJk2aRG1trXq/
      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
      F+J0Ojl48CBJSUn06dOHzZs3o9VqeeihhzCbzTQ1NfHiiy9SWVnJkCFDuP7669FoNBw6dIi3
      3noLWZa56KKLuOCCCzh69CiFhYWEhoayfPlyZs6cqY6Ahw0bxsSJE3n77bfb3eeqVavo3bt3
      u/fVluTkZP7yl7+omnp6ejrNzc0cPXqUyMhINU/zNddcww8//EB2djb/8z//oybR6dOnD1u2
      bMHpdFJcXMxf/vIX9Ho91113HXPmzOkws9jZyM0338zbb7/N3/72N7/tDoeDBQsWUFZWRkpK
      CrfffjulpaWUl5czceJEmpubmTt3Lvfddx/h4eGsWbOG5ORk9dsuKyujvr6eG264AUmSCA8P
      B1oVz7fffpvS0lI0Gg1XXnklw4cPx2q1Mn/+fGpqaoiKiuK2224jIiKClStXsmrVKiwWC9On
      Tyc1NZX9+/fz8ccf43a7GTRoENdee223RuEWi4W4uDg1CdJbb73FM888w/r161m1ahVut7vj
      EUBaWhomk4mHHnqI7777DofDgSRJXHPNNaSkpHDHHXdwyy23IEkSRqORW2+9lccffxyNRsOq
      Vau45JJLyMzMZNq0adx+++2Eh4fz2WefER4ezuzZs8nMzOS9997r1kv75JNPiIqKYvbs2WRk
      ZPDBBx+QlJTEp59+iizLCCH4/PPP1RR+hYWFPPPMM1x22WXMnTu3y4d08cUXs3jxYr/tVquV
      1157jZkzZ/LXv/6VBQsWYLPZaGxsZM+ePQgh+O6771i9ejVer5eioiIqKirU82VZ5tChQwEz
      jRkMBm655RYef/xxTCYTy5cvVzvQ+++/n4cffphevXohhODll19m0qRJPPPMM1RWVrJx48ZO
      72fChAns2bMHl8vFSy+9xP3338/jjz/OokWLqK2txe12s2rVKs477zyefvpptaP84YcfMBqN
      PP7441x11VWq9rJ7925aWlqYMmWKmhrx1ltvJTo6mqNHj7Jnzx6gdeRktVq79T4BbrnlFt55
      5x2/fMlut5vZs2dzxx138N///d/k5eWxZcsWNU8wtM7lfP3118TExPDpp5+q7aJPnz68//77
      AGzYsIERI0bw9NNPU1FRgcvlYtasWWRnZ7N582b1/VxzzTU89dRTFBcXs3btWtxuNy+99BJ3
      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
      BUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAR
      EUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAyl
      AIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAi
      YigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEU
      ABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAERE
      DKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQC
      ICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiI
      oRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIA
      REQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBEx
      lAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqA
      iIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKG
      UgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQ
      ETGU59c9gIfF5XLidn/doxCRh8HDwwObzfZ1D+OR98gE4OjG39Hm6lFw1nzdQxGRr+DmY+F0
      Gv8GgYHBX/dQHnmPTABa19+g642DUFv5dQ9FRL6Cy616fOHPdX/mtP9BZwxpaWn4+fkxePBg
      0tPTyczMZNq0af/rcTYnOzubkydPMnHiRHbv3s2TTz6Jt7f3Q/8+D0OzAcjOziYjI4Px48ez
      f/9++vXrh5+f3xfa6IkTJ9i1axff/va3GTp06EMbbKPc3FyOHDlCly5d6N+//0Pfvoh8M2Rk
      ZOB0Ounbty8nT54kPj4eu/1/Ll0eP36c6Ohojh07RnJy8n23dfbsWW7fvs0zzzzDgQMHuHjx
      IvX19Xz44Yd4eXkxZswYDh48SE5ODkOGDMHPz4+tW7fSsWNHunfvTmVlJQEBAZSVlVFRUYGn
      pyf+/v5cuHCBGzduMG7cOLy9vSkuLmbLli0MGDCAjIwMEhISOHLkCOfPn2fw4MG4XC7OnDlD
      VVUVbdq04datW3z/+99n9+7dFBUV8dxzz5Gfn8/hw4d54okniIuL+4/Nb7MXgYuKitiyZQt5
      eXlkZmZSXV3N4cOHWblyJRUVFRw4cAC32822bdtwuVwcPnyYhoYGPv30U9avX8+sWbPo3bs3
      hYWFrFq1in379uFyudi0aRNr166lpqaGAwcOsGrVKm7evMmFCxdYtWoVmZmZDxz0Rx99xKRJ
      kzh37hx1dXUPdUJE5Jvj4sWLHD58mPr6ei5cuEBNTQ0lJSW4XC4uXbrEzZs3qa+vp7y8/IHb
      stlshIeHU1BQgKenJ97e3uzevRsPDw/Kyso4deoUgYGBxMTEsHz5cjZv3kzr1q2JiIiguLiY
      M2fOUFpaSmZmJtu2bePAgQNcuXKFTz75hODgYHbu3Gl9r/Hjx7N+/XrrDCUwMJAOHTqwatUq
      zpw5g91up6SkBH9/f06fPk1mZiYnT54kOjqajRs3snr1anr16kWrVq3+Y3MLD7gL6Hvf+x4f
      fvghAGVlZWzdupX4+HjWrFnDwYMHuXjxImvWrOH8+fPs27cPm81Gfn4+/fv3x9/fn9DQUGw2
      G926deP999/n3LlzHDp0iB49elBaWsru3bvp0qULqamprFmzhujoaPz9/R84aG9vb+x2OwEB
      AQqAyCNu+PDh7NixA4CqqiqysrJwuVycOHHiS2/riSeeYMWKFfTocWeZqaKigpycHHx8fPD1
      9WXdunXYbDbsdjvPPvssDQ0NrFixApfL1WS5ydfXl+nTp+Ph4UFhYSHl5eVERkZaHw8KCiIg
      IID8/Hzq6+tZt24dnp6e1jbat29PUFAQHTt2pHXr1lRUVFBSUsLly5fp1KkTL7zwApmZmaSl
      pX2VqXug+wYgNDQUPz8/8vLyuHXrFleuXOHcuXPExsbSv39/Vq1axZQpU1i/fj09e/bEZrMR
      GhpKXl4ebrcbl8vFzp07KS4uplWrVoSFhZGcnMx7771HTk4OV69eJT8/n5iYGKZPn05ubi4b
      N24EwOVyUVtbi9PpvGsn73Q6cbvdVFdX4+n5yFzGEJF7cDgcVFZWUlVVBTRd9/8ywsLC6Nat
      GzU1NfTp0weHw8GgQYNwOp2UlJQA0KJFCzIzMwkJCeHIkSMUFBQQHh5O27Zt+eijj9i4cSOB
      gYGEh4fj4eFBfHw8AQEBlJSUWPspf39//Pz8GD9+PNXV1Xh5eeHl5cXp06cJCQkhICAAHx8f
      goKCaNGiBWFhYfTs2ZPw8HBKS0upqalh9+7d3LhxA4fD8XAmsRk2dzOzefjwYVq0aEFERARz
      587lzTff5C9/+QsAsbGxJCYm8vLLL7N06VJmz57Na6+9RlhYGG63mzVr1pCbm0tcXBw2m428
      vDwqKiqYOnUqmzdvpqqqihdeeIHVq1fj5eVFr169KC0tpbS0FIfDwQ9+8APy8/M5dOgQcXFx
      FBUVMWrUKGts+/fvp6ioiJYtWzJmzBhsNhtZ6+bS/cJfdBFY5P+5y6164DtjG4GBwezdu5fE
      xESqq6t59913eeWVV1i+fDnBwcEEBAQQEhJiXQMYGx9eIAAAAMVJREFUPnz4/+r7ud1u3G43
      drudhoYGAOs6g9PptG5Jdblc2O32uy42f/brm/P57T5oHI0H0P/p22GbDUBzA2xoaMDDw+OB
      n9s4WY1/bjxSd7lcwJ37fBu399nJ9vT0/EI/8GffGEABEHlEfDYA9+JyuaxlGvlqvlQAvsmy
      0v/7FlB3w9c9FBH5ChpsXkT3TMS35YOvB8pX88gEQEREvhydQ4mIGEoBEBExlAIgImIoBUBE
      xFAKgIiIoRQAERFDKQAiIob6L4x5DrJe877PAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Tri-State New Cases + Deaths' width='384'>
      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
      +uO0c+dOoBCNU1dX2mJr169fp6GhAdu2CYfDjI6Osn79en7zm9/Q39/P6dOneeyxx3jvvffY
      tWsXmUyGw4cP09zcDMDGjRtpaGigv7+fbdtmLwWRSCSorq7m+vXrrF27FiGEP1eqq6tpbm7m
      2rVrnD9/nosXLxIIBJBScujQIc6cOcPatWuprKwkFAqxZ88ebt26xY4dO2Z1Qo6MjBCLxfzv
      9/jx4zQ2NlJbW4uUks8++4zOzk66u7sJhUK0tLSwadMmLl68SCqV8sd7586dSCmJRCKsWrWq
      dF/AFPr7+wmHw9y8eROAyspKPvzwQ7Zv305HR4c/dwC2bt1KdXU1ExMTbNq0aUnkSafTtLW1
      +fM2FApx48YNjhw5Qnt7e6ECazrNO++8w/DwMBcuXOCxxx7zna+7du3Ctm1isRi1tbUlla27
      u5umpiauXbtGU1MTra2t7Nmzh08//dSfQ6tXr+bMmTPU1tYSiUR4//332bZtWyGprqTSLCN7
      9uyhtbWVZDJJVVWV/2PYunUr27ZtY+PGjVy9ehUpJbdu3eKVV15h8+bNwMIjdlatWkU6ncZx
      HMbHx1m9utAIo6qqin379tHY2Ehvby/19fX09fVh2zaXLl1ix44d/v0eZLTF1NNOPj9z4/sH
      IU99fT0vvPACBw8e5K233iKXy3H69Gmee+45nnvuOV9JP/XUU3zve99j06ZN9Pff7ku71DJ+
      7Wtf4+zZs/6us7Ozk61bt7J//36efPJJ2traqK6upr+/n7a2Nn/+3I9sjz/+OJcvX2ZkZIS6
      ujp/3jY3N7NlyxY2bdrkj0t/fz+vvvoqjY2NwMLnbX19PaOjo0gpSaVS/mK0atUq9u7dy/r1
      6+np6WH9+vW0t7cjpeTq1as0NTX593sU5+369et55pln+OSTT/jNb36DbducPn2ab3zjGzz7
      7LO0tLTgui5f/epX+d73vkddXZ1vEn4QY7Zx40YymYxvznNdl9HRUb7//e/zgx/8gNOnT9Pc
      3ExraytjY2OEQiE/Y3nFKIBQKIRSigsXLrBnzx7/+Y8//hjP89g6pb79448/Pusufz5s2LCB
      s2fPsm7dOv+6LS0tdHR00NjYSHV1NQC7d+/m3LlzhEKhkpYlmA/5fL5kqe6lQCnFpk2b+JM/
      +RO2b9/O1atXsSyLrq4uOjo62Lt3712feZALTiQSYfv27f4x2vM8/zsLhUK4rsu+ffu4ePEi
      XV1dc+7050NFRQWWZdHS0sLu3bv95z/88EMMw6Cpqck/ru/du/e+51BDQwNnz55l48aN/nPn
      zp2jt7eXxsZGKisrEUKwc+dOzp07RywWe+BzyLKsspu3W7du5cc//jGNjY20t7djWRYdHR10
      d3fz+OOP3/WZBzlvhRB8/etf5+jRowDTSnkEiuW/N2zYQH9/Py0tLdPWxxWhACZ3Qrt27eLi
      xYv+DgkKu4ixsTHOnz/v7ybu3DVNTExw5MgRurq6OHHixLzsuHv27OHAgQM88cQT/nOe55FK
      pWhra/N3AHv37uXQoUPs27fPv6/runzxxRe0tLTQ0tLCxYsX73cIptHd3c2ZM2e4cOECGzdu
      pLq6mlOnTnH48GH/WA3Tx+HMmTOcOXOG9vZ2Tp48WVJ5Jrl16xZvv/02x44d48qVK6xfv54n
      nniCoaGhQtnlol356tWrHD16lJs3b9LQ0AAUxuzYsWNcvnyZixcv+ot0qXnyySe5caNQx37L
      li1cunSJM2fOcPz4cXbu3MmqVasYHBykoqJi2mJ87tw5Tp06RUdHB1988cW87yeEoKmpiRs3
      blBfX+8/Pzlvz507d8+ol7GxMY4cOcLNmzc5duzYtO92pvsIIdi3bx/vv//+jPN2qm3/6aef
      5sMPP+Tpp5/232dZFsePH+fKlStcuHCB1tbWef+d86Gjo4MzZ874c6OyspKTJ09y8OBB+vr6
      ZvzMyZMnOXfuHNeuXePMmTMllWeSzs5Ofvvb33Ls2DHa29tpaGhg7969DA0NIaX0bfuXL1/m
      888/Z3R01DePOY7DkSNHaGtr4/z589MctqWkvr4e0zRJJpN+ocEvvviCDz74gF27dhEIBKiv
      r+f69eusW7fO/9xDXQxush+A67qEw2Hf4VtRUUEulyMcDuM4DgMDA6xevRohBJFIBMdxppWZ
      dhyHZPJ2yeJoNEpsSpnbqbiu6/sSkskklZWVvjMwEAjQ19dHNBolEokQi8XwPI+33nqLV155
      xT/eT06ayaEPBoNUVVWVbFzS6TQDAwM0NDRQUVGBUore3l4CgQAVFRXE43F/lzUpUyKR8J1X
      hmGU3FYJhZ1UMpn0zQ+TY5xIJMjlcqxevdp3FO/evZu6ujp/kV3KMVNKkc1mfX9IJpPBNE0i
      kQjZbJbBwUHWrFnjvz4+Pk44HJ42R6aOnxBiVvv4ZD+AfD5PNBr1u97F43Gy2UIjHtu2GRwc
      9G3v4XDYn3eT2LZNKnW70U8sFiN6j5aek07AUCjkm0kty/KLhPX19RGPx/2/y3VdfvnLX/L6
      66/7G4WlnrepVIrBwUEaGxuJxWKFXge9vb5M8XicfD5POBz2d9jj4+O+yc40TWpqakomzyST
      QRPpdJpVq1b5Yzw2NoZlWdTV1dHZ2cng4CDNzc3U19f7Jxgp5bRIq1AoRGVlZclkmzzlm6aJ
      bdtYlkVlZSWu69Lb20s8HvfXvslgi6lzc0UogHI6Lk5FSsn777/Pnj17lsyxutIYHh5mYmLC
      d66uRErVEGapkFLyzjvv8JWvfGWaqUhzb/r6+nAcZ5pf6GFAKwCN5gFT7gpA8+igZ6BGo9E8
      ovx/YeTe/2P1Ym4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
