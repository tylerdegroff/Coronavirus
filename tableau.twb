<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1110.1623                               -->
<workbook source-build='2020.3.3 (20203.20.1110.1623)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='4.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.percap' ordinal='12' />
            <column datatype='string' name='deaths.new.percap' ordinal='13' />
            <column datatype='string' name='cases.new.perM' ordinal='14' />
            <column datatype='string' name='deaths.new.perM' ordinal='15' />
            <column datatype='string' name='cases.new.7dsma' ordinal='16' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
            <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
            <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
            <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
            <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
            <column datatype='integer' name='cases.active' ordinal='22' />
            <column datatype='string' name='cases.active.percap' ordinal='23' />
            <column datatype='string' name='cases.active.perM' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.percap' ordinal='12' />
            <column datatype='string' name='deaths.new.percap' ordinal='13' />
            <column datatype='string' name='cases.new.perM' ordinal='14' />
            <column datatype='string' name='deaths.new.perM' ordinal='15' />
            <column datatype='string' name='cases.new.7dsma' ordinal='16' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
            <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
            <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
            <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
            <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
            <column datatype='integer' name='cases.active' ordinal='22' />
            <column datatype='string' name='cases.active.percap' ordinal='23' />
            <column datatype='string' name='cases.active.perM' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases.active (data.csv)]' value='[data.csv].[cases.active]' />
          <map key='[cases.active.perM (data.csv)]' value='[data.csv].[cases.active.perM]' />
          <map key='[cases.active.percap]' value='[data.csv].[cases.active.percap]' />
          <map key='[cases.new.7dsma]' value='[data.csv].[cases.new.7dsma]' />
          <map key='[cases.new.perM (data.csv)]' value='[data.csv].[cases.new.perM]' />
          <map key='[cases.new.perM.7dsma (data.csv)]' value='[data.csv].[cases.new.perM.7dsma]' />
          <map key='[cases.new.percap.7dsma]' value='[data.csv].[cases.new.percap.7dsma]' />
          <map key='[cases.new.percap]' value='[data.csv].[cases.new.percap]' />
          <map key='[cases.new]' value='[data.csv].[cases.new]' />
          <map key='[cases.percap]' value='[data.csv].[cases.percap]' />
          <map key='[cases]' value='[data.csv].[cases]' />
          <map key='[countyState]' value='[data.csv].[countyState]' />
          <map key='[county]' value='[data.csv].[county]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[deaths.new.7dsma]' value='[data.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.perM (data.csv)]' value='[data.csv].[deaths.new.perM]' />
          <map key='[deaths.new.perM.7dsma (data.csv)]' value='[data.csv].[deaths.new.perM.7dsma]' />
          <map key='[deaths.new.percap.7dsma]' value='[data.csv].[deaths.new.percap.7dsma]' />
          <map key='[deaths.new.percap]' value='[data.csv].[deaths.new.percap]' />
          <map key='[deaths.new]' value='[data.csv].[deaths.new]' />
          <map key='[deaths.percap]' value='[data.csv].[deaths.percap]' />
          <map key='[deaths]' value='[data.csv].[deaths]' />
          <map key='[fips]' value='[data.csv].[fips]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[state]' value='[data.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyState]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>countyState</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.percap</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.percap</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.perM</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.perM</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.percap.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.percap.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.percap.7dsma</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.percap.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.percap.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.percap.7dsma</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.perM.7dsma (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.perM.7dsma</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.perM.7dsma (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.perM.7dsma</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.active (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.active.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active.percap</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.active.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active.perM</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;' value='Σ Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' value='Case 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;' value='Σ Deaths' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;' value='Deaths 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY() - 1' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='County-Level' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.state.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[cases.active (data.csv)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
      <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[cases.new.percap.7dsma]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County and State' datatype='string' name='[countyState]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' hidden='true' name='[fips]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
        </groupfilter>
      </group>
      <group caption='Action (County, State,Cases per Capita (bins))' hidden='true' name='[Action (County, State,Cases per Capita (bins))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
          <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),County,State)' hidden='true' name='[Action (MDY(Yesterday),County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),State)' hidden='true' name='[Action (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (cases.new.7dsma,State)' hidden='true' name='[Action (cases.new.7dsma,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cases.new.7dsma:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Contiguous USA' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[state]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Northern Mariana Islands&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Puerto Rico&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cases per Capita (bins),County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County, State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1718193694053994508:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Bins' role='dimensions'>
        <folder-item name='[Cases per Capita - County (bin)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[cases.active (data.csv)]' type='field' />
        <folder-item name='[cases.active.perM (data.csv)]' type='field' />
        <folder-item name='[cases.new.7dsma]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new.7dsma]' type='field' />
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='dimensions'>
        <folder-item name='[Calculation_1718193694053994508]' type='field' />
        <folder-item name='[Calculation_204561939512385536]' type='field' />
        <folder-item name='[countyState]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='state, county' type='drillpath' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='measures'>
        <folder-item name='[Calculation_1718193694052151304]' type='field' />
        <folder-item name='[population]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='groups'>
        <folder-item name='[Continental United States]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Bins'>
          <folder-item name='[Cases per Capita - County (bin)]' type='field' />
        </folder>
        <folder name='Cases'>
          <folder-item name='[cases.active (data.csv)]' type='field' />
          <folder-item name='[cases.active.perM (data.csv)]' type='field' />
          <folder-item name='[cases.new.7dsma]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new.7dsma]' type='field' />
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
        <folder name='Metadata'>
          <folder-item name='[Calculation_1718193694052151304]' type='field' />
          <folder-item name='[Calculation_1718193694053994508]' type='field' />
          <folder-item name='[Calculation_204561939512385536]' type='field' />
          <folder-item name='[Continental United States]' type='field' />
          <folder-item name='[countyState]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[population]' type='field' />
          <folder-item name='state, county' type='drillpath' />
        </folder>
        <folder name='State-Level Fields' />
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Documents/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='12/14/2020 06:01:22 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[cases.active (data.csv)]' value='[Extract].[cases.active]' />
            <map key='[cases.active.perM (data.csv)]' value='[Extract].[cases.active.perM]' />
            <map key='[cases.active.percap]' value='[Extract].[cases.active.percap]' />
            <map key='[cases.new.7dsma]' value='[Extract].[cases.new.7dsma]' />
            <map key='[cases.new.perM (data.csv)]' value='[Extract].[cases.new.perM]' />
            <map key='[cases.new.perM.7dsma (data.csv)]' value='[Extract].[cases.new.perM.7dsma]' />
            <map key='[cases.new.percap.7dsma]' value='[Extract].[cases.new.percap.7dsma]' />
            <map key='[cases.new.percap]' value='[Extract].[cases.new.percap]' />
            <map key='[cases.new]' value='[Extract].[cases.new]' />
            <map key='[cases.percap]' value='[Extract].[cases.percap]' />
            <map key='[cases]' value='[Extract].[cases]' />
            <map key='[countyState]' value='[Extract].[countyState]' />
            <map key='[county]' value='[Extract].[county]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[deaths.new.7dsma]' value='[Extract].[deaths.new.7dsma]' />
            <map key='[deaths.new.perM (data.csv)]' value='[Extract].[deaths.new.perM]' />
            <map key='[deaths.new.perM.7dsma (data.csv)]' value='[Extract].[deaths.new.perM.7dsma]' />
            <map key='[deaths.new.percap.7dsma]' value='[Extract].[deaths.new.percap.7dsma]' />
            <map key='[deaths.new.percap]' value='[Extract].[deaths.new.percap]' />
            <map key='[deaths.new]' value='[Extract].[deaths.new]' />
            <map key='[deaths.percap]' value='[Extract].[deaths.percap]' />
            <map key='[deaths]' value='[Extract].[deaths]' />
            <map key='[population]' value='[Extract].[population]' />
            <map key='[state]' value='[Extract].[state]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='807156' timestamp-start='2020-12-14 18:01:22.590' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8321</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15824</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2564</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14335</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>329154</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>96059</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyState]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>countyState</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16420</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1533</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.percap</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>250822</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.percap</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80660</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.perM</remote-alias>
              <ordinal>13</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>250822</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.perM</remote-alias>
              <ordinal>14</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80660</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>15</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4694</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>16</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>483</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.percap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.percap.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.percap.7dsma</remote-alias>
              <ordinal>17</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>333088</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.percap.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.percap.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.percap.7dsma</remote-alias>
              <ordinal>18</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>119630</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.perM.7dsma (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.perM.7dsma</remote-alias>
              <ordinal>19</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>319538</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.perM.7dsma (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.perM.7dsma</remote-alias>
              <ordinal>20</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>103945</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.active (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active</remote-alias>
              <ordinal>21</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5031</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.active.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active.percap</remote-alias>
              <ordinal>22</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>399325</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active.perM</remote-alias>
              <ordinal>23</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>366790</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>5</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>4</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>3</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_187532707401031681:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203182039043:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:Calculation_187532707400040448:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_325455445230501890:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.perCap:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203179343874:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864367105:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864514562:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864535043:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864580100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864633349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864649734:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864666119:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864682504:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864698889:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.perCap:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='County-Level' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='deaths.percap' ordinal='8' />
                  <column datatype='string' name='countyState' ordinal='9' />
                  <column datatype='integer' name='cases.new' ordinal='10' />
                  <column datatype='integer' name='deaths.new' ordinal='11' />
                  <column datatype='string' name='cases.new.percap' ordinal='12' />
                  <column datatype='string' name='deaths.new.percap' ordinal='13' />
                  <column datatype='string' name='cases.new.perM' ordinal='14' />
                  <column datatype='string' name='deaths.new.perM' ordinal='15' />
                  <column datatype='string' name='cases.new.7dsma' ordinal='16' />
                  <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
                  <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
                  <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
                  <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
                  <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
                  <column datatype='integer' name='cases.active' ordinal='22' />
                  <column datatype='string' name='cases.active.percap' ordinal='23' />
                  <column datatype='string' name='cases.active.perM' ordinal='24' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5a' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County-Level Hot Spots
[&gt;100 New Cases]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='in-range'>
            <min>100.0</min>
            <max>6933.4285714285716</max>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='New Cases 7D SMA'>
              <formatted-text>
                <run>New Cases 7D SMA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Cook&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Illinois&quot;</value>
                    <value>3497.4285714285716</value>
                    <value>335204</value>
                    <value>5150233</value>
                    <value>41.812899999999999</value>
                    <value>-87.753600000000006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-114' y='-130' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Maricopa&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Arizona&quot;</value>
                    <value>3457.0</value>
                    <value>238187</value>
                    <value>%null%</value>
                    <value>33.279800000000002</value>
                    <value>-112.7681</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-9' y='83' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]>, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;New York City&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;New York&quot;</value>
                    <value>3350.5714285714284</value>
                    <value>342755</value>
                    <value>8336817</value>
                    <value>40.712800000000001</value>
                    <value>-74.006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-125' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='186'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Miami-Dade&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2164.8571428571427</value>
                    <value>246914</value>
                    <value>2716940</value>
                    <value>25.559200000000001</value>
                    <value>-80.590599999999995</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='20' y='60' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{277AF070-EEB8-474C-A442-6620AAEDDFD8}' />
    </worksheet>
    <worksheet name='5a'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[State-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6670967.0743742296' min='-14670203.825095043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;New York&quot;</value>
                    <value>653.85714285714289</value>
                    <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                    <value>43.0</value>
                    <value>-75.489999999999995</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6E5C1D5A-A324-4D39-AA35-1E76DE613F2C}' />
    </worksheet>
    <worksheet name='5b'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[County-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201213' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20200730</value>
                    <value>&quot;Douglas&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>123.85714285714286</value>
                    <value>&quot;POLYGON((-96.3274 41.19,-96.3656 41.2341,-96.3506 41.2652,-96.4076 41.3146,-96.4244 41.3661,-96.4707 41.3932,-96.329 41.3931,-95.9387 41.3932,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9276 41.2984,-95.9115 41.229,-95.9235 41.1909,-96.3274 41.19))&quot;</value>
                    <value>41.291899999999998</value>
                    <value>-96.150199999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-55' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='259'>
            <formatted-text>
              <run fontcolor='#787878'>County: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Contageous Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]> ]]></run>
              <run>per million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Westchester&quot;</value>
                    <value>494430.00870278862</value>
                    <value>&quot;POLYGON((-73.9826 41.3217,-73.5447 41.3664,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9826 41.3217))&quot;</value>
                    <value>41.124899999999997</value>
                    <value>-73.771799999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='160' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{42E61C40-2836-4455-BDA4-B4B6380BBC4B}' />
    </worksheet>
    <worksheet name='5c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'>WAVE 1 PEAK</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-15#</value>
                    <value>5425.7142857142853</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='124' y='0' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>CURRENT</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>3561.7142857142858</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-149' y='0' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C85D93EA-FE10-4771-B4D8-03FB23236857}' />
    </worksheet>
    <worksheet name='5d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Deaths - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='185'>
            <formatted-text>
              <run bold='true' fontalignment='0'>WAVE 1 PEAK</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>New Deaths 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-12#</value>
                    <value>828.85714285714289</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='133' y='-20' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>CURRENT</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>19.428571428571427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-62' y='-77' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C63D437F-3477-486E-A4A0-0691D9000DA3}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
            <format attr='break-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{C7BE4A65-2880-415E-821D-E62636CC1C9A}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='126'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Σ Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>297912</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-197' y='-73' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='143'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>16262815</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-194' y='-73' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='191'>
            <formatted-text>
              <run bold='true'>WAVE 3 PEAK/CURRENT</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>219313.99999999983</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-182' y='0' />
          </annotation>
          <annotation class='point' id='10' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 2 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-18#</value>
                    <value>65731.714285714261</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-71' />
          </annotation>
          <annotation class='point' id='12' mark-position='1' pullback='12' text-width='155'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-10#</value>
                    <value>31486.285714285692</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-65' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Notable States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{18B2D08C-D4D2-4F82-8F4C-7C904941F167}' />
    </worksheet>
    <worksheet name='Tri-State New Cases + Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='12' />
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])))</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-07#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>3674.2857142857142</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='147' y='0' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'>WAVE 1 PEAK</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-10#</value>
                    <value>&quot;New York&quot;</value>
                    <value>9877.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='74' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-22#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>1102.0</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='114' y='-27' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-12#</value>
                    <value>&quot;New York&quot;</value>
                    <value>1065.5714285714287</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='138' y='1' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-26#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>114.00000000000001</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-65' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-21#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>278.28571428571428</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-94' />
          </annotation>
          <annotation class='point' id='29' mark-position='1' pullback='12' text-width='181'>
            <formatted-text>
              <run bold='true' fontalignment='2'>Current</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;New York&quot;</value>
                    <value>10031.285714285716</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-123' y='0' />
          </annotation>
          <annotation class='point' id='30' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>Current</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2720.8571428571431</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-149' y='-59' />
          </annotation>
          <annotation class='point' id='31' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>Current</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>4666.5714285714294</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-132' y='-51' />
          </annotation>
          <annotation class='point' id='32' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Current</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;New York&quot;</value>
                    <value>92.285714285714292</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-81' y='-61' />
          </annotation>
          <annotation class='point' id='33' mark-position='1' pullback='12' text-width='144'>
            <formatted-text>
              <run bold='true'>Current</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>31.0</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-55' y='-54' />
          </annotation>
          <annotation class='point' id='34' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Current</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-13#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>61.428571428571423</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-71' y='-50' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3AEE0153-2BB7-47F3-A410-04767AF59D72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='511' param='horz' w='98888' x='556' y='979'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='58' param='vert' w='98888' x='556' y='979'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='59' w='98888' x='556' y='979'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='7' param='horz' w='98888' x='556' y='6120'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92901' id='5' w='98888' x='556' y='6120'>
                  <zone h='61859' id='35' name='Nation-Wide Daily New' w='49413' x='25200' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30896' id='146' name='Nation-Wide Cumulative New' w='24644' x='556' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30963' id='155' name='Nation-Wide Cumulative Deaths' w='24644' x='556' y='37016'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='31042' id='311' name='Notable States' show-title='false' w='98888' x='556' y='67979'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57566' id='324' name='1d' w='24831' x='74613' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4293' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24831' x='74613' y='63686'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='552' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='551' param='vert' w='98888' x='556' y='979'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='59' w='98888' x='556' y='979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30896' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24644' x='556' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61859' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49413' x='25200' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57566' id='324' is-fixed='true' name='1d' w='24831' x='74613' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4293' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24831' x='74613' y='63686'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30963' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24644' x='556' y='37016'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='31042' id='311' is-fixed='true' name='Notable States' show-title='false' w='98888' x='556' y='67979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State- and County-Level New Cases and Deaths'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='178' param='vert' w='98888' x='556' y='979'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='179' w='98888' x='556' y='979'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='28' param='horz' w='98888' x='556' y='6120'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='7' param='horz' w='98888' x='556' y='6120'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92901' id='5' w='98888' x='556' y='6120'>
                  <zone h='42379' id='3' name='5c' w='49462' x='49982' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41983' id='10' name='5b' w='49426' x='556' y='52603'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4435' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' show-title='false' single-line='true' w='49426' x='556' y='94586'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42379' id='14' name='5a' w='49426' x='556' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4104' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49426' x='556' y='48499'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42082' id='26' name='5d' w='49462' x='49982' y='52555'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4056' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49462' x='49982' y='48499'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4384' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49462' x='49982' y='94637'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='217' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='216' param='vert' w='98888' x='556' y='979'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='179' w='98888' x='556' y='979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42379' id='14' is-fixed='true' name='5a' w='49426' x='556' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4104' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49426' x='556' y='48499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42379' id='3' is-fixed='true' name='5c' w='49462' x='49982' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4056' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49462' x='49982' y='48499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42082' id='26' is-fixed='true' name='5d' w='49462' x='49982' y='52555'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4384' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49462' x='49982' y='94637'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41983' id='10' is-fixed='true' name='5b' w='49426' x='556' y='52603'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4435' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' show-title='false' single-line='true' w='49426' x='556' y='94586'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836711AE-A8FC-40BB-A283-4102C7E23F92}' />
    </dashboard>
  </dashboards>
  <windows pres-mode='true' source-height='30'>
    <window class='dashboard' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='1d'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Notable States'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='146' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='dashboard' name='State- and County-Level New Cases and Deaths'>
      <viewpoints>
        <viewpoint name='5a'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>20201213</value>
                  <value>&quot;New York&quot;</value>
                  <value>3561.7142857142858</value>
                  <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                  <value>43.0</value>
                  <value>-75.49</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5b'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;New York City&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>374198.80992949707</value>
                  <value>%null%</value>
                  <value>40.712800000000001</value>
                  <value>-74.006</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='5d'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{3FD9FA44-6E72-44CA-A079-4E2D80E4338F}' />
    </window>
    <window class='worksheet' maximized='true' name='Tri-State New Cases + Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E29869-794A-42BD-9FD3-6C37C11A1D8D}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C16D9719-18FC-49FF-9506-40BA605AB53C}' />
    </window>
    <window class='worksheet' hidden='true' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-16#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A69FE9-8E67-4E4E-8D8A-5DEA02588AF4}' />
    </window>
    <window class='worksheet' hidden='true' name='5a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED5063A-3620-48EF-A2E5-BD1E1DA58829}' />
    </window>
    <window class='worksheet' hidden='true' name='5b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4B5A0E-088B-4C88-A0B3-21B1C81304AE}' />
    </window>
    <window class='worksheet' hidden='true' name='5c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D64A6E8-DE6A-46B7-B86E-B23AC593D8C9}' />
    </window>
    <window class='worksheet' hidden='true' name='5d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E95A138C-5A92-427D-9DA7-5B0D9AF77F38}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='worksheet' hidden='true' name='Notable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{798B147B-0696-4FFF-81B2-64334898F022}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]' width='384'>
      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
      ioqKsNlsbNq0Kei+hq6J8vJy2tvb2bp1K1FRo68B43K56OjowGw209b24VOliYmJQa8Jh8NB
      cXExDoeDiIiIcV17uq7jcDgwm82YzWZcLlfQpHvnMZ07dw6n08n27duDJpz29nYSExOpq6vj
      xo0bbNiwIegd7FB/vs1mw2g0jis+TdM4ffo0q1evHtYq6e3tDVhptra2kpKSwrVr12hoaGDr
      1q3Exo58aPCj+6qsrKShoYGEhARWrVqF1WoNekxXr16lrq4OgPnz57Nq1aqAv8Oh8bShmwmn
      0+n/mwVSXV1NXV2dvwV5Z1fiWIbqFpvNRlFR0bjqFo/Hw+HDh9m1axdGo5GTJ0+yefPm8EsA
      vb29w+6QU1JSgl6wt27dIjU1FavVitPppK6uLujyE7qu09LS4r/rN5lMpKenB62MLl26RE1N
      DRaLBYfDwb59+8a8yH0+n//O/c47+EAXns/no7d35OJVJpOJ2NjYoBf5nauvlpaWcuDAgYAX
      ua7rHDt2jAcffHBcA1NDPySz2TzsrsZoNI75w9U0jZaWlhFPRRoMBtLS0sY850MtOp/PN6ys
      1WoNmtR0Xae/v9//97XZbGMOag5RVZXu7m7/viIjIwOWKS0tJScnh7KyMv+2yMhI1q5dG/Q6
      6u7uHtZSTU9PD9pyuH79OkajkaysrKCV5BCXy8Xx48fp7e0lOjoaq9XKrl27Av6tVVWltLTU
      P45WXFzMunXr/JMLxmK32+no+HCFzXnz5gU95263m+rqav/vIy4ujoULFwY9Lq/X67/+FEUJ
      eiOm6zonT570j1N1dnbS1NTEypUrA+5nKMEP7ctisQS9Kejq6kLXdX9Luq6ujvnz5wfshnQ6
      nZSUlLB9+3YAampqBsduAu7pHuP1ejl69ChLlizx/zGDdX0AxMTEcOzYMdasWcOFCxf8JzGQ
      Gzdu0NjY6O8nHs8PyuPx0N3dzbJly0hNTeX27dsBu436+vro7+/H6XTS0vLh+j85OTljXuQu
      l4vq6moaGxuJjY0lJiYGXddpamri4x//eMD4FEVh+fLl/n9rmkZHR4f/BT1jSU9P5/Lly6xZ
      sybg52Dw71FTU0NiYuKwPuikpCRWrFgxahld1+nu7qa3t5e2tjb/+MK1a9d46qmnxqwsm5ub
      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
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3wVZb748c/p6YWQHlIIndCkFxuKa1m7Xt1dvVxdy17Luv50hVXXylrX
      a0N31eUu6q6ucMFyrQhSpEQgJBAISUhIbyc5Ocnpbeb5/ZGbWbJJIChIyfN+vXhp5syZeeac
      Oc93nmfmeb46IYRAkiRJGnT0J7oAkiRJ0okhA4AkSdIgJQOAJEnSICUDgCRJ0iAlA4AkSdIg
      JQOAJEnSICUDgCRJ0iAlA4AkSdIgJQNAH1RVxWaznehiSJIkHVdHDACff/45v//97/H5fNoy
      RVF47rnnBrQDp9NJMBjssezDDz/k888/P8qi9s/r9fL000+jqqq2rKioiIcffhiXy6Utq6io
      4P333wfggw8+YN26dX1ur7W1lYceeuioyvCPf/yDRYsWsWjRIp544gk+/vjjXsd9suno6Ojx
      mQG8+eab7Nix4wSVSJKkH9MRA0BFRQV79+7lgw8+0JYJIdi2bduAdvDcc89RWlraY9m4ceMY
      O3bsURa1fxaLhZKSEurq6rRl69atY8+ePZSUlGjLtmzZolXKEyZMYOTIkX1u7/vMjrFv3z7m
      zJnDbbfdxiWXXMLWrVt59tlnv9e2fiy/+c1vcDgcPZZNnz6dzMzME1QiSZJ+TMaBrHTDDTfw
      t7/9jcsvv5y4uLgerwkhaG1tZefOnXR2djJixAimTZsGQEFBAS0tLezatQubzcbQoUPJy8sj
      IiICg8GgbaOzs5PPPvsMt9vN3LlzGTt2LDqdjpqaGsxmMzU1NZSUlDBs2DDmz5/f470Aer2e
      SZMmsWfPHrKyslBVlZKSEm644QYKCgqYMWMGQggKCwu59dZbAYiIiMBisWjbCAQCfPvtt1it
      VsLDw3ts3+fz8fnnn9PW1sasWbOYMGECOp2u1+eUlpZGbm4uAGPHjmXhwoX4fD7CwsIoKSlh
      y5YtxMfH89Of/lTbR2FhIXl5edhsNoqKijj33HPR6/Vs3ryZlpYW0tPTmTlzJmazmQMHDmA2
      mykoKMDhcDBv3jxyc3O1sjQ2NrJmzRp0Oh0XX3wxiYmJ2ndUXFxMaWkpqampzJgxgx07duBw
      ONi6dSsREREMGzaM3NxcIiMjMZvN+P1+du/ezbRp09Dru64T7HY7zc3NjB07FkVR+Prrr6mu
      riYvL4+5c+f2+ZlIknTyGtA9gJiYGK666ir++te/9npNVVX+8Ic/0NjYSFhYGMuWLWP58uUA
      1NXV4XQ6qa+vp6KigubmZgDWr19Pfn4+0FX533rrrbhcLpKSkliyZAnr168HYO3atfzyl79k
      /fr1JCcn88EHH7BmzZo+yzh16lQKCgoAsNlsGI1GzjnnHAoLCxFC4PP5aGxs1Cror776il27
      dgFdXUh33HEHGzZsICwsjPLycm27wWCQ++67j6amJnJycviv//ovtmzZcsTPTKfToaoqiqKw
      ceNG/vjHP5KdnY3VauWBBx4gFAoBsHTpUr755htuv/129u/fjxCCJUuWsGnTJiwWC99++y0f
      f/wx0NV1dt999xEIBDCbzfzmN7/RWlfV1dXce++9xMXFERERwd13343dbkcIwX//93/z8ssv
      I4Rg8+bNbNu2jaqqKnw+HwcPHqSiokK757Fy5UoqKiowmUy8+OKLNDY2ase0YsUKioqKEELw
      1FNPsWPHDkaNGsWKFSv44IMPTurWjiRJvQ2oBQBw7bXXcsMNN3DdddeRlJSkLTcYDFrlIoRg
      zpw5PPDAA9x0001ceeWV7Nq1i8suu4wJEyb0ud3Vq1fzk5/8hF/+8pcATJkyhcWLF3PuuecC
      cPvtt3P55ZcDYDKZqKioAHp300yaNInXX38dVVUpLCxkypQpJCQkEAqFcDgcNDY2kp6eTlhY
      WK8yfPHFF2RlZfHwww+j0+lobm7mscceA2DHjh0kJCRw5513ApCVlcVLL73EvHnzem2no6MD
      q9VKe3s7H3zwAZMmTSIyMpJ33nmHxx9/nMzMTBYsWMD9999PSUkJEydOxO/389577/HWW29p
      n+uBAwd4/vnnSUtL48orr+yxj/vvv59Zs2YBkJiYyIoVK3j00Ud5//33ufXWWzn//POBrnsv
      X375Jeeccw5r1qxh+fLlvVo269at44YbbujVqoOuVtVPfvIT1qxZw80334yiKGzYsIFXX32V
      uro6ampqeOONNzAYDEydOpXbbruNq6++GpPJ1Of3LEnSyWfAASAsLIybbrqJP//5zzzyyCPa
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='State- and County-Level New Cases and Deaths' width='384'>
      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
      CxcuxMGDB/Gv//qv6O7uxr59+3Dvvffi6NGjuPfee7Fx40b4/X788Ic/xP3334+SkhJ1CeD4
      8eO45JJLhoiqmzZtwqlTp3D//fdjypQp+OlPfwoA2Lp1Kz1ldHV14cCBAwCAd999F8ePH8fd
      d9+NhQsX4vXXX8eECROwYMECLF68GDfddBOmTZuGo0eP4vDhwwDSKoGzZ89mXRBJkvDoo49i
      xYoV+N73vodXX30VTU1N6O/vp6ewzs5O7Ny5ExzH4dFHH8WqVavwve99D6+88ormiZ7jOHz9
      61/PkAKANAN85JFHsGbNGnznO9/BCy+8gI6ODrS3t2Pv3r2QJAkbN27Ea6+9BlEU0djYiKNH
      j9LrBUFAZ2en4ssYj8fx+c9/Hl/72tfwyiuvoKOjA6+//jocDgfuvfdeTJgwAYlEAr29vXj8
      8cdx3333Yd26dXjkkUc09YHV1dW0KPSTTz6JyspK/PCHP8TevXuxe/duAMBrr72GYDCIb3/7
      23A4HHj//ffx0Ucf4eDBg7j33nuxbNkyBAIBAMDmzZshiiJWrFiBiooK3HDDDbj++utRXFyM
      jRs30hP1O++8g0gkkvU5ynH11Vdj//79SKVS+I//+A984QtfwD333IOf/exniMVi6Orqwn/+
      53/i5ptvxs0334xYLIZNmzahpaUFDzzwAADgD3/4AwDg1VdfxYQJE+j+CIVC+O53v4tz587R
      QtzBYBBf+MIXcOedd+LRRx9FMBjE2bNn8fLLL+MHP/gBVqxYgf/6r/8CAGzfvh0/+tGPEIlE
      sGDBAjpnu92eUbmORUtLC/7617/i4YcfRnl5OebMmaPYzm63g+M4iKKITZs24fjx41i0aBFa
      Wloy9kt9fT1aW1sz2r/xxhv4+OOPMX/+fDQ3Nyu2N3Fhw2Kx4Ctf+Qp++9vfZnz+4osv4p/+
      6Z9w77334v7778eLL76IhoYGHDp0CJIk4cMPP8S6deuwZ88exONxRKNRWrhelQGkUinY7fYh
      n7/77ru455574Pf7cd1116Grq0vTiGqxWPD5z38eFRUVmDFjBiKRCLxeL8rLy1FRUYEpU6bA
      6/Xitttuw5///GdIkoQ333wTN998M06cOIHnn38eL730kqKaIRqNor+/H5WVlejt7cWll16K
      ffv24dprr8WWLVsgSRLeeecdXHfddYhEIggGgygvL0dvby8WL16M/fv3ay54fX09vF5vRrtg
      MEgXsL+/H4sWLcKBAwewcuVK7Ny5E5FIBBaLBdOnT0dLSwt27tyJT33qU/R6URRVdeZz587F
      Rx99hLfeeguSJKGzsxNVVVXYu3cvjh8/jssuuwxerxcHDhzAwoULEQqF6DMixFkNNpsNgiDg
      2LFjmDNnDjo7O7FixQrs3LkTQLpe86c//WmUlJSgvr4ekUgExcXFaGpqwp49ezBt2rQhJeuq
      q6vh9XoxefJkTJo0CTzPY926ddi4cSMkScK7776Lq666irbftWsXnn/+efzlL3/RNLxarVaI
      oojm5maUl5eD53mEw2HU1dXh5MmTeP/993H77bdjxowZmDFjBurr6+lYHR0dWL58Ob2vsrIy
      XH755SguLkZ1dTVuvPFGFBUVoba2FvF4HAAwc+ZMTJw4EdOmTcPq1atx4sQJfPDBB7j88svR
      29uL8vJytLe3U4eBNWvW4K677kJVVZXmmhOEQiF0dXUhkUggFAppqswikQh+9KMf4eDBg3j0
      0UfhcDggCAIt6M2uDwCEw2E89NBDOHbsGB555BE4HA6IophhQ7FYLKajw0WClStXorGxMUON
      ePbsWbz00kt48MEH8eyzz6KzsxN2ux1+vx89PT04c+YM1q9fj7///e84fPgwGhoa6LWqKqCp
      U6fSF5UlVnLGYLFYCuJFMXfuXDz55JNobW1FR0cHZsyYgZ6eHsyfPx88z4Pnh/IqSZLQ29uL
      bdu20c9mzJiBiooKcByHrq4u7N27F7fccguSySR6enoy2spVO3JwHIevfe1rePTRR7F48WIA
      6RM82w/P85g6dSqmTZuG1tZWHDp0CPPnz0dVVRV27dqFI0eO4JZbbqF9Wq1WOJ1OdHV1Zaht
      kskkHnjgAXzuc5+jorwkSbjqqqtQW1uLDz74AM888wz+3//7f0gmkzh9+jQcDgcAoKGhATab
      TfU+IpEI+vv74ff7EQwGsX37drqeS5YsUb1uypQp+PGPf4z33nsP//Zv/4Y777wTq1atGvIM
      WFx99dX4x3/8R6xevRrl5eXw+Xz0u5qaGthsNjpvNRw6dAjTp09HMplEW1sbXevq6mqUlZXh
      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
      ynd/wV5eDqwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Tri-State New Cases + Deaths' width='384'>
      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
      rqYAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
