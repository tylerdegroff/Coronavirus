<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1110.1623                               -->
<workbook source-build='2020.3.3 (20203.20.1110.1623)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='4.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.percap' ordinal='12' />
            <column datatype='string' name='deaths.new.percap' ordinal='13' />
            <column datatype='string' name='cases.new.perM' ordinal='14' />
            <column datatype='string' name='deaths.new.perM' ordinal='15' />
            <column datatype='string' name='cases.new.7dsma' ordinal='16' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
            <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
            <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
            <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
            <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
            <column datatype='integer' name='cases.active' ordinal='22' />
            <column datatype='string' name='cases.active.percap' ordinal='23' />
            <column datatype='string' name='cases.active.perM' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.percap' ordinal='12' />
            <column datatype='string' name='deaths.new.percap' ordinal='13' />
            <column datatype='string' name='cases.new.perM' ordinal='14' />
            <column datatype='string' name='deaths.new.perM' ordinal='15' />
            <column datatype='string' name='cases.new.7dsma' ordinal='16' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
            <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
            <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
            <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
            <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
            <column datatype='integer' name='cases.active' ordinal='22' />
            <column datatype='string' name='cases.active.percap' ordinal='23' />
            <column datatype='string' name='cases.active.perM' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases.active (data.csv)]' value='[data.csv].[cases.active]' />
          <map key='[cases.active.perM (data.csv)]' value='[data.csv].[cases.active.perM]' />
          <map key='[cases.active.percap]' value='[data.csv].[cases.active.percap]' />
          <map key='[cases.new.7dsma]' value='[data.csv].[cases.new.7dsma]' />
          <map key='[cases.new.perM (data.csv)]' value='[data.csv].[cases.new.perM]' />
          <map key='[cases.new.perM.7dsma (data.csv)]' value='[data.csv].[cases.new.perM.7dsma]' />
          <map key='[cases.new.percap.7dsma]' value='[data.csv].[cases.new.percap.7dsma]' />
          <map key='[cases.new.percap]' value='[data.csv].[cases.new.percap]' />
          <map key='[cases.new]' value='[data.csv].[cases.new]' />
          <map key='[cases.percap]' value='[data.csv].[cases.percap]' />
          <map key='[cases]' value='[data.csv].[cases]' />
          <map key='[countyState]' value='[data.csv].[countyState]' />
          <map key='[county]' value='[data.csv].[county]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[deaths.new.7dsma]' value='[data.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.perM (data.csv)]' value='[data.csv].[deaths.new.perM]' />
          <map key='[deaths.new.perM.7dsma (data.csv)]' value='[data.csv].[deaths.new.perM.7dsma]' />
          <map key='[deaths.new.percap.7dsma]' value='[data.csv].[deaths.new.percap.7dsma]' />
          <map key='[deaths.new.percap]' value='[data.csv].[deaths.new.percap]' />
          <map key='[deaths.new]' value='[data.csv].[deaths.new]' />
          <map key='[deaths.percap]' value='[data.csv].[deaths.percap]' />
          <map key='[deaths]' value='[data.csv].[deaths]' />
          <map key='[fips]' value='[data.csv].[fips]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[state]' value='[data.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyState]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>countyState</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.percap</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.percap</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.perM</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.perM</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.percap.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.percap.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.percap.7dsma</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.percap.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.percap.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.percap.7dsma</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.perM.7dsma (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.perM.7dsma</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths.new.perM.7dsma (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.perM.7dsma</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.active (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.percap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.active.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active.percap</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.active.perM (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.active.perM</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;' value='Σ Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' value='Case 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;' value='Σ Deaths' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;' value='Deaths 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY() - 1' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='County-Level' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.state.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='integer' name='[cases.active (data.csv)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
      <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[cases.new.percap.7dsma]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County and State' datatype='string' name='[countyState]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' hidden='true' name='[fips]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
        </groupfilter>
      </group>
      <group caption='Action (County, State,Cases per Capita (bins))' hidden='true' name='[Action (County, State,Cases per Capita (bins))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
          <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),County,State)' hidden='true' name='[Action (MDY(Yesterday),County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),State)' hidden='true' name='[Action (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (cases.new.7dsma,State)' hidden='true' name='[Action (cases.new.7dsma,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cases.new.7dsma:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Contiguous USA' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[state]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Northern Mariana Islands&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Puerto Rico&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cases per Capita (bins),County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County, State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1718193694053994508:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Bins' role='dimensions'>
        <folder-item name='[Cases per Capita - County (bin)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[cases.active (data.csv)]' type='field' />
        <folder-item name='[cases.active.perM (data.csv)]' type='field' />
        <folder-item name='[cases.new.7dsma]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new.7dsma]' type='field' />
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='dimensions'>
        <folder-item name='[Calculation_1718193694053994508]' type='field' />
        <folder-item name='[Calculation_204561939512385536]' type='field' />
        <folder-item name='[countyState]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='state, county' type='drillpath' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='measures'>
        <folder-item name='[Calculation_1718193694052151304]' type='field' />
        <folder-item name='[population]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='groups'>
        <folder-item name='[Continental United States]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Bins'>
          <folder-item name='[Cases per Capita - County (bin)]' type='field' />
        </folder>
        <folder name='Cases'>
          <folder-item name='[cases.active (data.csv)]' type='field' />
          <folder-item name='[cases.active.perM (data.csv)]' type='field' />
          <folder-item name='[cases.new.7dsma]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new.7dsma]' type='field' />
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
        <folder name='Metadata'>
          <folder-item name='[Calculation_1718193694052151304]' type='field' />
          <folder-item name='[Calculation_1718193694053994508]' type='field' />
          <folder-item name='[Calculation_204561939512385536]' type='field' />
          <folder-item name='[Continental United States]' type='field' />
          <folder-item name='[countyState]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[population]' type='field' />
          <folder-item name='state, county' type='drillpath' />
        </folder>
        <folder name='State-Level Fields' />
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Documents/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='12/14/2020 01:42:34 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[cases.active (data.csv)]' value='[Extract].[cases.active]' />
            <map key='[cases.active.perM (data.csv)]' value='[Extract].[cases.active.perM]' />
            <map key='[cases.active.percap]' value='[Extract].[cases.active.percap]' />
            <map key='[cases.new.7dsma]' value='[Extract].[cases.new.7dsma]' />
            <map key='[cases.new.perM (data.csv)]' value='[Extract].[cases.new.perM]' />
            <map key='[cases.new.perM.7dsma (data.csv)]' value='[Extract].[cases.new.perM.7dsma]' />
            <map key='[cases.new.percap.7dsma]' value='[Extract].[cases.new.percap.7dsma]' />
            <map key='[cases.new.percap]' value='[Extract].[cases.new.percap]' />
            <map key='[cases.new]' value='[Extract].[cases.new]' />
            <map key='[cases.percap]' value='[Extract].[cases.percap]' />
            <map key='[cases]' value='[Extract].[cases]' />
            <map key='[countyState]' value='[Extract].[countyState]' />
            <map key='[county]' value='[Extract].[county]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[deaths.new.7dsma]' value='[Extract].[deaths.new.7dsma]' />
            <map key='[deaths.new.perM (data.csv)]' value='[Extract].[deaths.new.perM]' />
            <map key='[deaths.new.perM.7dsma (data.csv)]' value='[Extract].[deaths.new.perM.7dsma]' />
            <map key='[deaths.new.percap.7dsma]' value='[Extract].[deaths.new.percap.7dsma]' />
            <map key='[deaths.new.percap]' value='[Extract].[deaths.new.percap]' />
            <map key='[deaths.new]' value='[Extract].[deaths.new]' />
            <map key='[deaths.percap]' value='[Extract].[deaths.percap]' />
            <map key='[deaths]' value='[Extract].[deaths]' />
            <map key='[population]' value='[Extract].[population]' />
            <map key='[state]' value='[Extract].[state]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='803994' timestamp-start='2020-12-14 01:42:34.273' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>356</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8183</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16474</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2810</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14513</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>347935</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>96211</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyState]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>countyState</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16901</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1633</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.percap</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242681</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.percap</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>57186</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.perM</remote-alias>
              <ordinal>13</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242681</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.perM</remote-alias>
              <ordinal>14</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>57186</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>15</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4346</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>16</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>416</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.percap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.percap.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.percap.7dsma</remote-alias>
              <ordinal>17</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>308101</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.percap.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.percap.7dsma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.percap.7dsma</remote-alias>
              <ordinal>18</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121387</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.new.perM.7dsma (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new.perM.7dsma</remote-alias>
              <ordinal>19</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>310350</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM.7dsma</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deaths.new.perM.7dsma (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new.perM.7dsma</remote-alias>
              <ordinal>20</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>103304</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.active (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active</remote-alias>
              <ordinal>21</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4684</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.percap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cases.active.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active.percap</remote-alias>
              <ordinal>22</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>325050</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perM (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.active.perM</remote-alias>
              <ordinal>23</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>305278</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>5</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>4</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>3</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_187532707401031681:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203182039043:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:Calculation_187532707400040448:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_325455445230501890:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.perCap:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203179343874:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864367105:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864514562:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864535043:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864580100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864633349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864649734:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864666119:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864682504:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864698889:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.perCap:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='County-Level' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='deaths.percap' ordinal='8' />
                  <column datatype='string' name='countyState' ordinal='9' />
                  <column datatype='integer' name='cases.new' ordinal='10' />
                  <column datatype='integer' name='deaths.new' ordinal='11' />
                  <column datatype='string' name='cases.new.percap' ordinal='12' />
                  <column datatype='string' name='deaths.new.percap' ordinal='13' />
                  <column datatype='string' name='cases.new.perM' ordinal='14' />
                  <column datatype='string' name='deaths.new.perM' ordinal='15' />
                  <column datatype='string' name='cases.new.7dsma' ordinal='16' />
                  <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='17' />
                  <column datatype='string' name='cases.new.percap.7dsma' ordinal='18' />
                  <column datatype='string' name='deaths.new.percap.7dsma' ordinal='19' />
                  <column datatype='string' name='cases.new.perM.7dsma' ordinal='20' />
                  <column datatype='string' name='deaths.new.perM.7dsma' ordinal='21' />
                  <column datatype='integer' name='cases.active' ordinal='22' />
                  <column datatype='string' name='cases.active.percap' ordinal='23' />
                  <column datatype='string' name='cases.active.perM' ordinal='24' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5a' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County-Level Hot Spots [&gt;100 New Cases]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='in-range'>
            <min>100.0</min>
            <max>6933.4285714285716</max>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='New Cases 7D SMA'>
              <formatted-text>
                <run>New Cases 7D SMA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Cook&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Illinois&quot;</value>
                    <value>3497.4285714285716</value>
                    <value>335204</value>
                    <value>5150233</value>
                    <value>41.812899999999999</value>
                    <value>-87.753600000000006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-114' y='-130' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Maricopa&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Arizona&quot;</value>
                    <value>3457.0</value>
                    <value>238187</value>
                    <value>%null%</value>
                    <value>33.279800000000002</value>
                    <value>-112.7681</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-9' y='83' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]>, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;New York City&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;New York&quot;</value>
                    <value>3350.5714285714284</value>
                    <value>342755</value>
                    <value>8336817</value>
                    <value>40.712800000000001</value>
                    <value>-74.006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-125' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='186'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;Miami-Dade&quot;</value>
                    <value>#2020-12-08#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2164.8571428571427</value>
                    <value>246914</value>
                    <value>2716940</value>
                    <value>25.559200000000001</value>
                    <value>-80.590599999999995</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='20' y='60' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{277AF070-EEB8-474C-A442-6620AAEDDFD8}' />
    </worksheet>
    <worksheet name='5a'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[State-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County)]'>
            <groupfilter function='level-members' level='[county]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6670967.0743742296' min='-14670203.825095043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201208</value>
                    <value>&quot;New York&quot;</value>
                    <value>653.85714285714289</value>
                    <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                    <value>43.0</value>
                    <value>-75.489999999999995</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6E5C1D5A-A324-4D39-AA35-1E76DE613F2C}' />
    </worksheet>
    <worksheet name='5b'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[County-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201212' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20200730</value>
                    <value>&quot;Douglas&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>123.85714285714286</value>
                    <value>&quot;POLYGON((-96.3274 41.19,-96.3656 41.2341,-96.3506 41.2652,-96.4076 41.3146,-96.4244 41.3661,-96.4707 41.3932,-96.329 41.3931,-95.9387 41.3932,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9276 41.2984,-95.9115 41.229,-95.9235 41.1909,-96.3274 41.19))&quot;</value>
                    <value>41.291899999999998</value>
                    <value>-96.150199999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-55' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='259'>
            <formatted-text>
              <run fontcolor='#787878'>County: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Contageous Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]> ]]></run>
              <run>per million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Westchester&quot;</value>
                    <value>494430.00870278862</value>
                    <value>&quot;POLYGON((-73.9826 41.3217,-73.5447 41.3664,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9826 41.3217))&quot;</value>
                    <value>41.124899999999997</value>
                    <value>-73.771799999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='160' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{42E61C40-2836-4455-BDA4-B4B6380BBC4B}' />
    </worksheet>
    <worksheet name='5c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County)]'>
            <groupfilter function='level-members' level='[county]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'>WAVE 1 PEAK</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-15#</value>
                    <value>5425.7142857142853</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='124' y='0' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 3 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-12#</value>
                    <value>3550.8571428571427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-132' y='0' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C85D93EA-FE10-4771-B4D8-03FB23236857}' />
    </worksheet>
    <worksheet name='5d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Deaths - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County)]'>
            <groupfilter function='level-members' level='[county]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[county]' member='&quot;New York City&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='185'>
            <formatted-text>
              <run bold='true' fontalignment='0'>WAVE 1 PEAK</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>New Deaths 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-12#</value>
                    <value>828.85714285714289</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='133' y='-20' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Deaths 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-12#</value>
                    <value>17.285714285714285</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-68' y='-80' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C63D437F-3477-486E-A4A0-0691D9000DA3}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column aggregation='CountD' caption='Active Cases per Million' datatype='real' datatype-customized='true' name='[cases.active.perM (data.csv)]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM (data.csv)]' derivation='Sum' name='[sum:cases.active.perM (data.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
            <format attr='break-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{C7BE4A65-2880-415E-821D-E62636CC1C9A}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-08#</value>
                    <value>285099</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-233' y='-84' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Σ Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-08#</value>
                    <value>15147146</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-239' y='-84' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>36648</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-103' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 2 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-16#</value>
                    <value>75490</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-162' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-11#</value>
                    <value>278388</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-128' y='-155' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Notable States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{18B2D08C-D4D2-4F82-8F4C-7C904941F167}' />
    </worksheet>
    <worksheet name='Tri-State New Cases + Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' value='12' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])))</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-07#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>3674.2857142857142</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='147' y='0' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-10#</value>
                    <value>&quot;New York&quot;</value>
                    <value>9877.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='128' y='0' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-22#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>1102.0</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='114' y='-27' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-12#</value>
                    <value>&quot;New York&quot;</value>
                    <value>1065.5714285714287</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-26#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>114.00000000000001</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-65' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-21#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>278.28571428571428</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-94' />
          </annotation>
          <annotation class='point' id='18' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-08#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2786.2857142857147</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-135' y='-55' />
          </annotation>
          <annotation class='point' id='23' mark-position='1' pullback='12' text-width='202'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-10#</value>
                    <value>&quot;New York&quot;</value>
                    <value>10047.857142857141</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-149' y='85' />
          </annotation>
          <annotation class='point' id='24' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-10#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>5091.2857142857147</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-118' y='-37' />
          </annotation>
          <annotation class='point' id='25' mark-position='1' pullback='12' text-width='141'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-12#</value>
                    <value>&quot;New York&quot;</value>
                    <value>83.714285714285722</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-100' y='-40' />
          </annotation>
          <annotation class='point' id='27' mark-position='1' pullback='12' text-width='143'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-12#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>31.0</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-108' y='-45' />
          </annotation>
          <annotation class='point' id='28' mark-position='1' pullback='12' text-width='137'>
            <formatted-text>
              <run bold='true' fontalignment='2'>WAVE 3 PEAK</run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Deaths 7D Avg.: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-12#</value>
                    <value>&quot;New Jersey&quot;</value>
                    <value>60.857142857142861</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-106' y='-47' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3AEE0153-2BB7-47F3-A410-04767AF59D72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='511' param='horz' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='58' param='vert' w='98698' x='651' y='1060'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='61471' id='35' name='Nation-Wide Daily New' w='49318' x='25248' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30703' id='146' name='Nation-Wide Cumulative New' w='24597' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30768' id='155' name='Nation-Wide Cumulative Deaths' w='24597' x='651' y='37326'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30846' id='311' name='Notable States' show-title='false' w='98698' x='651' y='68094'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57206' id='324' name='1d' w='24783' x='74566' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4265' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24783' x='74566' y='63829'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='548' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='547' param='vert' w='98698' x='651' y='1060'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30703' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24597' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61471' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49318' x='25248' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57206' id='324' is-fixed='true' name='1d' w='24783' x='74566' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4265' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24783' x='74566' y='63829'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30768' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24597' x='651' y='37326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30846' id='311' is-fixed='true' name='Notable States' show-title='false' w='98698' x='651' y='68094'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State- and County-Level New Cases and Deaths'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='178' param='vert' w='98888' x='556' y='979'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='179' w='98888' x='556' y='979'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='28' param='horz' w='98888' x='556' y='6120'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='7' param='horz' w='98888' x='556' y='6120'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92901' id='5' w='98888' x='556' y='6120'>
                  <zone h='42385' id='3' name='5c' w='49460' x='49984' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41982' id='10' name='5b' w='49428' x='556' y='52609'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4430' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' show-title='false' single-line='true' w='49428' x='556' y='94591'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42385' id='14' name='5a' w='49428' x='556' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4104' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49428' x='556' y='48505'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42082' id='26' name='5d' w='49460' x='49984' y='52561'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4056' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49460' x='49984' y='48505'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4378' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49460' x='49984' y='94643'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='213' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='212' param='vert' w='98888' x='556' y='979'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='179' w='98888' x='556' y='979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42385' id='14' is-fixed='true' name='5a' w='49428' x='556' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4104' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49428' x='556' y='48505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42385' id='3' is-fixed='true' name='5c' w='49460' x='49984' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4056' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49460' x='49984' y='48505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42082' id='26' is-fixed='true' name='5d' w='49460' x='49984' y='52561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4378' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49460' x='49984' y='94643'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41982' id='10' is-fixed='true' name='5b' w='49428' x='556' y='52609'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4430' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' show-title='false' single-line='true' w='49428' x='556' y='94591'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836711AE-A8FC-40BB-A283-4102C7E23F92}' />
    </dashboard>
  </dashboards>
  <windows pres-mode='true' source-height='30'>
    <window class='dashboard' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='1d'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Notable States'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='35' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='dashboard' maximized='true' name='State- and County-Level New Cases and Deaths'>
      <viewpoints>
        <viewpoint name='5a'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>20201212</value>
                  <value>&quot;New York&quot;</value>
                  <value>3550.8571428571427</value>
                  <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                  <value>43.0</value>
                  <value>-75.49</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5b'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;New York City&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>370445.09913075936</value>
                  <value>%null%</value>
                  <value>40.712800000000001</value>
                  <value>-74.006</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='5d'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{3FD9FA44-6E72-44CA-A079-4E2D80E4338F}' />
    </window>
    <window class='worksheet' name='Tri-State New Cases + Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E29869-794A-42BD-9FD3-6C37C11A1D8D}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C16D9719-18FC-49FF-9506-40BA605AB53C}' />
    </window>
    <window class='worksheet' hidden='true' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-16#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A69FE9-8E67-4E4E-8D8A-5DEA02588AF4}' />
    </window>
    <window class='worksheet' hidden='true' name='5a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED5063A-3620-48EF-A2E5-BD1E1DA58829}' />
    </window>
    <window class='worksheet' hidden='true' name='5b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM (data.csv):qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4B5A0E-088B-4C88-A0B3-21B1C81304AE}' />
    </window>
    <window class='worksheet' hidden='true' name='5c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D64A6E8-DE6A-46B7-B86E-B23AC593D8C9}' />
    </window>
    <window class='worksheet' hidden='true' name='5d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E95A138C-5A92-427D-9DA7-5B0D9AF77F38}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='worksheet' hidden='true' name='Notable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{798B147B-0696-4FFF-81B2-64334898F022}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
      lygXjACwWq0dkrBfrDgcDiVBi4rKuUKWZWw22+9yrT/S+6jSOdpnj8+Y/gtcLhdr165l5cqV
      bN++HU9PTyIjI3+Thjz99NNcfvnlSoasE7WltrYWT09PpWzVqlX4+fnh6+t7xtcrKCjglVde
      Yfv27cTFxbF9+3a2b9/OgAED8PLyOuE5bQnrO2tjG2vWrMFmsxEREdGuvC15+6ZNmzh69CiD
      Bw8+ZV1/dHJzc1m+fDmxsbFKiOlNmzbh4+PT6e9wJgghSExM5O2332br1q3U1dUxcODAs673
      12C323nhhReIi4tj7969yLLcIaT4L0lPT2fXrl3079+fY8eO8eWXXzJq1Khz0p6XX36Z0aNH
      I0kSVVVV7VKEvvjii8TGxp4wuRHAkiVL2Lp1q/LeJCQktPsNoXUi9Pzzzyv9dbvddOvW7ayS
      BSUlJfHhhx+2C3EO8PHHH5OSksLw4cPPuM433niDfv36KSHnfy1ut5t//vOf2Gw2evfufVZ1
      /V6cdAXw2WefceTIER5//HEWLVr0m8Z4t9vtJ/2+urqat99+u13Z5ZdfrmT9OlPCw8NZtGgR
      ixYtori4WPk/MDCw03M+/PBDSkpKTlm3y+XC7Xa3KysrK+PFF1/kpptu4qmnnmLQoEHIsvyr
      2v5HoqqqiuzsbFavXq2UZWRknDBL2q8hJSWFTz/9lPvvv58nnniiXY6I3xuXy0VlZSWLFi3i
      z3/+M5s3b+aDDz446Uy7W7duyoAvy/IpU6WeCbNmzUKr1dLc3MzSpUvbfedwOE7arnvuuUd5
      Z+bOnUtxcXGHAdTtdlNeXs6iRYu4/vrr2bp1K++///5ZrSzy8/MpKioiKSlJKWtoaCAhIYHD
      hw//qjqnTZvWbmL5a8nLywNg48aNZ13X70WnGcGam5uJj49n+fLlyg8bEhJCWVkZGRkZXHHF
      FQB8+eWXzJo1C5fLxeeff05DQwNlZWXExsZis9nIzMxUBtvKykrS09O58sorlXNnzpzZ7sGp
      r6/no48+orq6GqPRyPz58/Hz8+PNN98kMzOTl156iV69enHDDTdw8OBBxo8fT0JCAr169VIS
      u6xfv15JtrJixQqOHTtGZGQk9957r3ItvV6vCI/j/4fWhDdvv/02TU1N9O/fn/nz57N9+3ZS
      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
      LtfZbsJ5gyd2vsLw5AdVQO+//z4lJSWsWrWK++6776QD30/hZPHdW1paeP311/u9N3v2bEJC
      Qn7U/UaOHMny5ctZvnw5NTU18uu+AuZo3nrrLWpra09at8vlOiYpfVlZGRdddBHLli0jISGB
      hx9+mMrKyh/V9hdffLFfoorj3U9BQUHhZJxwBWCxWNi2bRt/+ctfMBgMAISGhlJfX8/+/fu5
      7LLLAPjXv/7Ftddei8vl4v3336erq4u6ujomTZqEzWajqKiI8PBwli9fTlNTU79rP/roIxYv
      XizXD9DR0cHbb79NS0sLBoOBW265BZPJxF/+8heKiop47rnnSEhIYOnSpeTn5zN9+nS2bdtG
      QkKCnLzhq6++YsqUKZhMJv7v//6PiooKIiMjufPOO+V7abVaOW5439cATU1NvP7663R3dzNm
      zBhuueUWtmzZIsc69/Pz48Ybb8RisfDZZ59htVoJDw/nN7/5DV5eXifsbF9fX0JCQrj00ksJ
      CAjgrbfe4oknnsBqtfLmm29SW1tLbGwsv/nNb9DpdHzxxRfk5eXhdruZNWsWCxYs4IMPPuDg
      wYO89NJLGAwG7r77bqA3Fea6devo7u5m6dKlXHzxxezbt49PP/0Ut9vNpEmTuOaaa5TZmoKC
      gswJVwANDQ2MHDmy3+AM0NnZycGDB+XjvLw8XC4XDoeD7OxslixZwhNPPMHXX3/N2LFjefLJ
      J2lra6O2tpaurq5+1+7evfuY5bogCCxYsIDVq1ezePFiXnvtNby9vbnpppsYM2YMd955JwsX
      LgSgoKAAi8VCYGAgX3/9NdC7kvjuu+8IDAzkww8/JCwsjGeffZaYmBg++OCDk3aIKIq88MIL
      XHXVVTz99NOIosinn37K9OnTSUtL42c/+xl33nmn3De//vWvWbNmDf7+/nzzzTcD6PJexo0b
      R01NDaIo8u677zJq1CieeeYZTCYTn332GQCxsbE8+OCDrFixgi+++IK2tjYWLVpEfHw8t912
      G3fccQfe3t5A7x7Kvffey4oVK/jXv/6FJEm8/vrr3H333Tz88MP9cqIqKCgowA8IgL75bAdK
      VFQUcXFx+Pr6EhoaygUXXIDRaCQoKGjAellfX1/a2tp4//332bJlC62trajVagICAtDr9QQG
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='State- and County-Level New Cases and Deaths' width='384'>
      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
      +wcoi2bpmoN+3AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Tri-State New Cases + Deaths' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOz9eXhV1dmAjd97nzE5ScgckhBCACHMkyCCIGid61RbRanj97ba369V22pt
      39pWa6226qs4fCr2bbXaQp2oOLwVRxAIIEgMCZCQhMzDyXjmce/9/XE4m4RBEshEsu7r4uLs
      cT3nZO/1rPWsZ5A0TdMQCAQCwYhDHmwBBAKBQDA4CAUgEAgEIxShAAQCgWCEclorAI/HM9gi
      CASCE+B2u/F6vYMthuAYGAdbgFNBUZTBFkEgEJwARVEQviZDk9N6BiAYOuzdu5d9+/ahaRqa
      plFYWEg4HD6pe9ntdvbt26dvV1dXU1NTc8Lr/H4/a9euPak2BYLhiKZp1NbW8uGHH7J9+3ZC
      oVC340IBCPqEjz/+mNWrV+N0OtE0jXfeeUd/2DRNQ1VVXTlER4PH+2w2m3nttddoa2sjHA7z
      97//HVmWj7pX1+s0TSMcDnPgwIGj7icQjFSKi4t58cUXCYfDlJeX43a79XdIVdXT2wQkGDpI
      ksTs2bP5+OOPufrqq/X97e3tvPbaa3g8HubNm8e8efN45513uPXWW9m4cSONjY2sWLGC//u/
      /2PixIlMmjSJxMRElixZwgcffMC4cePIy8sjOzubxsZGXnvtNXw+HwsWLOCiiy7inXfeYcyY
      MWzcuJGrrroKiHT+69evJzs7mzPPPHOwfhKBYNB5//33WblyJVOmTNH37d27l3//+98oiiJm
      AIK+Y/HixRQXF9PZ2anv+/DDD5k3bx4//elPKSgowGg0Ul1djcPhYM+ePdTX1xMIBCgsLCQ9
      PV2/btmyZZSXl/Phhx9y2WWXIUkSb7/9NsuXL+fnP/85O3fupLGxEbvdzrvvvsv5559PcnIy
      qqpSUFBAfX09s2fPHoyfQSAYEqiqisPhICcnR98XDod58803+f73v8+PfvQjMQMQ9B0Wi4Vz
      zjmHTz/9VN9nt9upr6+nsLAQVVVxuVzk5eWxf/9+DAYDubm5lJSUYDabGTVqlH6d1Wpl8eLF
      NDc3k5iYiKZptLW1MWnSJGw2Gzk5ObS2tgJw9dVXM3v2bNxuN3a7nddff5277roLo1E83oKR
      iyRJmEwmvF4vcXFxAPh8PlRVJScnB0mSxAxA0LcsWrSIkpIS3G43AOnp6UyfPp0f/vCH/PCH
      PyQlJYWpU6fy6aefMmbMGCZPnsyHH37IpEmTkCSp270sFgtWqxVJkpAkibS0NPbv34/b7aam
      poa0tDQAYmNj9WtGjx7Nrbfeyr/+9S/heigY0UiSxJw5c/j3v/+Nw+GgqqoKAIPBQHV1NXa7
      XSgAQd+QlZWF2WwmJiaGb33rW2RmZiLLMpdeeik1NTU88cQTvPfee6iqyqRJk7BYLMyYMYO8
      vDysViuzZs066p6jRo0iNTVV3/7Od77Dli1bePLJJzn77LMZPXo0o0ePJiYmBog82GPHjmXW
      rFmcddZZbNmyZcC+v0AwFLnssstISUnhqaeeYt26dQBce+21rF27lpdeegnpdE4G53Q6SUhI
      GGwxBCcg6pETHckPlXsJBgaHw4Esy8THxw+2KCOSY70zqqoCxwgEC4VCp437XDgcJhgMDrYY
      AoHgGwiHw0iSJN7VIchRCiDqH3o6oKqqiAYWCIY4qqoiSZJ4V4cgRykAi8UyGHKcFKFQSLf/
      CgSCoUkwGESWZfGuDkHEIrBAIBCMUIQCEAgEghGKUAACgUAwQhEKQCAQCEYoQgEIBALBCEUo
      AIFAIBihDJoCiOak7rodDoe7+QofL1/8YFDV1ElDq2vQ2hcIBIK+ZsAVgKZpNDQ08OKLL7J/
      /34gEin4zjvv8M9//pOXX36Zr7/+GkDPHRPN797S0jLQ4uq0dHpod/kGrX2BQCDoawY8X66q
      qmzbto2pU6fqoeHBYJAZM2YwYcIEvQLUzJkz6ejoAKCwsBCTyaRnfxQIBALBqTPgCsBgMPCd
      73yHwsJCfV9sbCwTJkxA0zR27typFwZRVZXa2lp27tzJbbfdhiRJ3UxBA5m2QlO1o8xWAoHg
      xETfGfHuDD2GTMWMQCDAv//9b0aNGsUll1yCJEkEAgE+++wzsrOzMRgMQPe1A1VVT7rweG9R
      VBVVUQasPYFguBB9X8W7M/QYEgpA0zTWrFnDwoULyc/P1/fHxMRwww03sHbtWsrLy5k4cSKy
      LOsFwo1GI2azeUBkNBoNGAawPYFguGA0GpFlWbw7Q5ABVwB+v5/q6mrq6+uRJIm4uDji4+Px
      eDyEw2GKi4uxWCxMnDgRiFS1+d73vsdf/vIXUlNTSUxMHGiRBQKBYFgy4F5Aqqri9XrJysoi
      MzMTn89HXFwcixYtIhQKEQqFdFfQ5cuXI8syFouFG264gUAgMNDi9phQWOGLourBFkMgEAh6
      zIDPAGJjY5kzZ85R+4+1r2s1+6SkpH6V61RRVI26FudgiyEQCAQ9RkQCCwQCwQhFKACBQCAY
      oQgFIBAIBCMUoQAEAoFghCIUgEAgEIxQhkQgmCDCYGc8HelIkoQkSYMtxpDA4wuys7SBc2eP
      G2xRBP2IUABDjK7psAUDiyRJGI3ilYCIW3ObU2S/He4IE5BAIBCMUIQCEAgEvWJfdQsOt3+w
      xRD0AUIBCASCXlFrd+LxhwZbDEEfIBSAQCA4IaW1rWwrqRtsMQR9jFAAp0Cd3Yk3IEZCguGP
      poGG8FAbbggFcJI0tLr49+b9OD39m6F0586dVFZWoqoqr776Kp2dnXR2dvLJJ58A8PXXX/P8
      88+jqiolJSUUFxcD0NLSwmeffcb+/ft5/vnneeGFF3j//ff1+yqKQkFBAVu3btX3ud1uVq9e
      zerVq9m6dSuapvGvf/2LF154gRdeeIG6usgI8NNPP+Vf//qXfp/169fr1dxKSkr69fcQDByB
      YJj3C8oGWwxBPyIUwEkSVlSC4Z67bPqDYT7aWdHrdlwuFxs3bsRut/POO+9QXFxMcXGx3hmv
      X7+esrIyqqurMZlMrFu3DoBNmzbhcrmoqKjAaDRy3nnnMXv2bP2+69ev58033+zWYXs8Hvbt
      28fixYtZu3YtFRUVbNy4kSVLlnDeeeeRnJyMqqq89957bNq0Ca/Xi6qqfPTRRzidTl566SVy
      c3N7/R0FQxMNcHmDgy2GoB8RCmCAUFWN9pPwq545cyZ79+6ltLSUK664gpKSEkpKSpg5cyYe
      jweHw8E111zDpk2byMvLo7GxkWAwyI4dO1i0aBEAjY2N7N27l8bGRv2+V111FStXrjyqPZvN
      xsSJE0lNTcXtdhMOh9m3bx/79u0jGAxSW1tLeno6Z599Nl9++SUATqeTP/zhD9xyyy3ExcWd
      5C8kOB1wuP2EFVHbd7ggFMAQJykpCa/XS1FREeeeey52u53y8nImT57Mnj17aGtrY9euXWze
      vBmDwUB+fj67d+8mEAiQnJwMQHx8POnp6SQkJOj3PV7E6969e3nggQfIzc1lxowZyLJMWloa
      aWlpGI1GCgoKaG5uprKykk2bNgFgMBiIi4vD4XD0/w8iGFS+KKqhU7iADhuEAhjiSJLE6NGj
      2b9/P9nZ2XrFtJiYGDZv3sxNN93EpZdeSnx8PHa7nSVLlvD888+zYMECvXayyWTCarXq2wB1
      dXVUV1fT0tJCTU2Nvn/q1Kk88sgj3HzzzRgMBiRJwmq1YrVaUVWVXbt2ccstt7BixQrq6uoI
      BoPYbDbuuece1q1bR3Nz84D/RgKB4OQQce89QIu4QAwKkiTxne98h+bmZoxGI1dddRV+vx9J
      kpg9ezbnnHMOJpOJW2+9lVAoxLRp01i6dCnnn38+APn5+bS3t1NSUkJWVpZea7miogK3201O
      Tg4HDhxg7NixxMXFcdFFF3Vr/7LLLqOsLLIQmJ6ezgUXXMDMmTORJIkbb7yRUCjElVdeic1m
      4+c//zmNjY1kZGQM7I8kEAhOCqEAeoA3EOKLPTVcOH/CoLQ/bdo0pk2bBsDcuXP1/d/61rf0
      zzNmzNA/33bbbfrnCRMmMGHC0XKfe+65R+2z2WwsWbKk275vf/vb3bbHjBmjfz7nnHO6yTFp
      0qQTfxmBQDBkGDQTkMPhwO1269vBYJDS0tJuJoTOzk49O6bb7cbnE8mpBILBoqqpk/KG9sEW
      Q9CHDLgCUFWVDz74gOeff57y8nIgYmJZs2YNzc3NfPjhh+zfvx+IuCqqqkowGOS1114jFBp6
      QVfN7W48/tPXVS4cDmO323t0rsfjwekUhe9HKpoW8WYTDB8GZQaQn5/PxRdfrG+3tLQQHx/P
      0qVL+e53v8uOHTu65cV/9913WbZsWTcvlqFCSVULbY7+m5n4/X42bdrE9u3baWtrO2a9AK/X
      2+M6As3Nzfz1r3/VZ1/FxcVs2bKFcDjMBx98QGNjI5qmUVhYyKpVqygqKtKvfeutt6irq2P9
      +vU8++yzFBcXo2kae/bsYdWqVezevRtFUdiwYQPPPvss27dvR9M0KioqePrpp9m8ebOod3Ca
      IgFjOr7g3I6/YQ47GLRFMUGfMuBrALIsM378eAoLC/V9bW1tZGVlARATE4OqRvyMA4EA7777
      ru7eCJEZRDRnfigUIhDo30hcgGAwhKqqhLu0FwwFdVlCoRDBYBBFUY4rTzAY/sbjUY50zwwE
      AlgsFqZOncqWLVuYN28eycnJtLW1YTKZiI+PZ+PGjcyfP5+4uDjMZjN2u53Y2Fji4+PxeDzE
      xsYiSRKapvGXv/yF8vJyLr30Umw2G5s2bWLFihU89thj7N+/nzFjxmCz2Xj22Wf52c9+xlNP
      PcXjjz9OfHw8Bw8eZMaMGQQCAZYuXcqqVat47LHHeOaZZ7jrrrt48sknufvuu2lsbGTZsmU8
      9thjzJgxg8cee4wf/ehHrF69mvHjx5OZmdk3f5g+RtO0AXmeTgeiz7MmSQQCARI6i8isewEJ
      lZwD+7FaryJw9v+/R/cKhULIsix+2yHIkFgENhgMeqeuaZreCRqNRnJzc9m9ezeqqiLLcrei
      HUajEbPZ3O/yhVQJWZYxmkx6eyajiXSljuSAFZNpHGaTCYNswGw2H7Oyl1EBk9FwwoIjxyoI
      I8sycXFxLF68mOLiYnJzc+no6MBut5Obm4vb7aa5uRmDwUBxcTFWq5XGxkYWLFigd9qSJPHl
      l1+Snp5OKBRCkiT8fj8ej4e0tDTuvfdeVq9eDUBVVRWzZs1iypQpTJkyhbq6OsxmM3l5ecye
      PZtZs2axYcMGMjIyaGxsZPLkyUydOpU5c+YQDoe56aabKCgoYNSoUXR2dpKens7MmTM599xz
      2bt375BVALIsYzAYBluMQSUUCuF2uzEYI27DBlnCbDaTWP8hYSIDs5hwO4aWPZhNBpBO/HsZ
      jUZkWR6Qd1XQO4aEAsjIyNAjVzs7O/UHxWAwMHPmTPx+Px999BEXXnhhtxHyQJXw69pEtL3E
      zt1c3vIoWquJ0LzZIMWBFDkeCoWOsqsrqkZmPN2icY9ElmVSU1OP+Z267jMYDLS3t6MoCl6v
      l/T0dKZMmYIsy9TV1ZGdnY0syzQ1NenpH8LhMH/5y1+4/PLL2bVrFyUlJVitVubMmXPcSlhd
      2/zkk0/49re/jaIorFq1CoD//u//1mMIoudqmsZf//pX6urq+P3vf68v3Hc9PpTLLg5l2foD
      TdMIh8O4XC48Ho8e1BdUNSJjmMg7ptoj63KN5jMI2bIYvfAuYuWedR/R93Sk/banAwOuANrb
      2/noo49obW1FkiQOHjzI1VdfTUJCAmvWrKGzs5OrrroKSZL00djChQt54403OHDgwJBwNdTU
      MMbdq1G1EGghYr0VQLZ+3Gw2d3OXBPD6Q2wrd3DOmWM4HtGX8UhUVcXv97N9+3ZmzZpFYWEh
      S5cupba2Vo8J8Pv9WK1W4uLiyM/PR5ZlNE2jvb2dpKQkVFVlxYoVqKqKpmkoisK2bdu47bbb
      0DSNmpoaHA4HjY2NTJ06laKiIg4cOMD+/fu5+eabsdvtZGdnU1BQQF1dHT/4wQ+ora0lMzOT
      srIyysrKKCwsZMGCBWzbto277rqLxsZG8vLysNvt7N27ly+++IL77ruvz/4OgpPjyE5flmXi
      4+PJysrS37mPdlbg8PhJSYhFC7hQO2vQgK3x38OcNYOkmKE5ixP0jgFXAMnJyVx33XVH7b/i
      iivweDxYLBZ9NNo1V8211147YDKeCM3TitpSqm9LrfvRcpf2S1sWiwW/38/u3buZNWsWaWlp
      TJ8+XTexZGVlMXbsWLZv386UKVNYuHAhX3/9NbIsM3PmTJqamkhMTMRsNuvBYUajkenTp7Nr
      1y4SExNRFIWNGzeSmppKTU0NmZmZ3HHHHaxfv5477riDhoYGJk+eDETSSkTXI8xmMytXruSO
      O+7g3Xff5fbbbyclJYUFCxZQUFAAQF5eHj/72c947733uOaaa8jOzj7udxX0L6FQ6KhOPzpb
      PB4uX4DGsq+IV0OE5VhcpnRSBlBmQf8iaaexW4bT6RwQzyCPP8iL63dx4fwJTM9LJ3zwC3z/
      /pF+XIpJRvrWw6yvTuT682cc8x5ef4h3t5Zy3XnTj9vO8WYA/cEnn3yC0Wg8ZkDYkTz33HN8
      97vfHfYRvsOtKPzxRvpxcXEnNMl8tLOCsto2AiGFZdImzqh7lU5rHm+k/Dejk+NYNnscWanx
      PZLD4XDobQuGFsPnaR9AwnWRLJgKBgwoaL52Qjv/Bmk/HWTJes7ChQuxWCw9OvfGG28UL+9p
      QtdO3+v16g4EXc07vSXesReAtrgpfSmqYAggFEAv0VQF5ZACKI67gBylnGRfOWpnDVKqNuQX
      OaPYbLYenzsU4y8Eh4l2+m63G7fbrY+2MzMzT9mrSdIURvkqAXDEjAeRCXpYIbKB9gYlhO+t
      /0JtLkFDotI8k+KsW9AAg7+NhRUPEvj8kSEZ7HQs19TTCUVRjukiC+hxIyONcDhMe3s7dXV1
      2O12DAYD2dnZZGdnk5CQ0CcurQlqOzHhDlQMdMRM7AOpBUMJMQPoBUrtdn30HzTE02EZi80k
      o0omDFqIFG8pocJSzPN/gBSX1idtOp1OXn/9dW666SZkWWbnzp0sXLiwx9erqsqWLVsIBoOY
      TCaWLFlySjMUTdPYvn07fr8fp9NJTk4ONpuNAwcOYDabdZ//aBulpaUUFhZy7bXXnnS7X375
      JS+//DLhcJif/OQnTJ8eWUfp6OjgwQcfRJZlcnJymDhxIh999BHhcJhgMMhPf/pTXnzxRSCS
      /vrZZ5/VAw5PV463kNtfbpa5SiRdi9ecjs+cAh5RC2A4IRRAb2jYBUDAmEBp+ndRJAsBo42w
      HINBOZynSG0rR+4jBaBpGtnZ2RQWFjJ37lyCwSCaplFUVITD4SA/P5/Ozk4mTpxIbW0tBoOB
      rKwsKisrmThxIo2NjcTFxTFnzhw0TdNz+vt8PiZMmEBWVha7d+/G7XYzefJkTCYTe/fuJTY2
      lrlz51JYWIjT6eSMM84gKysLSZJYuHAhmqbx2WefMXnyZKqqqpgzZw6ZmZls2bKFjo4OvRhN
      Q0MDeXl5tLa2kpKSwoEDB5g8eTKNjY3YbDba2tqora3FaDSycOFC3SNl37595OXlYbVaeffd
      d/n1r3+Noii8+OKLPPTQQ0iSRFVVFePHj+f222/n3nvv5Y477uDyyy9nw4YNVFVVMW3aNJ5+
      +mkaGhp47LHHTstF7P6w6feGrFAkFXhn3CQ0SXQXww1hAuohEhqJ7shimD37CqpTLjh0QMId
      0923X23t20La6enpuN1uvF4vAK2trQSDQc466yy+/vprvF4vra2tVFVVUVlZSUNDg+5N1Nra
      qrteRkeJU6ZMYcaMGezZs4dAIEBLSwsLFy4kMTGR3bt3M3/+fADq6+tpaGhg4cKFeocexeVy
      YTAYiImJOfwbSRJjx46lpaUFiIxWNU1j0qRJVFRUIMsyNTU1KIrCvn37MJlMlJWVcc455+jn
      RsnJycFkMgEwfvx4Xn75ZTZs2EBra6t+Tn5+PoWFhdx9993k5ubqRWvWrVvHNddcA6AXtv/e
      97532kT5appGKBSio6NDN+8YjUYyMzPJysrqM/POiZA0hcRD9v9w+uwTnC04HREKoIcY1AAJ
      vkjUqyFnfrdj4ayzu20rzSX0NXPnzmXXrsgMxO12Y7fb+frrr0lMTGTixImUlpZisViQJInK
      ykrGjx8PRPz229sPp/D1eDxs3ryZ5uZmNE3DarWSn5/P1q1bqaiowOFwUFRURDAYxGq1MmPG
      DLZu3aoXhYmya9cu5s2bd5TZobW1lcTERAAqKyv1cpa1tbVomkZWVhZVVVWYzWYURSExMVFP
      8dGVuLg4vZO78cYbufTSS8nLyyMl5bAX+ubNm1m+fDnPPfccdXV1dHZ2snXrViZPnqwrrPb2
      dg4cOMBZZ53VF3+GfuVYNv2srKw+ten3BqMawBqKPDuGlMGphSHoX4QC6CFpSgNGLYAimZGS
      8rodM035NlLs4RGy2lHV5+2PGjUKg8GA1+slMzMTVVWxWCzIsozNZtOjckePHk1ra6s+es7N
      zaWyspKdO3eyY8cOgsFIEjuv10sgECAQCNDQ0EBSUhIul4ucnBwgkpYiFArpx7rWbnC5XEiS
      1K0AfElJCZs3b9ZTU2iaRm1tLZdccglLly4lLy+PtrY2zjjjDDZt2sTEiROx2Ww4nU42b95M
      bW0tELH3K4pCUVGRPuPZsmULn376KW+99Rbf+973OHDgAM899xzjx49n8+bNPPPMMwBYrVZe
      f/11rr/+el2hvPHGG1xzzTVDdvSvKAodHR3U1tbqVd+ys7MHdKR/PEyKC6PqBySkBBHANxwR
      gWAnIBAKU1HfQesXLzKndS2dMeNxXfQShRV2mtrdjE6O45wZY0kPVrL/87VMaH0fKX40tlve
      RzIe9rM/2UAwVVVRVRWj0ah7wpjNZoLBIF6vl7i4OIxGI4FAQO/0w+Fwt8RbiqLgcrmwWCxY
      rVacTicGQyRxnclkwuv14vP5SE5ORpIk3bwTGxuLz+fD6/WSlJSkd0aKoqBpmh40FQ6HCQQC
      enK+aObRUCiEyWRCkiTdg8dgMOB0OvW4goaGBmJiYti2bRuXXHIJwWAQs9lMKBTSk4gFg0Ea
      GhpITEwkMTGRv/3tbyxfvpzc3FxcLhft7e1kZWVhMplwu93dYhbcbjcxMTE96kgHKhBMURQ8
      Hg9utxtFURg1ahQ2m23IKKn6Vidf7msgWLWFS1qfBEsCa7L/B6s1hlaHVwSCDSPEqs4J8PpD
      FJY3MStcD0BnzHjkY3lbZMygNrGBCa3vo/k60YLebgrgZJFlWV8YNRgMeidhNpu7dfJdg7qO
      zLpoMBh0swxEZhNdsdls3eICuirV2NhYYmNjj7pfV4xG41EdpyRJ3eToek30/pqm6ZlMFyxY
      gCRJ+vfoeq3ZbGbcuHH69nXXXUdMTAySJJGQkNBN3iM7ma6zlMEiuvju8XhwuVxomkZsbCxp
      aWkYjcYhFzeyr7qVDpeP1GBkLUdOyCSkSlhO37Gi4DgIBdBD4gKRLJ5uSybHm3P4zKmRD2E/
      mq8dYpMGRrjTFEmS9BxDveFIhTRUUVUVt9uNy+VCVVVsNhvp6en6TG2oExuMZLSV4rOQNGEt
      Ho4IBXAMOlw+EmItGAyRh17SwljDnQD4TGnHVQCKbAXrKPA70FyNIBbORhxR847L5UJRFOLi
      4sjIyMBgMAy5kf6JiAtHPK7kUdnQOcjCCPqFk1IAB2vqibFaGJ2e2tfyDAk+213F+XPzQILd
      B5owKn5MigcAv+kbRvWShByXgep3oDobBkhawWBzpE0/OtIfiuad3mDVIs+8ZhUz2eHKSSmA
      qpp6PtvyJf+/W68btkoAIBBUaGp3E6t6D3lDgM90/GS4GhKdJJEAkRmAYFjS1abftdMfqjb9
      kyVWi3h+BQ0iF9RwpceGvWgumYYmOx9tLKC1rYNnXvoHzS3HLlQ+nLCG2pHQwGAhaPzml6FN
      iyy2qp01AyGaYICIdvpOp5OGhgY92C4tLY2cnBySk5N1j6fhgISmKwC/adQJzhacrvR4BuBw
      unj8/30Fp8tNOKygqioGg8x/PvmCm667sj9lHHSiwTBSXDqa9M06020eDYDqqO91O5IknTYL
      hCOFaNlNp9OpL+RmZGQMq7oBx8JEEJMWQgNChsH3pBL0Dz1+ikclxLPi6kt4/m9rUVWVSRNy
      ueOW64iNsfanfEOCmFAbwKH8Pt1HeL5AiK3FtVy1JD+ybY7kANJcDWhqGKmHdVMFQ4fhatPv
      DWYtgJEQIBE0xAMDU6hIMLD0uHfSNI0DFdWcv3Qhn2/5kqVnnzkiOn8AS9gBgBR79HqHBoSV
      w+mIveY0NCQIetF8HUi2vkkKJ+hfjtXpDzebfm8waz6MhFGR2FjmRFFGxrs+0uixAjhYXc+0
      /AlMmjCOKWeMJz01+cQXDRPMugJIBhW+3NfA8foEnykVVTJiCPvR3C1gS8PlDbDx6+oBlFhw
      IqJrWh6Pp5t5Jy0tTZjhALPiQUJDxYgzZOIElk/BaUqPFcCEvBz985RJ4/tckJKSEoqLi4mN
      jWXZsmXEx8dTWFjIzJkzkWWZkpISMjIySE0deK8jc9gV+RCTDB5w+4LExZiPeW7YEAvWRPC1
      oHZWYciYiqJqOD0BDPLIG0kONaLeO107/dMpOKs/8PpDqJrW7Zk2h50A+KUYVCSGRpIKQV8z
      JAzU7e3tbN++neuvvx673c769eu54YYbKCoqYsaMGdjtdrZv387NN9884LLZOzxI/g4APNhQ
      lBNXn5JTJkBdC2pbZX+L168MVIH6gcTv9xMOh0lJSem2kHu6f9dTCTQ72NSBxxdiwZTDCd+i
      gY9uSbiADmdOSQFEc7gfmXumtxgMBoxGo+5O2jWvTSgUYt26daxYsWJQkmV5AyEsSmQGUFQf
      pEX1YjZ+sxxy6iS0um0oLfsHQsR+Yzi691osFv35Go7fr6+ICUXyALkkEQQ2nDO3X74AACAA
      SURBVOm1Amhvb+ftt99mxYoV/OIXv0BVVR599NFuycZ6S0JCAlarlVdffRWHw6Gn8/V4PDz/
      /PPMmjVLT2Cmqqo+WguFQgQCgZNu93goSqSkYDCkIKsBzJofDfDJNtSwgqpGFg1VVUFVFBRZ
      IhgI6HKpyeOQAKWtkkAgQDAYjBwzyP0ib38xEhc/T1eCweBJXxsKhrq9S+FQmJhAMwCdUhKq
      qiKh6c98tORmT5/lUCiEJEmn1bM/Uui1AigrKyMuLo7t27ezaNEiUlJS2LFjBxdeeOFJC1FR
      UUFiYiLXXnstgUCAf/zjH9x6663YbDZuvPFGXnnlFebPn098fDyyLOszDpPJ1G220FcYDJG0
      xpqkECMFMaAAEoo5ETlsQJYjWTll2YB8KEOn2WLRTQqW0VMIArgaMGsBzGYzRqMRgyz1i7z9
      RSgUOvFJgiHBqQShmcwmTMrhmbfRZCT2UOyL05CqZ6SNPvPRtN89fZb9fj+yLJ9Wz/5Ioddr
      +6NHj6agoIC33nqLxYsX09LSckqj/yhR9zuv19ut44mJieGaa65h7dq1g2KntUTd4SQDwR4G
      xMiJY8GSAGq4X6qDCQT9iqZhC0ZmAF6TcGMezvR6BpCbm8vNN9+MpmmMGzeOqqoq5s6de0pC
      TJgwgcbGRtasWYPRaOTKK69EkiQmTJiAJElkZGRw1llnUVNTo5c6HChiNC8yKiHJTMhgA3ow
      1TbHISflojbtQWkqgpQ5/S6nQNBXmBUPRtWHBnjNwzfXl+AkF4F9Ph+fffYZmqbR0dGBoiin
      FBovSRJLlixhyZIl3fYvXrxY/zxz5syTvv/J0NzhYW91C/FaxBvCL8WiymZ6pAAA45j5BJv2
      oNTvgmkD770k6Dldq66Fw2EkScJgMOhVyQACgYBe7SwcDutuo9Fzojb4aDqPaFW0QCCAqqp6
      AZvoNdH2ou2oasS7zGQyIcsy4XAYVVW7VXkzmUxHVWPrDyzhDmQtjCKZCRhFHqDhTK9NQPv2
      7eOdd95h1qxZNDQ0oKoqO3fu7A/ZBpWQouD1h0hUI2kgHFLvAt8MWbMBIq6g6untYjjcaWho
      4JFHHgHgj3/8I2vXrkXTNO677z4URaGiooKrrrqKgoICHA4Hv/rVr4DIQOi+++6js7OTlStX
      8sADD/DII4/g8/mASC3j+++/n1/+8pe8+OKLenv33HMP999/Pz/5yU/Yt28fP/vZz/jNb37D
      Aw88QFlZGQD/8z//w+23346mRRZfo22uWrWq39+32KAdCY2wIVZkAh3m9HoY0dTUxJlnnsm4
      ceM4ePAgTqeTtLThaydM1CJFMTrl46eB7kpYUfEFw9gOFdHWPHYIC++HoUx2dja1tbX4fD4C
      gQDV1dU0NTWRkJCA0Whk06ZN3HbbbWzevJlFixahqiptbW1UVVUxfvx43VwZVSJRFi1axOLF
      izl48GA3BSBJEg8++CD79+/nP//5DwaDgQcffJCYmBggsmja3NxMfn4+lZWVjBs3Dr/fz+7d
      u3E4HCxYsKBff4/YQ6UgfaZUNElG+IINX3o9A1i4cCFbtmzh+eef580332THjh3Mnz+/P2Qb
      EiQoEW8Ih9QzBdDu9LGvuiWSA0g2gaaiitoAQxpJkkhNTWXfvn3k5uYSCAQoLS0lPz8fRVHY
      vXs3F1xwAdXV1QQCARYuXMiXX37J1q1bdbNlSUkJ9913Hw899JDuxCDLMn/605+45557uPzy
      y/X2QqEQ7777Lm+88QZTpkzB6/Xym9/8hvvuu4+qqir279/P2LFjmTdvHl988QUAra2t/O53
      v2PlypV6jej+IloK0mNO79d2BINPr2cAsbGxPP7449TU1KAoCjk5OfrI5XRGVTV2lTUwb1JW
      t/22UORlcBq/eTGsptmB23d4fUAyxSLFJKF57Ieqg2X2ucyCvmPatGm89dZbXHLJJQBs2LCB
      73//+zQ2NmK323nqqadwOByUlZWxZMkSXnjhBRwOBz/4wQ/w+/1MmzaNP/3pT93uGQ6Hue++
      +2htbeX+++/nnHPOAQ4rnP/6r/9i/Pjx/Oc//+Ghhx7S36NnnnmGqqoqWlpaaG9vZ+XKlaSm
      pnLLLbfwyiuv8Pvf/77fgiI1TdMVQDSzrWD40uuhRGdnJ//85z/JzMzkueee45577sHpdPaH
      bAOKhsaBunbULtGhBsWvp4L+pkpgAC2dHvzBw7Z+yWRFijuUGtrZ+9oAgoFlxowZbN++nUmT
      JjFt2jS++uor8vLy2Lp1K7fddhsPPvggd911F5s3byYjI4Pm5mYyMjKwWq1IkkRxcTH33nsv
      v/nNb/B4IqUU33zzTe6//36eeuop8vLy9LaMRiNnn3227uXm9Xr59a9/zb333ktxcTGlpaU8
      +uij/OEPfyAhIQG7PdIhn3nmmaSlpfGf//ynX38LoydSztRtzujXdgSDj6T1Mh5++/btVFZW
      kpmZSXV1NampqZjNZi644IL+kvG4OJ1OEhL6ZpFKUVX+9WkJ1y6fxvotpUwem4K74H+Z0vQP
      AsZE1qQ+SGpaOk3tbsxGA3ExZtpdPhJsFqwmI3mZiewqa0RVNfJzU5kxPp3kgt8RLv8I7+Tr
      +MR8FQZZ4rrzpveJvAPBSAoEi1b8ippXNE3TPXkkSdI/a5qGLMt6cJPZbNavjSLLsn6+y+VC
      VVVGjRqlewGpqqrfM7odfQ1lWdbb6HpudF9XGbpyKmmrS6rsei6gptZOrK8tx6CF+DznvylT
      xiHLEgZZZpTNQpvTx+jkOJbNHkdWanyP7u9wOJBlmfj4np0vGDh6PQNIS0tj165drFu3jsWL
      F9PZ2Ulc3PCrGCRpGqMd25GA6uTzIlk+e0hLp4fqJgdSQsTso3la+0lKQV8Rdf2MdszRTjz6
      f/ScaMdrtVr1iPTotdF/Xc9PSEggMTGxW+fc9Z7R7a7Xdu3cu8pxpAz9gTXUjkELoSLTKYsY
      gOFOr9cA8vLyuPrqq9E0jQkTJlBRUcGZZ57ZH7INKhIqMYfC4dst4+HESUCPvoclMjvR/I6+
      FE0g6DdiA00EAJ8Ui5/Tf21P8M30eighSRJJSUm0tLSwbt06PB4PnZ2d/SHboCJrYb0SmEs+
      uWAYyRKZ8moBd5/JJRh8jjT5aJrGunXruu2LEg6Hu2UdtdvtbNq0Cehu+tE07ahUJ12Pw+Hs
      u/2KoxYArzyKoCRy9wx3ej0DqKio4LHHHiM1NZX8/Hx27tzJokWL+kO2QcWkeJBRUJHwSidn
      4ooqAIJO0DSOrCcs6B+iUerBYJApU6aQm5t71DmlpaVMnjz5hPeqqanh+eefZ9y4cdx+++1s
      2rSJNWvWEAqFuPzyy7nyyitpa2ujtraWTz/9lJdeeok///nP5ObmsmHDBt566y1kWeahhx4i
      NTWVzz77jPz8fB588EFaW1sJhUL88pe/5NFHH0VVVa699loWLFjAAw88QDAYJDY2locffpjX
      X3+dLVu2YDabeeSRR/rM887rD+HzH1Y8amcNAG6z8FobCfR6BtDc3MwFF1zAmWeeyfLly7n0
      0kspLy/vD9kGFesh758gFoKc3EhIskZmDgY1iKyJaOCBQpZlli5dygUXXEBxcTGapvHVV1+x
      ceNGysrKKCsrY9u2bezYsQNFUdizZw+bNm2ivr4el8ulR+MCtLS0sHDhQn10P378eFatWsWv
      fvUrvvzySwA2btzIueeeSzAY7KZU1q9fz+OPP84VV1zBRx99hKZplJWVMXnyZG677Taefvpp
      cnJyeOedd7jqqqt48sknWbduHQaDgV/84hesWrUKj8dDa2srW7du5ZlnnmHGjBns2LGjz36r
      sto2yura9G214yAAHovwABoJ9FoBjBs3jrq6OqZNm8aLL77Ihg0bhkUcwJGYgxH7v1+KJSyd
      XLnA6AzAoAaQhAIYcAwGA6NGjSIQCHDGGWcwffp0SktLOeOMM8jJyeHMM8/E5XLhdDo566yz
      KCkpITY2lpycw+VP582bx7hx4/Tt7Oxs9uzZw+OPP87KlStRVZW9e/cyffp0Lr30UmJjDzsL
      hMNhYmNjGTt2LHa7nerqarKzs7FaraSlpbFq1SoMBgPBYJCxY8dis9mQJAmj0YjFYuH3v/89
      8+fPx2QyER8fj8Fg0O/VH7R3uvDZI1Xs3JbsE5wtGA702gSUlZXFnXfeicVi4aabbkLTNKZN
      m9Yfsg0qmicyKvJI8SgYgZPowA8tAhvUALIWPpl1ZMEpEHXDlGWZL774ggkTJnRz65RlGa/X
      S1tbG3v27CE5ORlZlr9xQFNYWMirr77Kww8/THJyMnV1dYwePfqYgVmSJBEMBrHb7SQmJvL5
      55+zbNkyVFXlkUceYe7cuVx++eX8/e9/x263M3HiRMLhMIqi8Nvf/pYbbriBhQsX4vV6cbvd
      aJqG3W4nPb1/InR9Hgex3kgaCLcl6wRnC4YDvVIAq1ev5sorryQjIzI9nDp1KqtXryYtLU3f
      N1zQ3E0AJ23/h8MzAKMWxBJ2kuHcSrjKgSF3kai21Y+EQiG2bduG3+9n/PjxqKpKIBDA5XLp
      QVpOp5OioiImT56sFzwJhUK4XC5qamqYPj0Sr/H222+zZcsW7HY78fHx1NTU4Pf7efLJJxk3
      bhxWq5WlS5cSDAZ54oknKCwsxOFwsGLFCs4//3zuv/9+nE4nv/vd7/jrX/9Kbm4uDoeDbdu2
      6YkUr7/+ep588knWr1/PhRdeSEVFBdXV1XzwwQd88MEH/PSnP2XKlCncf//9tLa28vjjj/fL
      77bn6yIWawFUDLgtmTBywkBGLD1WAIqisHXrVn7wgx/o+yQpUuGqpKRk2CkAtbMOgI5T8IWW
      rIeD1PLaPmRc+0f41r2C9aKHMU294pRlFBybZcuWoSiKXmsa4KKLLkLTNGbPjmRpveSSS/QU
      z5dccgler5eYmBhkWSY/P1+/12WXXcZFF10EHC68HvXWkSSJJ554ghUrViDLMnfeead+ncVi
      YebMmZx77rnExsZSX1/P+PHjdbPU22+/rZ8bExPDU089hcfjIS0tDVVVWbNmTbfjP/rRj/SZ
      hNVq7ZffLUWN5KzymVNRZAsn5fssOK3osQKQZZnExERKSkqYNm2aPr3ds2cPZ599dn/KOODI
      qNAWKehul8ec8Pyqpk5k+RgjetkAplgIeUnxRCuDaQS2Po3xjAuQTMNv7WQoYDQaj8qX39U2
      D2A2m/VALoPB0C1KtWugVdci8l33QSQtysKFC3Xzj81mO0qWaKbc5uZmvvWtb+n3P/Jcm82m
      7zMYDMe81+jRo4/3lfuENHfkGW0zjkHDgFAAw58eKwBJkvjxj3/M6tWrGTVqFGazGYfDwZQp
      U5g0aVJ/yjjgmMMOrME2NKDVnMuJ0m6FFZWwcoyXRZKRLPFoIa+eYAtAczURKv0/zNO/06dy
      CwaWxMTEHqdAObLY0VBDczWS3FaABpSa5w22OIIBoldrABMnTuTPf/4zqqrqFYqGoy07yVuO
      QQvhNybitmRx0jWRJBnJkoDmbsZwyAtITh6P2l5J6Ku/Y5p6BZLcf5WdBIKeIlduQAq6cFrG
      UGWbT9JgCyQYEE6q94kmwRqupLmLAHDEjEOTTiXtroQUnwFtB/Q95nm34P/4AdS2cpT6rzDm
      9G9xj8Hi4MGDuFwuZsyYQWdnJ36/n8zMngcXKYrCV199hcvlYsyYMac8y3S73ezatQuIVPJa
      tGgRlZWVOBwOzGYzc+bM6WZbLyoqwmg0MnXq1JNuU9M0Dhw4wPvvv8/dd9+NJEm8//77FBQU
      cN5553HeeecBkXKT//u//0tzczO33nor48aNQ9M01q5diyzLXHfddWzcuJHPPvuMzMxMbrnl
      lqPMUqeCQfExunMbAC3xA1t6VTDwdEs+2NuL3W43DQ0NKIrSp0JFXdwqKirw+/16W1FBo9Wa
      +h1NJdl9yP4fN+ukb9Pq8BIKq8jJh9MAIxmQs+diGBtZMwnteeOURB3KdHR0UFFRgc/nw+v1
      4nA40DSNgwcPUlFRgaIotLdHYi2am5sJh8P6uQDFxcUkJiayfPlycnNzCYVClJeXU15ejqIo
      qKpKZWUlFRUVqKqK0+mkpKREz7558OBB/VyI2NiXLl3KkiVL0DQNm81Ge3s7ixcvZvLkyXr0
      MBx+Fuvq6tA0DY/Ho5d5bG9vR9M0Wlpa2LdvH62t3RP9NTU1dfsN3nrrLV3xNDc3s2HDBu68
      805ef/113O5IipDPPvsMo9HI9ddfz3PPPYemaZSWllJcXExRURHBYJC1a9dy55134vf7+eqr
      r/rkbxQMK2wprmFGw99I9FWiItEYL8w/w51oDWxVVXuvADweD08//TQ//vGPWbVqFdu3b++T
      tMGffvopmzdvpqGhgf37Ix3w22+/rZubXnnlFf0l7E80bysmXxMqEi0x+Se+4DiU17fjDYQw
      pHYZucpG5NhUTIds/+GqzWjDuFzkmWeeqUfLQqSedFSRl5aWsnPnTjRN45NPPqGuro7i4mL9
      WWppaWHixIm6p5nP58NsNhMMBikuLqayspKOjg4MBgNer5eCggIyMjLYsmULNTU1NDc3YzKZ
      9MFE1Pe/vr6ezMxMfeFWlmWSk5Ox2Wx6YffW1lZSUlIYNWoUDoeDcDjM7t27UVWVXbt2Ybfb
      2bNnDykpKUd1xg7H4cR/SUlJ/PKXv9RTlkfdS9PT05k0aRJ1dRFPs7KyMhYtWkR+fj4+nw+f
      z8err77KLbfcoheZnzx5Ms899xwHDhzo5qV0SmgQCClkuHYDUBJ7Lo2miX1zb8FpQa8VQEZG
      Bo8++ihPPPEEmZmZPPDAAxQVFZ2SEF6vl/r6eq6++mqWLFmiu+pFef/99znnnHNITEw8pXZ6
      gubtgLAfFQMOuXeF4I+FnDxB/+yIHY9kicOQNQeMFgi4UVvLvuHq05v4+HiMRiMdHR0A1NfX
      43Q66ejowOPxEB8fT1VVFdOnT6exsRGn08moUZEVF0mSus0yfT4flZWVdHZ24nK5GD16NB0d
      HVRVVeHxeHC5XJSXlxMIBEhLS8Pj8VBZWdlNHk3TKC4u1n38u6Ioir6etXfvXtra2mhra6Os
      rIyEhAS8Xi9NTU1kZmbS0NDAnDlzSE9Px2TqHiXeNRVE15z/ACaTSZ/FBgIB3VMpuj9aAH7z
      5s20trbyySefUFVVxb59+6iqquL6668nLy+P0tLSk/6bHIlV82JW3GhAeeIFaCJf1Yii12sA
      jY2NrFq1CpvNRn5+Ps8991y3UPmTwW6343K5eOONNwiFQixdupScnBwCgQAbNmwgHA7r0caq
      quodQzgc1kdtp4qqRl6+kCdS3UzBgF8zoak+fboUNT2oqoSiHvqsqKha12NaZJ+qEgqFCMdl
      g2UUasDFduMy/HWtjE0fBfFZ0HGQYH0hhuQTJyU7HdE0jblz5/LWW2/p1axiYmJITU0lGAxi
      NBp57733uO6669iyZQs2m003w+Tl5bFt2zamTZtGIBDg4MGDTJw4EZ/PR3NzM36/nzlz5tDQ
      0EBbW5v+PKampuL3+5k1a5ZeuD1qx29oaCA9PR2DwaBn9GxtbaW5uRmz2YzJZEJRFILBIMuX
      Lwfg448/BiA9PZ0dO3Zw0UUX0dnZya5du8jOzsbr9aIoCvX19eTk5FBTU8PYsWOByGygqKgI
      h8PBpk2bmDJlCkVFRXz88cdUVlaSm5vLe++9x5QpU3jzzTcpLy8nNzeXuXPnkpOTg9PpZO/e
      vSQlJeH1emltbcXpdBIMBo/KCtrTWXhYUfEHFeJiTATDCklKc2S/HINfjkOKPutdzAQgIUG3
      9yAUCvX43QuHw7rbuGBo0WsFYDKZSElJwev10t7eTlNTE9nZ2ae0KBUKhRgzZgwXX3wxPp+P
      tWvXcvvtt2MwGPTU011D+KMjp66BPqeKqmm4fSFqausYAwSkGCTZgCRLyJKELEuHIkYPfZYO
      f+5eQAT9PKPRiMlmY//Ue2isr6faOJtJAQWj0YSSNZtwx0HoqOyz79DXHJmeuDeMGzcOm82G
      yWRi2bJlxMfHEx8fz4EDB6ivr2fChAnExsZyzjnnEBMTw8yZM7s9Q3l5eVgsFg4ePEhOTg6z
      Zs1i7969pKamMmnSJGw2G6WlpciyzOTJk8nIyKCqqoqkpCT9mCRJ3RZxTSYTM2bM0Lfz8/Np
      bm4mKSmp26xg5syZuolo1qxZaJrG5MmTsVgsWK1WfeQfCAT0kpBRunbMqqri9Xq58cYb8fl8
      xMbGct9997Fr1y5++9vfEg6H2bJlCw888AAWi4WmpibuvPNOYmJiSElJIRgMYrFYGD16NL/+
      9a8pKCjgwgsvPGbcTU+foXaXh68ONHLenDwkSSZZi6xhBIyjUIxxmPVnXEY69E+WJD1aOnrs
      WLEWx8NgMOjXCAafw4r9JBRAamoqP//5z+no6ODDDz/k4Ycf5qGHHmLu3LknLVBGRgYFBQV6
      cE7Uw8hoNDJ//nwCgQCff/45y5cv7/ay9WV1JE1VCYQUOlqaGAP4pZhD4x4JpMj/0qH/u32W
      JKRD25HSfYdO4bBiaIqdQaVtDATD+j45PhLUo3la+rXC06lwKi6+ycmHzWdjxhwOpjsyBfMZ
      Z5wBcMxI8uzsbLKzDyclO7LwUFdTYUpKCikph+s2z5p19AL+kTl0xowZ0002iHRWXWWJei5Z
      LBZddpfLRUlJCaqqMm3aNGRZ1kf9XWfDycnJXHzxxd3uHxcXx4QJEbOg0+nkrrvuwmKxHLNT
      t1gs+nfMzc09ZlrrKEeam77xPCR2ljWSFG8lSY0oAK85DU2KPof6kx99lLveoVsupZ7Q2/MF
      /Uu0zCichAKora3ld7/7HVarlXnz5vHoo48yZcqUUxIoISGB0aNHs2bNGmRZ1gtoR4VcunQp
      //znP6moqGDixP5dpJKDLuDUcgD1BCk2kmJC87TqsxvB6UFiYiLnnnvuKd8nISGhz2panwwS
      kByIrJN0mMcOmhyCweOkZgBPP/00qqp2C6U/VS644ALd7TM+Ph5Jkli5cqU+erjhhhv6rRpS
      Q5sLkyEyOjEpEdc8v9zPCiAmsqCt+dr7tR2B4HjIapBEbwUA9Ya8E5wtGI70WgHIsswf//hH
      ampquPbaaykrK2PFihW9CvI5FpIkdcvHEm2r6/H+GiXXNDmIt0WUmfmQAgjLfZOnp9Xhpaiy
      GZu1e+CcFBOJtYyknRbVwgSDQOdBLIoLFZkGw7jBlkYwCPTaKFdQUMCkSZO45557UBSFiRMn
      Ulxc3B+yDQrRGUDQEH+CM3tGpNbr0XmCpNhD9molAEFvn7QlEPQUgxqEioiHk8s6tt9nvIKh
      Sa8VQFJSEpWVlXi9Xnw+H5s2bSIra/gUjzApkXzxIWM/m4Cso8AQmRVo3tYTnC0Q9A2dHj9h
      VWVq+ZNk170FQH3i2aeY8kRwutJrE9DMmTOprKzkpZdeQlVVLr744lPKlzLUMIcji8CBPpoB
      HA/JaImkilaCqJ5W5KRx/dreydAXazuCwUFVNVodXuJjzcRYDgerlRxsIejpQG6MRGh7iKM2
      cSm4BktSwWDSKwUQCAT0Tr+re5uqqsOks9AwK5E3IWw4Oh97n2KKQTLHovk70Xyd/dvWSSLc
      9k5f/KEwr31UxAVnjmfG+CNcbF2NaCEfqmTi/5LvxGJKBNyDIqdgcOmVAnj88cc5ePBgt31N
      TU08/PDDx/S7Pt2waj49LN5j7p+6q1Ek2RipFQBo/qGpAATDh5ZOD1+XN+P2BUkO1COhoVoS
      6bCOo3/LzAiGMr1SAL/+9a+ByMJmeXk5L7/8MpmZmeTk5PSLcANNotaGAQVFthAw9n/eIelQ
      0XgCYv4t6F+c3gBFlc3ExZiJ90eS0MnJ4xHeZyObXimAaJrav//97xgMBm677TY9qnE4MEpt
      RwKChjiCxvgTVgI7VaI1gzVfRz+3JBAcJiFwSAGkTAARhjKi6ZUCeOyxxygrK+Pmm29mwoQJ
      SJJEY2MjycnJfVqgYrBIViOJsbzmdLTeO0j1GskayXypBT393pZg5FJW28buA5GC7xIao8MR
      M66WMkUogBFOrxSA2WwmKSmJ9evXd9t/xx13DIuZQFwoUrfXbRogq6g54mmkBZwD055gRKKq
      GooaiaIfpbZj0yLBX52x4wERgzKS6ZUCuPvuu/tLjiGBNRQZDjnkgamIKlmiCkCsAQgGhiz/
      XiTAZ0zCa04HqgZZIsFgMuL9/JyeAL5gCKfbjyUcqebklk66DHw3tu2to9PtP+5xfQ3A7zju
      OQJBb3F6AgSCR6Ty1lSmuT9matM/AThgmsX+uk4c3/B8CoY/Iz5Bd2F5E7V2Jw6XhwnhiCnG
      J/VNDEC700dO+vGzPUbXAAh60FQFSR4OsRSCwWbH/nrand3Lp45r+4jpjn8hEXFxLoq/iHhv
      kJBydJoSwchhxCuAKBKqngjO1UczgG9i09fVJLZ5yQO0kBdUBYQCEPQBqqrR0nnYsSDBW87o
      QyP/itiF7MlYiT9opX9j3QWnAyPeBBTFrLgxaCE0JLxS/78aZbVtNHoiP78W9IF28tW3BIJv
      IrHsNQxakFbrGewa/f/glUXXL4ggFMAhLKGIHV6RzYTlgXFp1QPBQm5QhAIQ9D2atx2lugAN
      +NJ2GYpsPuE1gpGDUACHsIYjwVghORZFGpiXRLIcyjiqKmhhsRgn6FvSlTpSN98LSgCvOZ1m
      8+nvqi3oW4QCOIT50AJw2GBDlU0nOLtvkCzxYIoUnlGd9QPSpmBkIKGyxPEP4n1VhORYirNu
      JSxbB1sswRBDKIBD6GmgjfFofZQfJayodDi/YWRvtCInRIqSq60H+qRNgQDAGuog0V8FQNP8
      B7HHzx5cgQRDkiGlADRN01NOQyTNdLQOsKqq+v7+wKRGIiJDfZgG2hsIsa+m5fgnSDK+mEgx
      HbWtos/aFQhG+aqQtTCYbEiZovMXHJshpQDKy8t56KGHaG2NVMhas2aNUlHuHQAAIABJREFU
      3vG/8sortLW19VvbURfQvlQAPcEZMxYAtU3MAAR9R6IvMqAwZM5EkoW3t+DYDBkFEAgE2Lx5
      M/PmzdP3KYoCwOeff05+fj6pqan91r6FAABhObbf2gAIhRWCIUXfdlnGogFqRzWaEuzXtgUj
      h5RgNQBSxnREymfB8RgyQ4NPPvmEJUuWUFpaqu8Lh8Ps3LmThoYGVq5ciSRJ3UxBiqIQCoVO
      qV1FUVBVFYsWMQEFZSuapqJqKqoaMUtFTFGq/r+mSYc/HzJTReXSNA1N1fRjKjJql3uUVNkJ
      K0rk/opCmzUvEgzmthNqPYiUPP6Uvo9AgBIiVW0CwG3NQVHC3Z9X0J/xrs935J98+PnXtEPP
      8//H3n3Hx1HdC///zMz2XdVVt2TJsi33jm1wxQYupgTIJeEmIQlJbp5Ubn7pPLlPQhLim3KT
      OCGF/PLjPrmBBIgJcGMTQjHFuDfkKktWtfpqpVXZXqb8/lhrbWEbbLAaOu/Xy7xWs6OZo2Fm
      vmfOnPM9YEg6+pnzWtd1VE295GtP0zQMw3jX16pw5Qw2rY+JANDW1kYoFKK0tJTq6mpUVcUw
      DDRNo6enB6vViiQlazGSJA35/G6nLRzcls1IDp1PTgUpISGlKk7JdQZrUWc+S2c+p8qSXM8w
      GPKdJKV+4+x/pcHtS8TM2YQsBbjiHvSOSsw5097V3yNMbA3tvaihXhxGEAOJoK04dY6mztfU
      SXruk8H557h07ldIZzZz+dfe4DUrphgdG859lzomAsBg2/6WLVtobGykr6+PD3zgA1itVjZs
      2MALL7zAgQMHWLZsGZIkpeYflmX5Xc9FLMsysiRhJdlbR1Wcydu/JCFLcurkHTyBU5/f9J2U
      +pk3LT/zT5aRJD25vzPbCUUThKMJormLcLU/j96yG2XRh9/dwRQmtGavHyXQgokECclG2FaE
      IitDzl04cwO/wHl99vy+wDl8zvqKrFzytTd4zr835g0f/wZr/zBG3gEsWLCAD37wg3zgAx9g
      7ty5bNiwAYfDkTpZN2zYwPHjx2lvH56+8jI6ZiPZ/j6SL4H7g1G6+kKYpl0PSGjNe9D7W0ds
      /8J7U0bkNBLQJ+eN2JgWYXwaEwHgXGvXrsXtdgNw++23p2oOd999N5mZwzNPr4yGmcEAYB+W
      fbwVU8lypIxi0OKoLXtGfP/Ce0tmpB6ADqV0lEsijHVjLgA4nc7Uo2J6evrZNnqbDadzeGrn
      CtqoPAEMOlTXRU/afAC0tjdGfP/Ce4eEQWa4EQCvafIol0YY68ZcABgNipE45wlg5ANAIBxH
      zZoOgOY9OeL7F8a//mAUVdOxx33YEz0YSPTapnK4zoN+TpuvIAxWqkEEAABMegyZ5EWiyiPf
      BASg5M8BwOhvwYgFR6UMwvi1/fBpAuEYzrgHCZ244iJsyaXXHyEcSwx58SdcOcZgV9lx9E+W
      ZUwmU/LfaB/AsWAwDYSKgiZbgZEfkCVnTEayZWJE+1Fb92Gedv2Il0EYvwwMNM3AEe9CAmKm
      TFTZignYc6KVTJdIBDccVHV8p3EXTwCAWU3WuGOS/YolgrtsVidywTwA1NqXRI1NuCwDoRiH
      TnXginUCELQWjnKJhPFABADOzgUQxoU+iofEXPFPAKind0EiPGrlEMYrA+eZABASAUC4BBM6
      AETjKt39IaxqcjawsOTCGIFDsut4C7HE+Y+OUvl64ooLYn7UhteGvRzCe4xhYAp1ABCwiAAg
      vL0JHQCCkTjNXQOpyWAi0sj0AFK1C6e11kxOPOnJZHiJU/8YkbII499ze2uJxBLEwn70gVYM
      oE/JG+1iCePAhA4AgwafAAJyxiiXBDzpVwGge6sxEmKaSOHthaIJDAPk7hOgJYjioEcuGO1i
      CeOACACATe0HIDwGAkCfIzkewAh1o/c3j3JphLEuHE2k0otnh5KZdHvNxcQQvX5GQ09PD4cP
      HwbgwIEDNDU1AfD666+jaRrBYJBHH32Uvr4+AoEAe/fuBZLdSV999VVCoRBPPfUUTz31FFu3
      bh2SQbWnp4dXXnllyP62bdvGU089xe7du9E0jaNHj6Z+//jx4wC0t7fz5z//OdVj6eDBg4RC
      Ifr6+iZ2ADjV0kMklkg1AY3GILA3i5vSk2khSD4FCMJbaezsw9sfAgzcoeT50uucMbqFmsAU
      ReGRRx7BMAwee+wxnn/+eSKRCM888wyyLLNnzx727dvH9u3bMZlM/PGPf0TTNNrb21MB4JVX
      XqGoqIiCgoLUoK2GhgYeeOABnnnmmSH7e+aZZ3C73Wzfvp1nn32W1157DU3TKCoqIj09HYB/
      /OMf7NmzJxUQnn/+efr7+/nNb34zsQNAbyCCqqqpABA1Z49yiQAkjLwz3UHbDo5yWYTxwm6E
      yVGTiQR9zlmjXJqJKyMjg1gsRnd3N0VFRfh8Purr65kxIxmU9+7dy5e+9CX27duHzWajpKSE
      xsZGDhw4wDXXXDNkW4NZVAFKSkrYuHEjNtvQJzuz2czy5cu55ppr8Hg8Q74zmUxomkZ1dTX/
      +q//ys6dO4FkOugtW7ZgMpkmdgAAUPQYipHAAGKm9NEuDgBHQ8l5grX2NzCMwfmRDTE2QLio
      Aq0FKzFUyUqfo2K0izNhybJMcXExO3fuZObMmciyTGVlJXPnziUUClFTU0N1dTWnT5/G7/ez
      atUq9u/fz8GDB1m+fDkA0WiU7u5ufD5f6pq3WCwXTKcdCoX4zne+w6uvvsrtt98OQF9fH93d
      3YTDYVpbW+nt7aWpqYkDBw6kmoG6urpwOp0iAJj0KIoeB6RRSwMxqNMXJBSN0+ucgY6MEfBg
      nEkPvfNYM02d/aNaPmHsKogkm3+89hmosnWUSzOxLViwgM2bNzN37lymTp3Kc889x9y5czl2
      7Bjz588nPz+fJUuWcOjQIZYsWcL+/fuJxWKpLMhZWVksXLiQ2bNnp5qAwuEwXq+XWCxGV1dX
      KjA4nU42btzIxo0bKSxMdv2tqKhg4cKF5OTksHv3btasWZNqUmpubkaWZT7zmc/Q0dEhUkGY
      9BiykcBAIq64RvXVWUdPgHA0QTOZhExu0tRu1ObdWLJEWl/h4mRDJT+QzCLbbBK1/9F21VVX
      0draSnFxMSaTiWAwSGZmJrquc/fddzN58mRKS0upra3F5XKxbNkySktLkSQJh8NBSUkJf/vb
      37DZbHziE5/AarXS0NDAa6+9xtSpU3nqqaf47Gc/i8lkYu3atZhMZ2/jixYt4vDhwxw/fpwl
      S5aQkZHBmjVrSE9PJy0tjVAoxPLly3G5XHzta18TAcBiRJAw0CUFVRneCeEvlY5MR+Y1zOjZ
      SvzwnzHP/9BoF0kYwzIip3HGPOjINFkXIqaAGV0FBQV8/vOfB6C0tJRPf/rTAKxatSq1zqRJ
      k5g0aRIAH/vYx1LLXS4XX/nKV87b5rx585g3b955y++8884hP69du5a1a9desFyDvz9//vzU
      sgnfBDQ4F7AmW9Gl0bl0NF3HNxAZsixefjMoVoz+FrSm10elXMLY4u0LEY2fP4I8P3ISGZ0B
      +xRClvxRKJkwXk34AOAwAsDodgGNJzSqTnuHLJOzyjBNW5/8/tAfwLjw6GFh4qis7aQvEDlv
      eYmanAHM55w90kUSRkEgELik9QzDIBh869TyEz4A2I1k0rW4kjbKJTmfZemnQTajdRxGbnxp
      tIsjjEFmLUyRdhoD6BHdP0edYRicPHmSo0eP4vV6L7iOqqpomnZJ29M0jRdffJHW1mRnkEgk
      wkMPPUR/fz/PPvssW7duJRKJ0NnZyTPPPMO2bdtSPX3q6urYunUrNTU1bN68mYMHD2IYBn6/
      nyeffJI9e/aIAGAlWaOKm0Y3AHT1hujqGxqt5ZwKzHOSXbtKuv6OhHgKmMgMDOIJjVhcJRJL
      sOdEKwV9uzEbEcK46LJOH+0iCpB6AVxbW0tNTQ2GYRCJRAgGgxiGQVNTE/X19cRiMYAh3yUS
      iSHBYfv27Tz22GOpQVxHjhxh/vz5qYFlnZ2d/OUvf2Hz5s2kp6ezf/9+tm/fDiRHHy9cuJAt
      W7ZQUFDAH/7wBzo6OnjwwQexWCzJsQAjfnQuore3l+PHj2M2m1m8eDE2m43Tp0+n3o53dHTg
      cDiu+MTwg08Ao90FNBCJEQgPnYhGkiTMc+8kcfwpsmPNJHyHMAr/aciUbsLEEYomOFjTQX62
      k+w0O93N1Shdf8IAam1LiUs2QOSPGikXG5djNptxu92sWLGCV155hcmTJ3P06FEMw8But9Pf
      3088HsdsNpOWlsaxY8ewWq0UFRWhaRpZWVnk5OQQDAbZtm0bt912W2rbe/fu5VOf+hTp6emo
      qspDDz1EQUEB99xzD5FIhNdee42MjAwMw6Cjo4MZM2Ywa9YsPB4PmqZhNpvp7Ozk29/+Nvn5
      +WPjCSAQCLB161aKi4txOp0888wzGIbBjh070HWdYDDIli1bsNuv/E3abiRr3fExMgjszeS8
      Ocg5FUgYmF/936gNr452kYRRJgHmE3/i2tpvYAy0EVdc1OfcOtrFmnCCwSDR6MUDriRJSJKE
      xWJJjejt6elhypQpVFRUUF5eTm1tLXa7HbvdTl1dHdOnTycnJweAxx9/nJkzZ9Ld3U17ezt+
      vx9VVcnMzMTv93PfffdRVFTErbfeSnt7O1/72tdYv349V111FSdPnmTWrFkoisK+fft44IEH
      +NrXvkZGRgayLJ8t14gcqbfhcrm45557mDp1KlOnTiUeP1sT1nWdp556ijvuuAOr9coPcDn7
      DmD08wCdq76tlz0nWunsDfFa1qfptk5F0hNEn/sasf2/Rw/1UNvqu+C8AsJ7W6n3OQrq/4iE
      ht9azCvuL4yRNCbjW2VtJ8cbuy5p3UgkwsDAwEXvSYZh0NDQQHp6OqdOnSI/P59FixYl0y/I
      cirJm8PhYNKkScyZM4err76aaDSaasMvKyvDarXS3t5Oa2sre/fuTY0W/t3vfsfKlStZtWoV
      fr+fn/zkJ3zsYx9j1qxZhEIhXn75Za677joCgQAPPfQQX/7yl1O5gSwWC9XV1ezcuXNsNAEN
      Nmm0tbXx97//nVtuuQVJkgiHwzzyyCOUlJSkRrnpup46QIlEItWO9k6oqortTAAIS2louoam
      aei6hqbLyfEBup5apqoquq6h66SW6ZqWWkfTNAzDOOc7GQz5gtvQNNA0+cxnDUMf/D0dwwBV
      U0kkEsTjcXpNhWxxfYYN2sMUq/XE9/ya+BuP0Fj0/5C19ibSHWLk53uFPxRj78l2rltcxt/3
      1XPbiumEInG2vXGaQCjMFP8u0nsfBwyOWFbTMuVf8QxEsWoamialzidd19E1HQ0DDAlNU1Pn
      qwFD1jt7Xkto2tnvNE1H13VAQsIYcg7H4/FLvvYSiQSSJL2ra3UkxBMJDF1+23ImEgl8Ph+5
      ubnA0KYgwzAwmUy8/vrruN1ulixZQigUYt++fXR0dJCXl0dhYSGvv/46iUSCOXPmsH//fk6f
      Pk1ZWRmappGRkUF2djY33HADAEePHkVRFJ5//nm+8IUvYBgGhYWFNDY20tTUxOzZs6moqGDP
      nj3s2bOHq6++mmAwSHZ2Nj6fj9mzZ7N161YAPvShD/HFL36Rxx57jKKiorERACD5Rx4+fJiP
      fOQjqUhlt9u57rrrePbZZ4nH46lHKYvFAiTb2t7NU4HJZMJ5phtoXHGhyAqKoiDLypnPyWRM
      iqIga8aZ6H3m+zPryYqSWkdRFHTdGPKdIksX3Mbg+oOfJVk683PyoUxRFEwmExaLBZPJRFRJ
      Z1/Z/+bDjm0kqv8OMT/zO/4vzsQyrNYp7/LoC2OFOWGgGclamqaD1WKl3RemszfItdEtTPM9
      hwRo7tkctnyIXLMVWU6cdz7Jso6syCiyjCxLKIopdU4ahnHOevIFz+vk9nRkLfn7qXNYPnte
      Xuq1F41GkWV5WJ7grySzyYTZpLxlOVVVxePxUFhYiMViGZKuGZKV2TVr1gxZlp6ezj/90z8N
      WXb99denPq9evfoty7Vw4UIGBgZQFAWXywXAJz7xiYuuf+jQIebPn48kSeTk5PCtb33rvHXu
      v/9+YIx0A41EIuzbt4+PfvSjqZs/JA9mYWEh69ev5+mnn77iydAkw8BhhAAIj9BsYO9GVFfY
      kf4RnB/5C5I9i7RYB2z/3mgXS7gEhmHg6Q2i6+/sHE6PtlLe+xIS0GRdQO/y+9Fky5Ut5ASl
      ajrevtDbrqdpGh0dHRQUFKQqoSPFbDbzyU9+8pLWLSsrGxJg3sqYCAB9fX0kEgmeeOIJ/vSn
      P/Hss89iGAZutxtJkqioqKCgoID6+vorts+BUBRZDSMnH5IJSWNvHMCb6bpBXyCCnD0F280/
      A0lB6ziM5q1JrROKxInEEm+xFWG0vFrZhKqf35U3llAJhC/e7OCId7E88D8oRoJ++xRedX+e
      iFVM+XilhKMJdh1vect1dF2ns7OTnJycEb/5Q/JdQXb2pb3nycnJueQOM2OiCaioqIh77733
      vOW33HJL6vO6deuu6D73HG8l4u9BRkNDIT7OZlBSSpYRTS/HNlBHdM9vcNz6cySTlarT3Tjt
      ZuaUiRvEaDvR5CU/y0lu5ls/XTa099HVF2Tdogs05elxMnZ+i7R4PQZQ534funF+WmBh+BiG
      gdfrJT09HYdjZPKFDbZ2DHeX7zERAEaLzQgjoxPHSkyywRhLt69q+kWbvSRJ4rj7TpYM/ASa
      thN65DZM064H9wdBpAMbE7x9IdIcb19b3F/dRpH7nCdQA6JxFXNigNj2/0T31aNJFg5n3k6D
      bRFEVDRNzA8xEgzDoKenB4vFMqR5+q3Wf/rpp1m3bh1ut5uDBw+ydOnSy9rn6dOnOXXqFJIk
      sXLlSpzOd9c8XVNTg8fjwTAM4vE4a9eu5YUXXiA9PX1iBwCLFkQCVMmSHEQzxq6nN2o7ycm8
      eI2jyTQbJedDLOzZjORvJ1H5CBk5Legrv4VhGGLA2CgKhGN0+AJMnZQ1ZPnxhi7mledjMV+k
      Fm8Y5HpepOZP1ayIVKEa/RhAddp11LnP9vU/Uu/B549Q6B77TZfjlWEY9Pf3o+t6qm/+pUhL
      S6OyspLrr78+lbfH6/Vy6tQpJk+ejNPpxGazoSgKbW1tTJ8+nZaWFkpKSlIzeG3YsCG1vaam
      JlpbW5k0aRLl5eV0dnZSV1dHSUkJpaWlHDlyBFVVWbJkCT09PZw6dYqioiKmTZuGJEnMnDmT
      mTNn0tDQQDweR9d18vLyWLFixdh4BzBarOoAAAnZgT5OD0Wj+2aezn+A4PR/ASSKel7D/tIX
      0MR0kqMqFE2c92IxK1RL6NjfUP2e839BjaJ5q7HV/IX57f+XmeHdpBv9RE0ZeBd8g/2u20eo
      5MKgYDBIJBIhLy/vsipTFouF3Nxc2tvbgWQgqaysZMWKFdTV1aVu8o2NjZw4cQJd16mrq0OS
      JCKRCFlZWalBZJIkkZWVxfLly6mvrycej3P48GGuueYa3G43J06coKCggPLycg4fPkxlZSXL
      ly8nL29oE7BhGJw6dYqKiqHzRUzoJ4DBADBWpoK8kE5fkIQ6NHFUVZOX146cRgIcVjP9pny4
      ej3WojJiuzbhjtQTeeYz2Db8CPOMm0an4EKKYRgkTjzNysbvJ/vTb/4T4dyZGOFeek0F5ClL
      mVv/OOEDPWAYSBg0mWbS65xJT9EGZpVXoPc0jPafMeHIsjxkYvbLMXfuXF555RVMJhO6rtPT
      08OBAweQZRmXy5VKBzF9+nROnDhBUVFyGliz2Uwkcjbjq67rHD58GJfLRSQSQdM0Fi1axK5d
      u3A6nYTDYfx+PyaTCZfLxeLFi9m7dy8Wi4UVK1akttPS0kJxcfF500qOz2rvFTI4GfxYTQMB
      0NDeSzwxNABounHeMpAwL/oo7Vf/jDbTNAxdJbrtu0Rf/ynRVx5A66kbuUJPcB09AXafaAEM
      jP4WfNv+k9irG5EwSMg2iAXQ2g6i9zaQ6d3N6s5fkq560SUFMIiYs9mR9UmOpN1K3JQx2n/O
      e4ZhGJz29F9yV1yn05kal3O5TCYTZWVlNDc3oygKOTk55ObmkpWVhclkwmq1ous6ZWVl7Nmz
      h/LycgCsViuyLHPkyBGOHz9OKBQiGAzidrtTGRJ6enqYNm0avb29qZt6bm4uLpeLnp4eysvL
      6e8/O33sYIbSOXPmpJZ1d3dz/Pjxif0E4Ih3AxA2545ySd4dTdfpC0Qoykmjz1nBG/lf4fbe
      n5EZaSJR+QgAauN2nB99Bsl+ZZPpCefTdJ1YTGVGeA+Zzz+OYsQxgE7XInZlfpxFzjbmTrJT
      3R4kr+kvOONd9NnLaZn7DeYVu9h9speo3zaxL85hsudEK0Vr07DIw9eTavCl7/Tp01Pz/K5f
      v56uri7cbjdWq5WrrroKSA52veuuu1JdSwcHknk8yWZCp9PJqlWrCAQCbNiwAZvNxpQpU/B6
      vaxevRqn00lWVhbRaJSCggKi0Sher5c1a9aknlwMw2DVqlWp2r/NZmP58uWYTKaJfY7ZEz0A
      hMdRn+qegTBNnX1DlkXjKlWnu5kzJfl3aLKVA6Xf4Ia+35PwNSEbKqagl9ieX2Fd/20kaUI/
      +A0rnz+MphmkR1tY0f8EihEnZJtEY9Z1HJBXoigm/IXrsCwoozVcy8t95RSYBkikTWaSLZOA
      I5eAIgHJ9wcJVSMUEeM6Lpe3L0Srd4AlM4pGdL+SJKVG68qynHp5bLFYKCkpSa13bnfSN/fv
      HxwAOygrK4usrLOdCdLS0khLO/vy/9wX1C6XK7X/QbIsD1l/sGkLJnQTkJF6AoiYL/0N/2iL
      JTRC0QvfEMLRBAk1OdAoJGfAbQ+zZ+HviS/9MgCJ408R2/EzDHVs52QZz7YfPk04GmOW5wlM
      Roxo1iyaVz1Ek3tDqqOBtz/E8cYudN0gmJAZsBanvqs67SUYOZsMcSAUo6alZ1T+lvEsllDp
      C148U2dC1QhFz0m/bugUtT1DXtMTGNrECbgT9glA0WNYND8GELbkwThPqqkbBvur22jzJt9r
      9AUiVDX70CUz2rRbiPecwFy/lUTlo+jeamw3/hA5vfBttiq8Exm9h0gLHkVHojr3TqwmK4M1
      eoBwLIHH987TQggX1+kLEI4mLt7N9oyOngCNnX2pwXe2gTpcjf8fGDrRyGmMRBgUK/abf4pk
      tlHX5iPNYaUg2/WW2x1vJuQTQK8/QsCb7EWjSRZi74EXbQPBKIfrLtC9EHh2bx2/672e6oIP
      o0smtLaDRP7+5QlV07lSDMMYcuPWdQNV03njVAe6YZAdqsGx9z+QgBplIS2mmRfczvEmLz0D
      4SHLOn1BBkLi6ezdGAjG6O4/e1zr2ny8caqD7v4QhhbHFW3DCA69TiRDpWhgb2rebbX+ZbTm
      PWiNr6HWvQgkm5T878H/NxPyCSAQjhH3JXN/JExpZ2YDu7Q5OseTXn+EvkDyMdiQFBpybyO7
      fAkFB76D3lVFbPeDRBZ+noFwgrKCd/ZyuKrJS0WJG7PpwjWu7v4QsYRGce7Y7Wl1OU57+mnu
      GuDahWVA8qVifyiKPxRjnqOdRY0/RUkECFoK2OW8i0xVp7XLf0nb7hkIk+kaXylJxro2r59+
      TxMZ3l70o79mXcJHvF7BUrqBcn834QYZxWRlas/ryV8oXYPJkYneXYPeU0vi+NO0uZbSH4y+
      bUqP8WhCBgCATD3Z/h+SM9FlM+/VANAbiOC0nU0NIZcswyJ/jviuX5B444+E2hrxTvsEZQXL
      Lnv7Vae9vHSogSmFWRcNAD0DYVq6BpCAomw7SDIJHZo9/Uwvdr/TP+2KCEcTPLevlgVTspma
      oSKZrEjOHCRJpqmzj1hcY2bp2fdD/7P9GHMKbTg6DxBTX0OSTRS0tpHRWU227iV2shtFi9Gl
      lPBG8VeJBWzEExot3gHys957N4+xztsXItZ1itt8P8N8ZtS/gQSGhuv0cwBovcl1DWRitnz6
      Z/8b02fOQm1/g8jT/wutoxL/679goPDjo/eHDKMJGwCyjOSLtT55dG9CI0nTdTy9QcqXfAJi
      fuKH/puMrh2k9+wnVFOCMmkxcu4sahPFWLNLmD6lOPW73r4QVae9QxKWGUbyX+pnLQHxEN1h
      sNpsZDhtmPQorqatSMf3EFK7QbGgu2cSjOVSV7oITbJQkp+JVUpgxMOo+YvpiZmxWUxYzAoZ
      zitTIx4IRYklNPLO1OI8vQGUWD8F3ldxnfw74UQXyCaUvFnIcz7AG21udN2gIqMMtXk3au0L
      rPHUYj6eoFCNED+TgDX/nH0YgM82lV25n0c1uTm33V8YBYbB1cEtWLTktK9RUxa7y7/L1ekt
      hGpeps/IoCzPhaW3mqb0lWhzPkx9Z4iw2cP88sVYrvok8f2/p3BgP7W5/4ysn20C8odjRGKJ
      1Pk0Xo2ZAKDrOt3d3bhcrlTyo1gshsViQZKk1KxCJtOVKXKWngwA/dL46QH0bqmaTlVTNwVZ
      LnIWfp5jvizK2/9CWqwd3VeP7kum2y4FdFs2kdKrkTNLwOwg2lxLWaCLSIcb2T0d88ybcfhb
      Wej/B91bnyEnwwadh9GDXlRzAU2F76PEGaOg7RUKepOD0AYTIUuBTqYBdD6ZWj449lGzZmKy
      5BF0lmJ1ZWJzuxloOY7LbqFPTyPdpmBJcyOlF6GbHFSdrCbdlCDL8OG0mZAcbuTsqcTc83Dl
      TgZZAUnC4wvQ1+8n11VMpOMk+q7/F1tPJQu1yJkyKEh6LJleu+Mw12FCAkKnzvYOSD5HScRk
      J7griMTioFhp0/LwKQWYMyZxKj4Js9ku0vGNASV925kUPoyGTHXWLfTkrCJszcdXMp+jsaV4
      eoO05WQxe0kuDU1eSmULqhYgoSYrSnXGUhbye2yJPq6t+waW0yb8y+/FmHYz3X1+PP0x8rNc
      F8zcebqzn9OdPaycW4zZMnab9cZMAHjyySdxOBx0dnZy4403UlZps0pLAAAgAElEQVRWxubN
      m7n77rsB+O///m/uvPPO1MCKd0NCJ13zAeCTx88YgCshoWps2X2KKYWZtGuzOVH4PQr0NvJi
      dZQoXbj8p1CCHcjRXtRT/0j93mAvZLUf4EXie39DLpALEAC9/ew+0hKNzG54MPWzJlk46VxD
      T9oC0sw6SzM8eBuP4Yi2YyYBuoZstmGoUcyxflyxflyBWgDi9TD4hmbwLcI5nfc4N7PJ0I5c
      EkGTDcmWBiY7BSjk+TsJ7jJDPEjamRd+MSWdOstCPJPvZHIGzAnvIFH/MqZoMk2IjkzclEGD
      Yylt1rkoaXm0RV2sXz6bHUeayUq3090XQtV18lxO1L6QuPmPAend+1jQ/jAScDptBZXpt5Nl
      S1Ys+4PR1Iv8cDRBQjvb/BuKxGnpGmD/yTayXTYqLHk4415saj+ooL2+kcjBR3DHe3FlVhB1
      fgr9yKNIrjxsa79JSDXRHYgT8nVSsuebRA8EUIuXYJp5C+Zp143GoXhLYyIA+Hw+JEnife97
      H8FgkC1btlBaWpr6/sUXX2Tp0qWXPCHC21H0GFY1OZhqQM5mIs6rFImpxFUNq1mhzz6VE6Fc
      ijLSkF0GDjmGresAxUYLOXI/4VCAiCWPHtVFvkNnUuwklmAruqTgM08m4CilIMtJayyDDqOQ
      soHXydE6CGMn4Z5LveNq6iPZuOwWYmk2WDadfUYNXX0BCrKcdPUGWTFvMgM9Hqy+Y6gBL85o
      J/kOFVmL0RFzYrI50aIh7FYzxc4Yam8T0bhKWEpDsbrwGZlMLnDT39NJWuAU6VoPshrBCCZr
      +PKZf8QiGEC7uYLTBbfTJE0jpsnkmZ0M2NNoL1tEvesuGmprcLmcxLGSm5dHY6cfk0km3Wol
      EYtQfbqH3kAEh03c7kdbdXM3JkWmJDcDRY/ibHkBpflRDAyabQs4VvSvGFEjlVPrcK0Hl33o
      VR9PaETjKk2efuxWM7GEhiEpaBV3oFX/iba05aSHaslKdOAKNQFg6j5IfOtBBuv9wZp/oBsG
      upRHIQNY9BAkQK17CbXhVbRFH8W67DNItvM7RAQjcSwm5W27r15pYyIAdHd3U1JSgiRJOJ1O
      tDMROR6Ps2PHDgKBADfddNMVS2/sjHlQ9CgaMr1SHgVXZKvjn6rphKIJTJlOOl1Xc5qryUqz
      0zMQxmW30NUbZGpRNo6KPPp7PDR7A7T6ZawWM1lpNnx6BJNJpkGuID/TTvdABFmWybTYIJLs
      mtfRE2B/dRvBaAIDGUNS0CWFQ7VdWM0mOoMV5GQsJGxLtq/2DISRXRIZTis+f4RMl42u3HSk
      MoOalh7iqkF+lpOuvhBp86ZytL6L5s4eCpwGpnAX10zPpL21mWiwHy29jP5QHMOZR6PfSokr
      Cy0cY7Bx6ki9h1OtPVhMCn1yLpLJTiSmYo+e30GgLxhB1c6f3UsYWbpu0NUXoqMnQDSWoPzo
      f6A178QAImY32zPvwSWZgTg+f7IyYLlAh4UOX+CCs7WZFt/DG65raevXYKCZm6Xn6ehPkD3n
      eixHHsaR6EaTTEhISHoCCcgzOgCIKBnEZ34QrWkH2eFaEm/8EbX+FWzrvoWcPwfJnp26px2o
      bmfapGwm549sl/QxEQAuZvDgaNqV66Hj7QsRrNtHLtAr5xOVRmaGn/cKwzCIJGBnfZiC7AwM
      ki/YIjGV/mA0NX+BgQycH7AHQjFavf4LJLO7NJqms/dkG5PzMkjW6c9up76tl4SqoaMQUxz0
      WexEcstp9U+iT4qQ7rDiUyOkWSzoBN7R/oWxJRCOUVnbyTRHH+bKv6K37UKSFQKTrueg7Xri
      4beeLyGe0Khv673o9z2BGEdbQ2Sn24k6immf/X1erWzi+sJy6vxFmL2HUbLLmVZeyv4jNbjT
      rQy01ZBTUEx9vJC1FfNpT7uB8t6XyGrYjGWglcjfvgBmB7YbN2Kaci2SafTaIMbEQLC8vDxa
      W1sBCIVCqaRFZrOZNWvWkJuby+7du6/IvgZCUeJtlQD4bNPQRV6cyxJXNXYcax7tYlxQR0/g
      vFr50YYuuvtFb5z3srLYMVbXf5tJbc8ABp6slbzg+CjdQ/poXZiq6XT6gpe9zx1HmwlImdQ7
      rmbAUY7qKqLHUkq/fSonzMvwuhYQlZPvHCSTjbZJ7+e18o00KTOSG0iEif79q4T++2Ziex/C
      EmpDTgQxdA3DMDhR24IWu/xyXa4x8QQwmOho69atqZfAg5MhAFx//fU8+uijFBcXU1ZW9q72
      ZdZCZAWrMIBu11wQg2EFYVwZCEUZCMYwDB1Xywus9/0exYjjk/LoyVvLXnkN5oSGSXl3lTt/
      KMbeqrZ3tY1dx1rIz3aRaVYImXJ40vEFFhcprGj+MY5oOwQ9xPc9xHxAekMhKCtIFhclkQHC
      ZiuWqz6FZfHHAINdVZ0UF+QwpTDr7Xb7ljp6AlgtCu50x9gIAJIk8YEPfIDu7m6cTmcqc91d
      d92FLMtIksTdd9+NfoE2usvV/cYW3JqfhOzAm7YQekUEEITxYiAY5VRLN4meRkrbN2Py7EJC
      p9sxk8ekjzMlt4zEleyJdQnpmlRNx3ORpwgDiMZUfFr47M8WNx3X/p7mpgamhPZT2Pl3bFoQ
      DA1J0zAivcmmmUSY+N7fEq98BAyd2bqCyZFJyGoHSUHOKEYpWYapbDVSeuElZ/lt6Rog02Ub
      OwEAQFGUVIrSQVarNfX53fb/NwyD8M4HqWhN5sevc606kwJCBABBGMsMwwBdxdPlRes6gfvQ
      H8kJViGjYyBxynY1DaX/i0jr8DeZXEhc1aht8130+0AkRiAcx51uP7tQseDTM+l3bWBX3nLc
      Ng2rHiLdLtPr8xGR01gQ382U/teQYsn3VRYAvz81nkb3nkSte4mYYkbOnoqcNQXJkY2uq3T2
      RZmUoRAf8GCEelCMOJLJipw3i0n+ODaiRKqdYycADDs1SqLyERQjQZ99GgccN2N/+98SBGGE
      GYkI8UN/QB9ox4gFUEO9yLE+7AMeZCN+JqUD9JqLqcr9AKeYRa5sB0YnALxbcdlO2GylX82k
      YSCOxZaHARzP+QSV9htIl8NIkkE8EibfGqLb18ckt4sSoxmH7zC2WHcyd1F3TWqbeUCiNdkN
      Y/B4GYDefYrBrF8qIBmGMeQhp7u7m1hsfGS9i8ViQ54SBEEYe2KxGJIkpWa9EsaO8wLAeOL3
      +0lPf29kmRSE96qBgYHzZqUSxgbRB1IQBGGCEgFAEARhghIBQBAEYYISAUAQBGGCEgFAEARh
      ghIBQBAEYYISAUAQBGGCEgFAEARhghIBQBAEYYISAUAQBGGCEgFAEARhghIBYJjEG5vQx0lS
      PUEQJiYRAIZJ9ORJjGh0tIshCIJwUSIACIIgTFAiAAiCIExQIgAIgiBMUCIACIIgTFAiAAiC
      IExQIgAIgiBMUCIACIIgTFAiAAiCIExQIgAIgiBMUCIACIIgTFAiAAiCIExQIgAIgiBMUCIA
      CIIgTFAiAAiCIExQIgAIgiBMUCIACIIgTFAiAAiCIExQIgAIgiBMUCIACIIgTFAiAAiCIExQ
      IgAIgiBMUCIACIIgTFAiAAiCIExQIgAIgiBMUKbh3oFhGAQCAcxmM3a7HYCBgQHi8TgAdrsd
      l8uFpmm0t7djsVjIz89HkiR0Xae9vR1FUSgsLESSpOEuriAIwoQxrAFA0zReeuklKisrufPO
      O5k5cyaGYfDEE09QVlYGQGlpKbNmzeK5555DURQCgQDl5eUsW7aMbdu2EY1GicfjFBYWsmrV
      quEsriAIwoQyrAFA13WmT59OVlZWapmmaTgcDm688cZUjT4ej9PT08MnP/lJNE3jj3/8I4sW
      LaKtrY1PfepTAPzXf/0X11xzDYqiDGeRBUEQJoxhDQBms5lp06bh8/lSy2KxGB6Ph7/+9a9k
      ZWWxatUqgsEgeXl5SJKEyWRKPQm43e5UkHA4HKiqiiRJaJoGgKqqqaaksUbTNBKJBNoYLZ8g
      jJTB63asXqsT2bC/A3gzh8PBl770JQzDoLa2lmeffZb169ej63pqHUmSkGV5yLLB5YNBAkBR
      lNTnkRLZfwD7ksXwNvtVZBmTyYQ8wuUThLFGURTkM9eDMLaM+P+RWCyG2WxGURQqKio4cuQI
      mZmZdHV1oet6stasabhcLnw+H7quYxgG4XAYk8k05EXwYKAYSWpbGyxe9Pb7PROsRrp8gjDW
      SOJaGLOGNQB4vV62b99OZ2cnVquVhoYGFi5cyHPPPYfb7aa7u5vVq1djMpmYNm0af/7zn4lE
      Iqlls2fP5pFHHiGRSLB8+XJxAgmCIFxBkmEYxnBt/K02HQwGsdvtKIqCJEmpWr6iKFit1tSy
      SCSCJEnYbLbzuoH6/X7S09OHq/gXNPDXp0i77X3IVutbruf/+3M4V69CycgYoZIJwtg0MDCA
      LMukpaWNdlGENxnWJ4C36rf/5pNBkiScTud5yxwOx7CUTRAEYaITbSqCIAgTlAgAgiAIE5QI
      AIIgCBOUCACCIAgTlBiZMUZpmvaWvaiE4SNJkkg5IkwIIgCMUW8eBS0IgnClvaMmIMMwRO1U
      EARhnHtHAaDyWDVvHD0pgoAgCMI4dtlNQIZh0OHx8srO/RiGwVUL54iJWgRBEMahSw4AmqbR
      1NJOa7uHba/vRVVVHt28BUAEAUEQhHHokgNAKBzlyS0v0t7pxTD0M7X/uQSCoeEsnyAIgjBM
      LvkdQHqak7vvvAVI9lBZt2oZH7vrfaxfvVzU/kfAnj172Lx5M7qu82//9m8cOHCA/v5+Nm7c
      CMD27dt5//vfT0dHB9XV1fzmN78BwOPx8MMf/pDjx49zzz338NWvfpWf/OQnqe36fD5++tOf
      8p//+Z+pZfF4nE9+8pN85Stf4d///d/p7e3lgQce4Mtf/jJf/epX2b9/PwCPPPII99xzD5FI
      BMMw+M53vkMikWDz5s0899xzI3h0BEF4Jy45AESjMXbsfYN/+/RHKMjLYXp5qUjPPIJKS0s5
      duwYwWAQSZI4duwYDQ0N5OXlAbBr1y5uu+029u3bx/Tp0zl27BiJRIJ9+/YxZ84cEokEK1as
      YNOmTdx3332p7XZ0dDB37lyi0WhqmWEYuFwuNm3axNy5c9m9ezd+v58f/OAHbNq0ieXLl2MY
      BseOHWPx4sXU1NQAyayPLS0t7Nu3jxtuuGFkD5AgCJftku/g3b4+br9pHTOnT+HLn/04s6aX
      D2e5hDcpKCigr6+P48ePc8MNN9DW1kZVVRXz5s0jkUjg9Xq58cYbOXDgACaTicmTJ9Pa2sqh
      Q4dYvnw5AK+88gr33Xcfv/3tb1PbnTdvHgsXLjxvf8FgkFdeeYWDBw8yadIkAL773e9y3333
      cfz4cTweDy6Xi9WrV7Nz504AwuEw3/jGN7jrrruwWCwjcFQEQXg3LvkdQMmkgtTnzAyR13uk
      KYpCYWEhL7/8Mvfccw/Hjx+nqqqKm2++mcOHD9PT08Ovf/1r6urq6O/vZ/Xq1bz00ktEo1Hy
      8/Pp6Ojguuuu47Of/ewl7U/XdeLxOJ///OeZPn06jz/+ON///vdTabyffPJJ2tvb2bx5Mx6P
      B03TcDgcfO5zn+Ovf/0rS5cuFVMACsIYJ9pwxpE5c+Zw+PBhJk+eTFFREV6vF7fbzY4dO/j2
      t7/ND3/4Q+644w4OHTrEkiVLeOGFF1i4cGHqHc2uXbvYuHEjv/vd71Lb3L59Ow8//DBVVVX8
      4Q9/SI1ATk9P56abbqKioiL1+z/72c/YuHEjlZWV7Nu3j5///Of8+Mc/pqKigoaGBiRJYsGC
      BZSXl/O3v/1t5A+QIAiX5bJnBDMMg1AohNPppL29HU3TmDx58qi8CH4vzwiWSCTOWxaPx4lE
      ImRkZBCLxYjH46SlpREIBHA6nciyTDweR9M07HY7Ho+HjIwM7HY7iUSCQCAAJJ8mMs6UKxwO
      p9r/FUVJHc9gMIjL5Ur9fw0EAqkyORwO4vF4at1IJIKiKMRiMVwuF5qmEYlExu0MUJIkiaeX
      K0jMCDZ2XfZZ3tLSwjPPPMOHP/xhvvvd72K1WvnmN79JWVnZMBRPOJfFYkm1rVutVqxngtC5
      F9a5be8FBWeb7cxmM9nZ2edt0+FwXHDWtTdfrG/+2WazpT7b7fYh+zaZTOJiF4Rx4LIDQGdn
      J0VFRezZs4f3v//92Gw2qqurRQAQBEEYZy77HUBFRQUvvPACf/vb37jmmms4duwYU6dOHY6y
      CSNI0zReeumlC36n6/qQvE8ej4fDhw+nvnvzds5d982/K9JcC8LYcdlPANnZ2fz6179O9RX/
      0Ic+RGFh4XCUTThHLBbjueeeIzMzE5PJxIoVK85rp+7o6CArKyvVJPNWTp06xfe+9z2++93v
      MnPmTI4ePUo4HKa+vp6HH36YDRs2cO2117Jp0yZOnz6NLMts3LiRtLQ0tm3bxuzZs/n3f/93
      BgYGKC4u5pvf/CZPP/00O3bsIDc3l69//ev87Gc/o7u7m4yMDL7zne+wc+dO/ud//oe0tDTu
      v/9+nE7ncB0uQRAuwWU/AYRCIX7zm9/wgx/8gPvuu49f/vKXNDY2DkfZhHMYhkFeXh7r16+n
      vLycw4cPEwwG2b17N7t27cLv97N371727NlDc3MzsViMvXv3cuDAAVRVpba2llgsBiRr4Y8+
      +iizZ88mHo9jGAavv/46a9eupa6ujkmTJqWW33jjjTz44INMnjyZuro6NE3j9OnTlJeX89nP
      fpZf/epXdHR00Nvby8svv8wvfvELMjIyOHbsGP/yL//Cr371KzRNw+Px8PTTT7Np0ybmzZuX
      GjsgCMLouewngMrKSnRd54tf/GJqWX5+/hUt1ESXSCQwDOOiPauKi4upqanBbDazePFifD4f
      NTU1TJkyhdLSUrKysti/fz+zZs0iGAxSU1NDcXFx6onh1VdfZcGCBfT09ADJ3kXhcJjMzExu
      uummVK8gWZaZNWsWjz32GF6vl7lz59LQ0MCUKVPIysrCbDbzox/9iDlzkskA3W43ZrOZqVOn
      0t3dzZIlS/j1r39NZmYmOTk5qRfX06ZNo6qqamQOpiAIF3XZAWDGjBkcOHCA0tLS4SjPhBaP
      x/H5fOi6Tk5OzkUDQCgUwmKx0NraSmtrKxkZGcTjccxmM7IsI8syAwMDVFVVIUkS+fn5ZGZm
      AqCqKk899RQFBQXU19fj8Xi48cYbueqqqy64v02bNpGTk8MPf/hDFEXh9ddfZ8OGDSQSCe67
      7z7uuusu1qxZQzQaxe/3YxgGvb29lJSUcP/997NixQpuvfVWVFVNPYH09vamuqEKgjB6LjkA
      9Pb28vWvfx2Avr6+ITW4b37zm8ycOfPKl26CSCQS+Hw+EokEbrcbu92Oqqrnref1eqmsrMTj
      8bB69Wpqa2tTYwIgOXirqqqKiooKJk+ezMDAAC6XC4vFwokTJ5g2bRpWq5UHH3wQwzB4+OGH
      WblyJa+++iqf+9znAHj88cdT6STi8Tg7duxgzZo1/OIXv+CWW27B4/EwadIkjhw5gtfr5eDB
      g1RWVvKpT32KwsJCfv7zn9PQ0MCSJUuoqqoiJyeHTZs28dGPfpT58+fzox/9iObmZr73ve+N
      5CEWBOECLnkgmGEYRKNRdF1H1/VUc4KqqthsNsxm87AW9ELG+0AwTdPo7e0lGo2SnZ2Nw+FI
      1cLfPBDMMAwGBgaQJAmn04nJZELTNLq6usjIyEBRFKxWK93d3TgcDpxOJ/39/WiaRnZ2NtFo
      FJvNNiSBn9/vJ5FI8Ic//IFvfOMbQDLIDO7bbrcTjUZTvXba2tpoa2vjzjvvJBKJ0NvbCyQH
      TuXl5aHrOk1NTRQUFGC32+nu7k7tKzc3F0VRaGhowO1243a7L/WQjzgxEOzKEgPBxq5LPssl
      ScJut1NTU8OBAwf4+Mc/DsDWrVvJyspi9erVw1bI9xpd1+nr6yMSiZCVlfWWzT2DJElKNeMM
      UhSFoqKiIcsGs4MCZGVlpT5faLBXeno6J0+e5Nprr73g77/ZkSNHWLt2LZAMDoNJ4s41Y8aM
      1OcLfV9RUXHR7QuCMLIuq5pTU1PDyy+/TENDAy6XC8MwePHFF7n33nuHq3zvKYM3/lAoRHZ2
      NtnZ2aM+l8Ls2bMved1bbrllGEsiCMJIu6wAYBhG6p+u60iSxGc+8xnmzZs3XOV7T9B1nf7+
      fgKBAJmZmZSUlIz6jV8QBOGyAsCsWbMoKyvD7/eTlpaWahvWdR1FUYalgOPZYLv9wMAA6enp
      lJSUvONJdAb738uynGpjfzuDo3RlWaahoYHy8vK3DDynT58mHo8DyQF/drud9vZ2nE4n+fn5
      Q9rFDcOgsbGR4uLiVE6iyzV4fLq6uoY0HRmGwalTp2hra2PFihXY7Xaampqorq5m3rx5TJ48
      GZ/Px8GDBykoKGDBggUioArCO3DZdyNN0/j+97/PPffcw7333svHPvYx6uvrh6Ns41rU5aTj
      TJfO4uJiMjMz39UMaolEgtraWgzD4NVXX0314dd1PZVeYfDJbDD9QnNzM+3t7ei6Tltb23nr
      vjktg91ux+l04vP58Hg8dHR0EAgEGBgY4Pnnnx+S9iGRSHDo0CFqa2sBUtt581Pim1NBDH4H
      cOjQIb785S+zZcuWIX9rY2Mjv/3tb+ns7GTTpk3U19fzy1/+EpPJRGtrK5FIhPvvv594PE5r
      a+s7PqaCMNFddleHY8eOsWTJEmw2G2vXrmXbtm1DMkMKSUpCpSg3F9MV7KWUlpZGeXk5xcXF
      7Nq1i3nz5qVy8syfP59AIIDH46G/v58bb7yR6upqdF0nEokQDAbZuXMnvb29rF+/nlOnThGJ
      RHA6nSxduhRIDugbnOpx2bJlNDY2kpOTQ2lpKYqipEYAA9TX17Ny5UpOnjzJ3Llz2bFjB6tW
      rcLv99PS0oLFYqG9vZ1EIsGcOXOYPHkykBxIOHPmTJxOJ9OmTeP//J//c97cAQcOHOCOO+5g
      3bp13HvvvWzbto158+YRCoVYvHgxVVVVZGVloarqZb3DEARhqMuukqalpZFIJMjLy+Po0aPI
      spyaE1Y4yxyLIQ1T0jOz2Yyu69TU1FBYWMjkyZM5efIkbrcbh8ORGow1Y8YM5s+fT0VFBS6X
      izVr1qQChaqqOJ1Opk+fPmTbra2tFBUVndek53K5UuMNBpt/JEkiFosRDocpKSmhsbGR2tpa
      ysrKaG9v57rrrmPWrFlompbazuLFi1M9krKysi74VBSNRlNdYiVJwu/3I0kSVquV//iP/8Dv
      96PrOtnZ2fz4xz8mFApd6UMsCBPCZQeAWbNmMWfOHFauXMnRo0dpbm5mxYoVw1G2caHDP8Av
      d79OVZdnRPY32D5eUFCAyWTC6XSSk5PDokWLOHjwILNmzUrVtmVZvuCAMoClS5cybdo0du3a
      lbpBG4ZBdXU1s2bNGrKuqqqcPHmS4uJiIJmYTpZlwuEwhYWFNDY2UlpaSmtrK6FQiPT0dDRN
      IxaLpW7Og7mFzi1PPB4nGo2iqirRaJRwOEx7eztTpkyhsrKSrq4uINm11G63s3LlSlRVpbS0
      FEmSWLZsGTk5OUMmtBcE4dIp37vMIZmyLJOZmckbb7zBunXrmDJlCsXFxaPyEi4Wi73jF5Dv
      eJ8nT2KdMQPpzAvR7Y0NnPR6iKoqi4qKz65XW4eldDLyO2wee3Oa5cEbf3t7OyaTiblz55Kd
      nU1VVRU9PT3YbDYkSaKxsZFQKERJSQmZmZlUVlaSSCSw2Wzk5eURj8exWq3U19fT3NxMWlpa
      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
      N4P/CJTWBq8EAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
