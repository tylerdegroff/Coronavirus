<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook source-build='2020.3.2 (20203.20.1018.2303)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='4.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='data.state' name='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.7dsma' ordinal='12' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='fips' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='county' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
              <column datatype='integer' name='population' ordinal='6' />
              <column datatype='real' name='cases.percap' ordinal='7' />
              <column datatype='real' name='deaths.percap' ordinal='8' />
              <column datatype='string' name='countyState' ordinal='9' />
              <column datatype='integer' name='cases.new' ordinal='10' />
              <column datatype='integer' name='deaths.new' ordinal='11' />
              <column datatype='string' name='cases.new.7dsma' ordinal='12' />
              <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr' name='data.state.csv' table='[data.state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='dateState' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='cases' ordinal='3' />
              <column datatype='integer' name='deaths' ordinal='4' />
              <column datatype='integer' name='pop' ordinal='5' />
              <column datatype='real' name='cases.perCap' ordinal='6' />
              <column datatype='real' name='deaths.perCap' ordinal='7' />
              <column datatype='integer' name='cases.new' ordinal='8' />
              <column datatype='integer' name='deaths.new' ordinal='9' />
              <column datatype='real' name='cases.new.perCap' ordinal='10' />
              <column datatype='real' name='deaths.new.perCap' ordinal='11' />
              <column datatype='real' name='cases.new.perM' ordinal='12' />
              <column datatype='real' name='deaths.new.perM' ordinal='13' />
              <column datatype='real' name='cases.new.7dsma' ordinal='14' />
              <column datatype='real' name='deaths.new.7dsma' ordinal='15' />
              <column datatype='real' name='cases.new.perCap.7dsma' ordinal='16' />
              <column datatype='real' name='deaths.new.perCap.7dsma' ordinal='17' />
              <column datatype='real' name='cases.new.perM.7dsma' ordinal='18' />
              <column datatype='real' name='deaths.new.perM.7dsma' ordinal='19' />
              <column datatype='integer' name='cases.active' ordinal='20' />
              <column datatype='real' name='cases.active.perCap' ordinal='21' />
              <column datatype='real' name='cases.active.perM' ordinal='22' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases (data.state.csv)]' value='[data.state.csv].[cases]' />
          <map key='[cases.active.perCap]' value='[data.state.csv].[cases.active.perCap]' />
          <map key='[cases.active.perM]' value='[data.state.csv].[cases.active.perM]' />
          <map key='[cases.active]' value='[data.state.csv].[cases.active]' />
          <map key='[cases.new (data.state.csv)]' value='[data.state.csv].[cases.new]' />
          <map key='[cases.new.7dsma (data.state.csv)]' value='[data.state.csv].[cases.new.7dsma]' />
          <map key='[cases.new.7dsma]' value='[data.csv].[cases.new.7dsma]' />
          <map key='[cases.new.perCap.7dsma]' value='[data.state.csv].[cases.new.perCap.7dsma]' />
          <map key='[cases.new.perCap]' value='[data.state.csv].[cases.new.perCap]' />
          <map key='[cases.new.perM.7dsma]' value='[data.state.csv].[cases.new.perM.7dsma]' />
          <map key='[cases.new.perM]' value='[data.state.csv].[cases.new.perM]' />
          <map key='[cases.new]' value='[data.csv].[cases.new]' />
          <map key='[cases.perCap]' value='[data.state.csv].[cases.perCap]' />
          <map key='[cases.percap]' value='[data.csv].[cases.percap]' />
          <map key='[cases]' value='[data.csv].[cases]' />
          <map key='[countyState]' value='[data.csv].[countyState]' />
          <map key='[county]' value='[data.csv].[county]' />
          <map key='[date (data.state.csv)]' value='[data.state.csv].[date]' />
          <map key='[dateState]' value='[data.state.csv].[dateState]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[deaths (data.state.csv)]' value='[data.state.csv].[deaths]' />
          <map key='[deaths.new (data.state.csv)]' value='[data.state.csv].[deaths.new]' />
          <map key='[deaths.new.7dsma (data.state.csv)]' value='[data.state.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.7dsma]' value='[data.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.perCap.7dsma]' value='[data.state.csv].[deaths.new.perCap.7dsma]' />
          <map key='[deaths.new.perCap]' value='[data.state.csv].[deaths.new.perCap]' />
          <map key='[deaths.new.perM.7dsma]' value='[data.state.csv].[deaths.new.perM.7dsma]' />
          <map key='[deaths.new.perM]' value='[data.state.csv].[deaths.new.perM]' />
          <map key='[deaths.new]' value='[data.csv].[deaths.new]' />
          <map key='[deaths.perCap]' value='[data.state.csv].[deaths.perCap]' />
          <map key='[deaths.percap]' value='[data.csv].[deaths.percap]' />
          <map key='[deaths]' value='[data.csv].[deaths]' />
          <map key='[fips]' value='[data.csv].[fips]' />
          <map key='[pop]' value='[data.state.csv].[pop]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[state (data.state.csv)]' value='[data.state.csv].[state]' />
          <map key='[state]' value='[data.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyState]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>countyState</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dateState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dateState]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>dateState</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.perCap</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.perCap</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perCap</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perCap</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perM</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perM</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.7dsma (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perCap.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perCap.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perCap.7dsma</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perCap.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perCap.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perCap.7dsma</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perM.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perM.7dsma</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perM.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perM.7dsma</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.active]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.active.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active.perCap</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.active.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active.perM</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;' value='Σ Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' value='Case 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;' value='Σ Deaths' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;' value='Deaths 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='Death Rate' datatype='real' default-format='p0.00%' name='[Calculation_187532707400040448]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[deaths (data.state.csv)] / [cases (data.state.csv)]' />
      </column>
      <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY() - 1' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='County-Level' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.state.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' role='measure' type='quantitative' />
      <column caption='s_Cases Cumulative' datatype='integer' name='[cases (data.state.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
      <column datatype='integer' name='[cases.active]' role='measure' type='quantitative' />
      <column caption='s_Cases New' datatype='integer' name='[cases.new (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[cases.new.perCap.7dsma]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[cases.new.perCap]' role='measure' type='quantitative' />
      <column datatype='real' name='[cases.new.perM.7dsma]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='s_Cases per Capita' datatype='real' name='[cases.perCap]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County and State' datatype='string' name='[countyState]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
      </column>
      <column caption='s_Date' datatype='date' name='[date (data.state.csv)]' role='dimension' type='ordinal' />
      <column caption='s_Date, State' datatype='string' name='[dateState]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='s_Deaths Cumulative' datatype='integer' name='[deaths (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='s_Deaths New' datatype='integer' name='[deaths.new (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='s_Deaths per Capita' datatype='real' name='[deaths.perCap]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' hidden='true' name='[fips]' role='measure' type='quantitative' />
      <column caption='s_Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='s_State' datatype='string' name='[state (data.state.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_187532707400040448]' derivation='Sum' name='[sum:Calculation_187532707400040448:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases (data.state.csv)]' derivation='Sum' name='[sum:cases (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.active]' derivation='Sum' name='[sum:cases.active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new (data.state.csv)]' derivation='Sum' name='[sum:cases.new (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perCap.7dsma]' derivation='Sum' name='[sum:cases.new.perCap.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perCap]' derivation='Sum' name='[sum:cases.new.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perM.7dsma]' derivation='Sum' name='[sum:cases.new.perM.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.perCap]' derivation='Sum' name='[sum:cases.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths (data.state.csv)]' derivation='Sum' name='[sum:deaths (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new (data.state.csv)]' derivation='Sum' name='[sum:deaths.new (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.perCap]' derivation='Sum' name='[sum:deaths.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pop]' derivation='Sum' name='[sum:pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County, State,Cases per Capita (bins))' hidden='true' name='[Action (County, State,Cases per Capita (bins))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
          <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),County,State)' hidden='true' name='[Action (MDY(Yesterday),County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),State)' hidden='true' name='[Action (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (cases.new.7dsma,State)' hidden='true' name='[Action (cases.new.7dsma,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cases.new.7dsma:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Contiguous USA' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[state]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Northern Mariana Islands&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Puerto Rico&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cases per Capita (bins),County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County, State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1718193694053994508:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Bins' role='dimensions'>
        <folder-item name='[Cases per Capita - County (bin)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[cases.new.7dsma]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new.7dsma]' type='field' />
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='dimensions'>
        <folder-item name='[Calculation_1718193694053994508]' type='field' />
        <folder-item name='[Calculation_204561939512385536]' type='field' />
        <folder-item name='[countyState]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='state, county' type='drillpath' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='measures'>
        <folder-item name='[Calculation_1718193694052151304]' type='field' />
        <folder-item name='[population]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='groups'>
        <folder-item name='[Continental United States]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='State-Level Fields' role='dimensions'>
        <folder-item name='[date (data.state.csv)]' type='field' />
        <folder-item name='[dateState]' type='field' />
        <folder-item name='[state (data.state.csv)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='State-Level Fields' role='measures'>
        <folder-item name='[cases (data.state.csv)]' type='field' />
        <folder-item name='[cases.new (data.state.csv)]' type='field' />
        <folder-item name='[cases.perCap]' type='field' />
        <folder-item name='[deaths (data.state.csv)]' type='field' />
        <folder-item name='[deaths.new (data.state.csv)]' type='field' />
        <folder-item name='[deaths.perCap]' type='field' />
        <folder-item name='[pop]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Bins'>
          <folder-item name='[Cases per Capita - County (bin)]' type='field' />
        </folder>
        <folder name='Cases'>
          <folder-item name='[cases.new.7dsma]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new.7dsma]' type='field' />
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
        <folder name='Metadata'>
          <folder-item name='[Calculation_1718193694052151304]' type='field' />
          <folder-item name='[Calculation_1718193694053994508]' type='field' />
          <folder-item name='[Calculation_204561939512385536]' type='field' />
          <folder-item name='[Continental United States]' type='field' />
          <folder-item name='[countyState]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[population]' type='field' />
          <folder-item name='state, county' type='drillpath' />
        </folder>
        <folder name='State-Level Fields'>
          <folder-item name='[cases (data.state.csv)]' type='field' />
          <folder-item name='[cases.new (data.state.csv)]' type='field' />
          <folder-item name='[cases.perCap]' type='field' />
          <folder-item name='[date (data.state.csv)]' type='field' />
          <folder-item name='[dateState]' type='field' />
          <folder-item name='[deaths (data.state.csv)]' type='field' />
          <folder-item name='[deaths.new (data.state.csv)]' type='field' />
          <folder-item name='[deaths.perCap]' type='field' />
          <folder-item name='[pop]' type='field' />
          <folder-item name='[state (data.state.csv)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Documents/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='11/25/2020 01:10:36 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
            <relation name='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' table='[Extract].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[cases (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases]' />
            <map key='[cases.active.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active.perCap]' />
            <map key='[cases.active.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active.perM]' />
            <map key='[cases.active]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active]' />
            <map key='[cases.new (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new]' />
            <map key='[cases.new.7dsma (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.7dsma]' />
            <map key='[cases.new.7dsma]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.new.7dsma]' />
            <map key='[cases.new.perCap.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perCap.7dsma]' />
            <map key='[cases.new.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perCap]' />
            <map key='[cases.new.perM.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perM.7dsma]' />
            <map key='[cases.new.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perM]' />
            <map key='[cases.new]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.new]' />
            <map key='[cases.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.perCap]' />
            <map key='[cases.percap]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.percap]' />
            <map key='[cases]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases]' />
            <map key='[countyState]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[countyState]' />
            <map key='[county]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[county]' />
            <map key='[date (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[date]' />
            <map key='[dateState]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[dateState]' />
            <map key='[date]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[date]' />
            <map key='[deaths (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths]' />
            <map key='[deaths.new (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new]' />
            <map key='[deaths.new.7dsma (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.7dsma]' />
            <map key='[deaths.new.7dsma]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.new.7dsma]' />
            <map key='[deaths.new.perCap.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perCap.7dsma]' />
            <map key='[deaths.new.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perCap]' />
            <map key='[deaths.new.perM.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perM.7dsma]' />
            <map key='[deaths.new.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perM]' />
            <map key='[deaths.new]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.new]' />
            <map key='[deaths.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.perCap]' />
            <map key='[deaths.percap]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.percap]' />
            <map key='[deaths]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths]' />
            <map key='[pop]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[pop]' />
            <map key='[population]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[population]' />
            <map key='[state (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[state]' />
            <map key='[state]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[state]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='757581' timestamp-start='2020-11-25 01:10:36.798' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>349</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8725</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13904</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2191</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14956</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>321950</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>85604</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyState]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>countyState</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17107</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1403</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>141</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3907</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>279</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dateState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dateState]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>dateState</remote-alias>
              <ordinal>13</ordinal>
              <family>data.state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13638</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>14</ordinal>
              <family>data.state.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>355</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>15</ordinal>
              <family>data.state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>16</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6225</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>17</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2934</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[pop]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>pop</remote-alias>
              <ordinal>18</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>547</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.perCap</remote-alias>
              <ordinal>19</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4780</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.perCap</remote-alias>
              <ordinal>20</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3725</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>21</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2213</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>22</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perCap</remote-alias>
              <ordinal>23</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4800</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perCap</remote-alias>
              <ordinal>24</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1887</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perM</remote-alias>
              <ordinal>25</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4800</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perM</remote-alias>
              <ordinal>26</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1887</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>27</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4414</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>28</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>777</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perCap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perCap.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perCap.7dsma</remote-alias>
              <ordinal>29</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6133</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perCap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perCap.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perCap.7dsma</remote-alias>
              <ordinal>30</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3004</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perM.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perM.7dsma</remote-alias>
              <ordinal>31</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6133</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perM.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perM.7dsma</remote-alias>
              <ordinal>32</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3517</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.active]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active</remote-alias>
              <ordinal>33</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4750</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active.perCap</remote-alias>
              <ordinal>34</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5894</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active.perM</remote-alias>
              <ordinal>35</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5894</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>5</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>4</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>3</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_187532707401031681:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203182039043:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:Calculation_187532707400040448:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_325455445230501890:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.perCap:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203179343874:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864367105:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864514562:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864535043:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864580100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864633349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864649734:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864666119:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864682504:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864698889:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.perCap:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='County-Level' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='deaths.percap' ordinal='8' />
                  <column datatype='string' name='countyState' ordinal='9' />
                  <column datatype='integer' name='cases.new' ordinal='10' />
                  <column datatype='integer' name='deaths.new' ordinal='11' />
                  <column datatype='string' name='cases.new.7dsma' ordinal='12' />
                  <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
            </properties>
          </object>
          <object caption='data.state.csv' id='data.state.csv_09D45CB279DD4396BA9415ED380F7A05'>
            <properties context=''>
              <relation connection='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr' name='data.state.csv' table='[data.state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='dateState' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='integer' name='cases' ordinal='3' />
                  <column datatype='integer' name='deaths' ordinal='4' />
                  <column datatype='integer' name='pop' ordinal='5' />
                  <column datatype='real' name='cases.perCap' ordinal='6' />
                  <column datatype='real' name='deaths.perCap' ordinal='7' />
                  <column datatype='integer' name='cases.new' ordinal='8' />
                  <column datatype='integer' name='deaths.new' ordinal='9' />
                  <column datatype='real' name='cases.new.perCap' ordinal='10' />
                  <column datatype='real' name='deaths.new.perCap' ordinal='11' />
                  <column datatype='real' name='cases.new.perM' ordinal='12' />
                  <column datatype='real' name='deaths.new.perM' ordinal='13' />
                  <column datatype='real' name='cases.new.7dsma' ordinal='14' />
                  <column datatype='real' name='deaths.new.7dsma' ordinal='15' />
                  <column datatype='real' name='cases.new.perCap.7dsma' ordinal='16' />
                  <column datatype='real' name='deaths.new.perCap.7dsma' ordinal='17' />
                  <column datatype='real' name='cases.new.perM.7dsma' ordinal='18' />
                  <column datatype='real' name='deaths.new.perM.7dsma' ordinal='19' />
                  <column datatype='integer' name='cases.active' ordinal='20' />
                  <column datatype='real' name='cases.active.perCap' ordinal='21' />
                  <column datatype='real' name='cases.active.perM' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' table='[Extract].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[date]' />
                <expression op='[date (data.state.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[state]' />
                <expression op='[state (data.state.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='data.csv_62B351438B2C46A48040691DC829D2A9' />
            <second-end-point object-id='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5a' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>State-Level New Case Density</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='172'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>State: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Population:</run>
              <run bold='true' fontalignment='0' fontcolor='#787878'>Æ </run>
              <run bold='true' fontalignment='0'>3.565 million</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Cases per Million: </run>
              <run bold='true' fontalignment='0'>539</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201123</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>1922.2857142857142</value>
                    <value>&quot;POLYGON((-73.6587 40.9934,-73.6545 41.0113,-73.7278 41.1007,-73.4827 41.2128,-73.551 41.2954,-73.5181 41.6668,-73.4873 42.0496,-73.426 42.0505,-73.0533 42.0399,-72.8135 42.0365,-72.8167 41.9976,-72.7667 42.003,-72.7558 42.0362,-72.6079 42.0308,-72.5092 42.0341,-72.1357 42.0302,-71.8007 42.0236,-71.7992 42.0081,-71.7877 41.6399,-71.7977 41.4169,-71.8423 41.4105,-71.832 41.37,-71.8613 41.3236,-71.9613 41.35,-72.0047 41.3066,-72.1776 41.3228,-72.3129 41.278,-72.3767 41.3683,-72.343 41.2686,-72.5465 41.2682,-72.5828 41.272,-72.695 41.2447,-72.757 41.2691,-72.8944 41.2424,-72.9324 41.2612,-73.1011 41.174,-73.1106 41.2003,-73.2623 41.1179,-73.4155 41.0987,-73.4333 41.0554,-73.5955 41.0293,-73.6587 40.9934))&quot;</value>
                    <value>41.622700000000002</value>
                    <value>-72.702799999999996</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-1' y='-167' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='174'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>State: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Population:</run>
              <run bold='true' fontalignment='0' fontcolor='#787878'>Æ </run>
              <run bold='true' fontalignment='0'>1.934 million</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Cases per Million: </run>
              <run bold='true' fontalignment='0'>1,058</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201123</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>2045.7142857142853</value>
                    <value>&quot;POLYGON((-104.0532 41.0014,-104.0523 41.3932,-104.053 43.0006,-103.0009 43.0007,-102.7921 43,-102.0825 42.9994,-101.7138 42.9965,-101.2281 42.9981,-100.1984 42.9987,-99.534 42.998,-98.4986 42.9986,-98.4674 42.9476,-98.3098 42.8826,-98.2583 42.8744,-98.2198 42.8532,-98.1531 42.839,-98.063 42.781,-98.0131 42.7622,-97.9472 42.7707,-97.8886 42.8172,-97.8755 42.8587,-97.8314 42.869,-97.7744 42.8497,-97.6865 42.8422,-97.6354 42.8515,-97.5671 42.8482,-97.5048 42.8585,-97.4391 42.8471,-97.4171 42.8659,-97.3618 42.8551,-97.3068 42.8676,-97.218 42.8451,-97.2127 42.8121,-97.1604 42.7997,-97.1303 42.7715,-96.9791 42.7601,-96.9635 42.7206,-96.9079 42.7339,-96.8062 42.7042,-96.8022 42.6722,-96.728 42.6669,-96.6891 42.6441,-96.711 42.6081,-96.687 42.5792,-96.638 42.552,-96.6315 42.5243,-96.6035 42.5045,-96.5578 42.5204,-96.5013 42.4827,-96.4455 42.4906,-96.402 42.4864,-96.3807 42.4464,-96.4103 42.413,-96.408 42.3374,-96.37 42.3109,-96.3564 42.2765,-96.3237 42.2299,-96.3566 42.215,-96.3478 42.1668,-96.2673 42.1103,-96.2729 42.0472,-96.2219 42.0296,-96.2414 42,-96.1881 42.0063,-96.1908 41.9808,-96.1332 41.9749,-96.1366 41.9272,-96.1621 41.903,-96.1097 41.824,-96.065 41.7911,-96.1041 41.7294,-96.0732 41.7041,-96.1226 41.6831,-96.0955 41.6459,-96.1136 41.602,-96.0812 41.5743,-96.0919 41.534,-96.0406 41.5069,-96.0267 41.5404,-96 41.5395,-95.9962 41.507,-96.004 41.4721,-95.9245 41.4589,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9115 41.229,-95.9235 41.1909,-95.8676 41.1884,-95.8805 41.1599,-95.8624 41.0897,-95.8795 41.0533,-95.8695 41.0071,-95.8321 40.9811,-95.8364 40.9216,-95.8135 40.9017,-95.8478 40.8643,-95.8341 40.7838,-95.8815 40.7506,-95.8832 40.7176,-95.8428 40.6775,-95.7895 40.6594,-95.7513 40.6091,-95.7656 40.5852,-95.7571 40.526,-95.71 40.5238,-95.6718 40.5626,-95.6617 40.5173,-95.7 40.5053,-95.6931 40.4694,-95.6597 40.4445,-95.6614 40.4159,-95.6276 40.3324,-95.6566 40.3195,-95.5533 40.2912,-95.5525 40.2619,-95.486 40.2478,-95.4699 40.2227,-95.4779 40.1838,-95.397 40.125,-95.3935 40.0789,-95.4206 40.0626,-95.4073 40.0331,-95.3466 40.0283,-95.3083 40,-97.3692 40.0021,-98.2739 40.0026,-100.1778 40.0016,-101.324 40.0027,-102.0517 40.0031,-102.0517 41.0024,-103.3825 41.0023,-104.0532 41.0014))&quot;</value>
                    <value>41.5</value>
                    <value>-99.75</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='100' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='176'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>State: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Population:</run>
              <run bold='true' fontalignment='0' fontcolor='#787878'>Æ </run>
              <run bold='true' fontalignment='0'>19.45 million</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Cases per Million: </run>
              <run bold='true' fontalignment='0'>282</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20201123</value>
                    <value>&quot;New York&quot;</value>
                    <value>5489.7142857142844</value>
                    <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                    <value>43.0</value>
                    <value>-75.489999999999995</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='131' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{B06C2684-0D41-49AE-A343-241CCF03CE02}' />
    </worksheet>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County-Level Hot Spots&#10;</run>
            <run fontsize='12'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='New Cases 7D SMA'>
              <formatted-text>
                <run>New Cases 7D SMA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{277AF070-EEB8-474C-A442-6620AAEDDFD8}' />
    </worksheet>
    <worksheet name='5a'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[State-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6670967.0743742296' min='-14670203.825095043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6E5C1D5A-A324-4D39-AA35-1E76DE613F2C}' />
    </worksheet>
    <worksheet name='5b'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[County-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20200730</value>
                    <value>&quot;Douglas&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>123.85714285714286</value>
                    <value>&quot;POLYGON((-96.3274 41.19,-96.3656 41.2341,-96.3506 41.2652,-96.4076 41.3146,-96.4244 41.3661,-96.4707 41.3932,-96.329 41.3931,-95.9387 41.3932,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9276 41.2984,-95.9115 41.229,-95.9235 41.1909,-96.3274 41.19))&quot;</value>
                    <value>41.291899999999998</value>
                    <value>-96.150199999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-55' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{42E61C40-2836-4455-BDA4-B4B6380BBC4B}' />
    </worksheet>
    <worksheet name='5c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C85D93EA-FE10-4771-B4D8-03FB23236857}' />
    </worksheet>
    <worksheet name='5d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Deaths - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C63D437F-3477-486E-A4A0-0691D9000DA3}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Missouri&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Virgin Islands&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{C7BE4A65-2880-415E-821D-E62636CC1C9A}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' minor-origin='#2020-05-14#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='#898989' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='subtotal' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='total' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='*m/d/yyyy' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_5' value='0' />
            <format attr='line-visibility' id='annotation_5' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='192'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases Reported: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-04 18:21:18.720#'>
                  <node-reference>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12348.994845360825'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;New York&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='119' y='1' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='114.477' text-width='166'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Peak New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-12#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>15282</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-98' y='-89' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-08-30#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2979.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-52' y='-131' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='291'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-11#</value>
                    <value>&quot;New York&quot;</value>
                    <value>4607.3826791917427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='186' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-19#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>4925.0533238208473</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='185' y='-20' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='296'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;South Dakota&quot;</value>
                    <value>8058.4722474987548</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-236' y='29' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='293'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>4077.2163886832536</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-186' y='-29' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='294'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2579.3154940962677</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='187' y='-20' />
          </annotation>
          <annotation class='point' id='15' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='2'>on</run>
              <run bold='true' fontalignment='2'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='2'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-27#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>7178.2694316500638</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-173' y='31' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0CF20289-F574-46F5-941E-C539B8F24827}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='128'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Σ Deaths: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-19#</value>
                    <value>251264</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-145' y='-53' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 1 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>36648</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-103' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>WAVE 2 PEAK</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-16#</value>
                    <value>75490</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-162' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Notable States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{18B2D08C-D4D2-4F82-8F4C-7C904941F167}' />
    </worksheet>
    <worksheet name='Tri-State New Cases + Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])))</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{3AEE0153-2BB7-47F3-A410-04767AF59D72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='511' param='horz' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='58' param='vert' w='98698' x='651' y='1060'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='61476' id='35' name='Nation-Wide Daily New' w='49318' x='25253' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30710' id='146' name='Nation-Wide Cumulative New' w='24602' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30766' id='155' name='Nation-Wide Cumulative Deaths' w='24602' x='651' y='37333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30841' id='311' name='Notable States' show-title='false' w='98698' x='651' y='68099'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57210' id='324' name='1d' w='24778' x='74571' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4266' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24778' x='74571' y='63833'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='534' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='533' param='vert' w='98698' x='651' y='1060'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30710' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24602' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61476' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49318' x='25253' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57210' id='324' is-fixed='true' name='1d' w='24778' x='74571' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4266' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24778' x='74571' y='63833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30766' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24602' x='651' y='37333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30841' id='311' is-fixed='true' name='Notable States' show-title='false' w='98698' x='651' y='68099'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State- and County-Level New Cases and Deaths'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='178' param='vert' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='179' w='98698' x='651' y='1060'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='28' param='horz' w='98698' x='651' y='6623'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='42123' id='3' name='5c' w='49359' x='49990' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41718' id='10' name='5b' w='49339' x='651' y='52825'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4397' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49339' x='651' y='94543'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42123' id='14' name='5a' w='49339' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4079' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49339' x='651' y='48746'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41818' id='26' name='5d' w='49359' x='49990' y='52777'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4031' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49359' x='49990' y='48746'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4345' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49359' x='49990' y='94595'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='199' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='198' param='vert' w='98698' x='651' y='1060'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='179' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42123' id='14' is-fixed='true' name='5a' w='49339' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4079' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49339' x='651' y='48746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42123' id='3' is-fixed='true' name='5c' w='49359' x='49990' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4031' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49359' x='49990' y='48746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41818' id='26' is-fixed='true' name='5d' w='49359' x='49990' y='52777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4345' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49359' x='49990' y='94595'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41718' id='10' is-fixed='true' name='5b' w='49339' x='651' y='52825'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4397' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49339' x='651' y='94543'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836711AE-A8FC-40BB-A283-4102C7E23F92}' />
    </dashboard>
  </dashboards>
  <windows pres-mode='true' source-height='23'>
    <window class='dashboard' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='1d'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Notable States'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='worksheet' maximized='true' name='1c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59732700-92E5-42F2-AB6B-3436D85DF36F}' />
    </window>
    <window class='worksheet' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='dashboard' name='State- and County-Level New Cases and Deaths'>
      <viewpoints>
        <viewpoint name='5a'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5b'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='5d'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3FD9FA44-6E72-44CA-A079-4E2D80E4338F}' />
    </window>
    <window class='worksheet' name='Tri-State New Cases + Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E29869-794A-42BD-9FD3-6C37C11A1D8D}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-23#</bucket>
          </multibucket>
        </current-page>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</axis>
              </node-reference>
              <page-reference>
                <fields>
                  <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-11-23#</bucket>
                </multibucket>
              </page-reference>
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C16D9719-18FC-49FF-9506-40BA605AB53C}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27A623D-2455-4E71-9350-83AEACEE3B0B}' />
    </window>
    <window class='worksheet' hidden='true' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-16#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A69FE9-8E67-4E4E-8D8A-5DEA02588AF4}' />
    </window>
    <window class='worksheet' hidden='true' name='5a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED5063A-3620-48EF-A2E5-BD1E1DA58829}' />
    </window>
    <window class='worksheet' hidden='true' name='5b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4B5A0E-088B-4C88-A0B3-21B1C81304AE}' />
    </window>
    <window class='worksheet' hidden='true' name='5c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D64A6E8-DE6A-46B7-B86E-B23AC593D8C9}' />
    </window>
    <window class='worksheet' hidden='true' name='5d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E95A138C-5A92-427D-9DA7-5B0D9AF77F38}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Notable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{798B147B-0696-4FFF-81B2-64334898F022}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='1c' width='384'>
      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
      iAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]' width='384'>
      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
      GAyGGP8HDIKT2YE6yAUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]' width='384'>
      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
      s58xMjLCkSNHuOuuuygqKuLixYuEw2Ha2trYunUrS5YsyR/HGu/zBw8epKuri2PHjlFdXU06
      nWbHjh20tLTg+z4zZsxgy5Yt9PX1cejQIZYtW0ZLSwvvv/8+586do6KighkzZkz5OgP09vay
      a9cu+vr6aG1tZenSpQB88MEHLF68mIMHD7Jz504+/elP5+fRaaBXMcawb98+1q5dm/8Ek0gk
      8m9gjz/+OO+++25++tHRUUpLS5k7dy4vvPAClmXx0ksvkU6nSaVSPPfcc9TX19PQ0MCyZctY
      u3Ytvu/z8ssv09vbS2VlJU8++ST79u2ju7ubBQsWTOn6jo2N8eu//utEo9H8qW/Hjx9n48aN
      jI6O8tnPfvaaTwwnT55kw4YNFBcXU1JSQiqVYvfu3SSTSR566CGWLFnCli1bcF2Xp556ipKS
      ElpbW2ltbWV4eJhnnnmGsrIyXnnlFdavXz8tbw719fWsW7cu/+ZkWRbJZDJ/YPfhhx9m3759
      +enT6TSWZVFTU8OLL75IKBRi69atZLNZuru7+drXvsalS5c4ffo069atY/ny5fl+MDw8TCgU
      4umnn+bo0aM0NzezYsWKKV3f9evXs379etrb2/Ov88/r0yMjIzfs0+l0mmeffZYzZ87Q2NjI
      smXLWLduXb5P9/T0UFVVxRNPPMG+ffvo6elh/vz5U7q+kNvTLC4u5sknn+To0aP09PRQUVHB
      xYsXefLJJ+nq6mLjxo35PQBjDE1NTTz22GMsX76ckpISLl68SHt7Oz09PTz77LMUFxezZcsW
      amtree655ygqKuLIkSP5gHzmmWcAeOONN1i8ePGUrzPk/j5/7dd+jRkzZvDaa6+RSqWIx+OM
      jo5SVlbGmjVrGB7+6JvvjDEaArpaW1sbkUjkmk575swZ1q5dS1VVFVVV117BWV9fzz333ENJ
      SQm2bfPGG2+wYsUKstks5eXlWJbF3LlzGRwcpLS0lLGxMbZs2cJ9993H8PAws2bNyr+5DA0N
      TfXqYlkW27dv59VXX83vxo+MjFBZWcmiRYuuOdvFGMPg4CDV1dWUlJTQ0dHBli1bePzxxxkd
      HWXmzJlYlkVFRQXpdJqSkhLOnz/P+++/z/3335/fJqFQiHg8Pm1DBF1dXZw+fZrXXnuNN998
      E2MMDQ0N1NbWUlFRwaxZ136P7/nz51m5ciUlJSV4nseuXbuoqakhHA5TXFyMZVnMmTOHRCJB
      SUkJmUyGV199lbVr15JMJqmqqsq/xoODg9OyzsYYDhw4wGc+k7txYV1dHevWrbthn16zZk2+
      T2/bto2VK1eSyWRu2KdfeeWVT/TpOXPmTEufBiguLsZ1XX70ox9x4sQJlixZQjqdJhwO57+7
      5OoPH7Zt4/s+JSUllJSU0NDQwIcffsi9996LbduUlZURDoeJRCL5/nvs2DE6OjpYsiR37694
      PD7tZ4fNmzePI0eO0NzczODgIJlMhtbWVhYvXkxRURHz5s275hqHjo4O7QGMM8bw3nvvMXv2
      bD788EOy2SxLly5laGjomvsfjfN9n/7+fh588EEymQybN2/m8ccfZ/HixYyNjeXHB5PJJEVF
      RQwNDfHaa6/x5S9/mVmzZtHS0pJ/Q0gmk1RWVk7p+gI899xzAHR3d3Pw4EHWrFlzw72Q7u5u
      ampqsCyLxsZGTp8+zYsvvkhxcTHRaBTbtvPjybFYjKNHj9Lb28uLL76Y/+Q5fmsQ13Wn5dM/
      QFFREQ888ACzZ89m69atZDIZurq62LBhwyemNcbQ2trKF77wBVzXZfPmzTz00EMsW7YM3/fz
      48vjn7TGA/7pp59m3rx59Pf358eSU6kUxcXFU7qu4zo7O6muriYej+ePSXz8jR9yfXpgYIBP
      f/rTpNNpXn75ZTZt2sSiRYsYHR3N7w3+vD6dSCTy01zv72Yq9Pf3U15ezgsvvEBdXR1nz57F
      GMPKlSuvO31TU1O+7fDhw4yMjPDiiy8SiUTy/TYUCuU/tOzevZuysjK+8pWvYFkWxhh837/y
      BUrTd3xr7dq1lJeXMzIyQllZGbFYjHPnzvHUU09dd/rTp09rD+BqX/va19i0aRPr169n1apV
      jI6OUlNTQygUYnR0lM7Ozvz/PT09zJw5k1AoxLFjx1i4cCGWZdHW1kZJSQmJRIL29nYOHTrE
      ypUr2b9/P+vWrSOVStHZ2cm8efNoamqiq6uLhoaGKd9Vtm2bvXv30tnZSWNjI9XV1flPwsYY
      ent76e/vZ2BggIGBAc6dO8fq1avxfZ/9+/ezceNG+vr6GBwcZMWKFRw8eJC2tjaSySThcJhj
      x46xZs0aurq6GBkZoba2lvfee4/GxkaKioqmLQBqa2vZu3cvfX19jI2N5b/oKBwOk0wmr3mN
      h4aGKC4uJhKJUFdXx8yZM4nFYrS1tQG5A4fj47+rVq3i8OHDLF++HNd16ejooKqqio6ODjo7
      Ozl+/Pi03F7AGMPhw4d56KGHsCyLrq4u5s6de90+3d3dTXV1db5PL1q0CID29nZKS0sZGhqi
      vb2dw4cPs3LlSvbt28f69etJpVJ0dXUxb948Ghoa6OrqorGxcdpumRGJROjv76e/v5/Ozk6i
      0Wj+k7Dv+3R1dZFIJOjt7WVkZITm5maWLFmCbducPHmS2tra/HZZvnw5+/fv5+zZs1RUVDAy
      MkJ7ezuLFi2ivb2dTCbD7NmzOXnyJEePHp3yYdyrJZNJIpEIpaWlRCKR/B5JLBYjm81e81qP
      n4yhg8BXWJaV32jFxcVUVVVx5swZNmzYQDweZ2hoiK6uLubMmUMqlaK5uZkNGzZQVFREJBLB
      dV1SqRSpVIr58+dz991309jYyLp166ipqSEej5PJZEilUjiOw9y5c1m4cCFNTU08+OCDzJgx
      Y0ovQQ+FQhQXF9Pc3Mzs2bOpra3lwoUL3HPPPRhjaGtrw/d9ioqKcF2X3t5e1q5dC+R2d8fX
      NRwOs3DhQuLxOB0dHWzatCm/qz0+TTweZ8mSJWSzWUZGRvjMZz6Tv5PsVCsrK6OiooLz58/z
      8MMPc/bsWdauXUtJSQkjIyN0dHQwZ84ckskkzc3NrF+/ntLSUkKhUP7sp1QqRU1NDcuXL6ep
      qYkVK1awaNEiYrEYtm2TSqXIZDLMmzePu+66i4aGBjZu3Eh1dfWU32bA9/1rhrY++OCD6/bp
      dDpNc3Mz99133yf6dDqdZt68edf06Tlz5tx2fXpccXExs2fP5vz58yxevJi5c+cyMDDA0qVL
      8X2fS5cuUVpamr/dRSqVYtmyZXied02/LS4uZunSpfkzfB555JH8+8T4cb6KigpWrFhBd3c3
      0WiUBx54YNpuJeH7Po2NjWQyGT772c9y7tw5Fi1aRGVlJalUitbW1nzfHj9ZAyPX5TiO2blz
      53XbPM8zO3bsmOKKCuv8+fOmoaHhum3Nzc2mrq5uiiuaGm+88cYv1XYn+nl92nXdX7k+Pe7A
      gQNmcHDwum2HDx82fX19U1zR1HjzzTeN67rXbdu1a5exbdvoSuAbMFc+HcTj8Ztqu1PZtp0/
      yHW9tnA4/Cv5lZ+ZTIaioqKbbrsTBa1Pj/tFr3E8Hv+VvAHcRPq2AkBEJKD+f4q9+XYIIp1f
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Daily New' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
      zhdVVXE4HBflWFfS71E6Pf0LP50x/WfcbjerVq1i6dKlbNmyBW9vb2JiYi5IQp577jlGjhyp
      zZB1qrScPHkSb29vbdny5csJCgoiICDgnI+Xn5/P66+/zpYtW9i8eTNbtmxhy5Yt9OzZE19f
      31Nu0zRh/enS2OSLL77A4XDQpk2bZsubJm9fu3YteXl5xMXF/eK+rnS5ubksWLCA+Ph4bYjp
      tWvX4u/vf9rP4VwIIUhJSeHdd99l/fr1VFZW0qtXr9+831/D6XQyZ84cNm/ezM6dO1FVtcWQ
      4j+3f/9+kpOT6dGjB0ePHuXzzz9n8ODB5yU9r776Ktdccw2KolBWVtZsitCXX36Z+Pj4U05u
      BDB37lzWr1+v/W6SkpKafYbQeCP00ksvaefr8Xho167db5osKDU1lSVLljQb4hzgww8/JC0t
      jQEDBpzzPufPn09sbKw25Pyv5fF4+Mc//oHD4aBr166/aV8XyxlLAB9//DGHDh3ib3/7G7Nn
      z76gY7w7nc4zvl9eXs67777bbNnIkSO1Wb/OVXR0NLNnz2b27NkUFhZq/w8NDT3tNkuWLOHE
      iRO/uG+3243H42m2rLi4mJdffpnbb7+dZ599lj59+qCq6q9K+5WkrKyMgwcP8umnn2rLDhw4
      cMpZ0n6NtLQ0PvroIx5++GGeeuqpZnNEXGxutxur1crs2bP5wx/+wLp163j//ffPeKfdrl07
      LcNXVfUXp0o9F5MmTUKv11NfX89rr73W7L2GhoYzpuvBBx/UfjNTp06lsLCwRQbq8XgoKSlh
      9uzZ3HLLLaxfv55Fixb9ppLFsWPHKCgoIDU1VVtWXV1NUlIS+/bt+1X7HD9+fLMby1/ryJEj
      AHz77be/eV8Xy2lnBKuvr2fbtm0sWLBA+2AjIiIoLi7mwIEDXHfddQB8/vnnTJo0CbfbzSef
      fEJ1dTXFxcXEx8fjcDjIzs7WMlur1cr+/fu5/vrrtW1vvvnmZl+cqqoqPvjgA8rLy/Hy8uLu
      u+8mKCiIt99+m+zsbF555RW6dOnCrbfeSmZmJkOHDiUpKYkuXbpoE7usXr1am2xl8eLFHD16
      lJiYGB566CHtWEajUQseP/0/NE548+6771JbW0uPHj24++672bJlC2lpaZw8eRJ/f3+mTZuG
      zWbjq6++wmazER0dzYwZM077Rfr000958MEH6dGjBwBDhgwB4NChQ3z55ZfU1dURERHB/fff
      j6+vL7t372bVqlUIIUhISOD3v/89tbW1vPfee1RUVBAbG8tdd92FTqfj888/Z9++fZjNZm67
      7TZiY2N/xVeh9Vx33XXs2rWL8vLyFgF427ZtrFmzBrPZzPTp0+natStLly7lvvvuQ6fTsWLF
      CsLDwxk1ahS1tbV8//333Hbbbdr2n3zyCf/7v/9L27ZtARg+fDjQeCeZmJhIQ0MDnTt35p57
      7kGv17Nu3TqSkpLQ6XSMHz+ehIQETpw4wX/+8x+cTidDhgxh4sSJNDQ0sGjRIoqLi/Hz8+O+
      ++4jIiLiF8+16bsWEhLCSy+9xMyZM5k8eTKKovDhhx9y8uRJfHx8uPfee4mOjqaqqoojR440
      K00KIXj77beZOXOmNg3rkiVLuPvuuzEajZSWlmoT97hcLt544w2mTp1KTEwMGRkZuFwubZ7s
      9u3bN/tthYeHc//996OqKmvWrGHfvn2oqsrs2bObpeGnExB98skn3HbbbdpUp6c73xdffJFZ
      s2ZhtVoJCQlh2bJlHD16FICbb76ZPn36sHTpUh588EF0Oh1ut5sPPviABx98sMX3ZcuWLYwZ
      MwZFUUhNTWXo0KFkZGQAjcFr6dKlZGdnExYWxkMPPYTJZGLNmjVMmzZNK/EkJSUxefJk0tLS
      aNu2LW63m48++gghBNnZ2fj6+vLEE09gsVg4ePAgK1asoKGhgYCAAO6+++4Wk1Jt3LiRCRMm
      8OWXX1JcXExUVBTffvstffv21WpOvvrqK0aNGoXFYuH999+nsLCQDh06cP/992M0Gvnss8+4
      /vrrWbJkCaNHj8bHx4evv/4am81G27ZtmTFjBl5eXtTV1bF8+XIKCwvx9/dn0KBBjBkzhqqq
      Kt555x2qq6vp06cPd9xxxxlrGU5bAigpKSE6OrpFVK+uriY7O1v7Oz09HbfbTUNDA8nJydxy
      yy288MILrFmzht69e/Piiy9SUVHBiRMnqKmpIScnp8W2Pzd27Fiefvppbr75Zt555x18fHyY
      Nm0a3bt3Z+bMmYwbNw5onOWrvr6e4OBg1qxZAzSWJBITEwkODubTTz8lLCyMl19+mZiYmGZ3
      maejqipz585lwoQJvPTSS6iqyldffcWQIUPo3bs3t99+OzNnziQ6OhqTycS9997LM888g5+f
      H999991p95uTk3PK4qnRaOSuu+7imWeeISIiglWrVqGqKu+99x5/+tOfeOKJJ7S71nfeeYdr
      r72WOXPm4HA42LBhA8eOHSMzM5OnnnqKBx544LKsUjIYDNxzzz0sWbKk2d3hiRMn+Oqrr3ju
      ued4+OGHmT9/Ph6Ph6NHj1JQUIDb7Wb79u2sXbsWaPw+/bSO3OVyUV1dfcpqS39/f2bNmsXT
      Tz+N1Wpl586d1NfXs2rVKp544glmz56Nj48PHo+H1157jenTp/PCCy+wY8cODh48yLZt29Dr
      9TzzzDNMmTKlRYnvbOj1egYNGqT9JiZMmMDTTz/NmDFjWLRoEQAnT57k4MGDLbZ1uVzatKy5
      ubkcP35cy4D9/f1Zt24dHo+H/Px8Dhw4wI8//gg0Vq81VZnu2LEDvV7P9OnT6dSpEzNnztTm
      zHa73fj6+vLMM88wbty40363T548yf79+7XAejbn23Q+/fr143//93+ZNWsW//nPf1AUhaKi
      IjIzM4HG2QBPVRKMjIzE6XRSXV2NEIJt27YxcuRI7f0vv/xSmznvxhtv5JVXXsHX15fk5GRq
      amoA2LBhgzaveVpaGm63GyEEGzZsoGfPnvzjH/8gLCxMu+mbO3cud9xxB3/729+or69vkS63
      201mZib9+vVj9OjRbNq0Sfssmq6d3W5n8+bNBAQEsGzZMjp27Mg///lPgoKCWLlyJQCbNm3i
      pZdeYvTo0cTFxeHl5cWMGTN45plnMJlMJCYmIoTgtddeo02bNjz99NMMHz5cy5Nff/11brjh
      BubMmYPVatW+I6dz2gAghECnO7c24piYGDp27KhN2di/f38sFgshISFn3Sjq7+9PZWUln3zy
      CVu3bqWiogK9Xk9gYCBeXl4EBwe3mAylX79+HDp0CKfTSWZmJr169cJkMpGenk7Hjh3Jycmh
      ffv2pKen/2Lxs+mDjY+Px2KxMH36dHbs2IGPjw9eXl4EBAQQHByM0WgkMjKS3bt3s3z5cvLz
      8ykpKTntfk93PSMjI8nIyGD58uUcOXKE0tJSFEUhOjqa5cuXk5ubS58+fVAUhcOHD+Pn50dO
      Tg6dO3cmPT2doKAgSktL+eabb3A6nXTp0uWsrvOl5pprrqG4uFibhxlg7969dO3alWPHjlFe
      Xo7RaKSsrIyEhAR27drFsWPHiI2NRVEU7HY7KSkpDBs2TNteCIGiKKesc46KimLr1q0sW7aM
      8vJySkpKMJvNWqnCarXSs2dPqqqqcDqdOJ1ODh8+TJcuXdi7dy8xMTGkpaWxfv16fH19m1Ut
      FRQUsGDBAhYsWIDVaj3jeTdNiRoUFERxcTEff/wxqamplJeXn3YbRVG49dZbtRLi+vXrGT9+
      vHaeFouFiIgICgsLSU1N5cEHH9SmRM3Pz2/2HVEUhcDAQMxmM8HBwVpwMJlMjB49Gl9fX9q0
      aXPaxucvv/ySm266CZPJRENDA4sXL2bBggXs3LnztOerqip6vR6z2cyXX37J119/TV1dHXa7
      nSlTpmjnlZiYyO9///tT7mfYsGEkJSVRVVWFqqrN7sZ37drF1KlT8fLyIj4+HpfLhcvlYtSo
      UWzbtg1VVdmxYwdDhw5tsd/w8HCuueYaLBYL0dHROBwOsrKyGDNmDF26dMHHx6dZW0mTI0eO
      EBISQnV1NbGxsWzZsgUhBNdccw179+7F5XKRlpZGfHw8BoOBzMxMoqOjycnJoUOHDqSnpwNg
      s9l44okntDRERkayc+dOli9fTkFBASUlJTidTiorK5k4cSI+Pj7a1LvQWEVmNpvJycmha9eu
      2n5P57Q5fHh4OIWFhTQ0NJxxB+fbunXr2L59O9dffz2TJk3SLvaZGo6MRiN9+vRh7969bNiw
      gRtvvBFojMoHDx4kOzub3NxcJk+e/IvH/3lG3fQDPZV58+YhhGDChAlaldjpdOzY8ZR1lG+9
      9RYOh4MJEyZo6VYUhWeffZbRo0eTkpLCE088gcfjweFwaOdTVVXFddddR1BQEG+88QYRERH8
      5z//4aOPPvrFc7wUKYrCQw89xMKFC7XrraoqJSUlZGdnk52dzZAhQ/D19WXw4MHs2rWLlJQU
      hgwZwsCBA0lPT6ewsJD27dtr+zQajXh5ebUIzB6PhxdffJHw8HBuvvlmrr32WqCxJDJv3jx6
      9OjBqlWreO211xBCUFtbq6XBx8eHuLg4unfvziuvvIJer2fOnDls27ZN239wcDBjx45l7Nix
      +Pv7n/achRDs2bOHbt26sXLlSjIzM7nxxhu5+eabmzVwnkrbtm3x8vIiNzeXAwcO0L9//2bv
      JyQkaKWV+Ph49Hq9diN0vlRXV7Nz507tu28wGBg1ahRjx47VqmNPd76HDx/m/fff59prr2Xy
      5MlER0cD0LNnTyoqKjh+/DglJSWnbUwdPnw4ycnJbN++vUXp4+e/4aa8Y8yYMWzdupW8vDwi
      IiLO66x6GzdupKGhgXfffZfly5drVeFms5nu3buTnZ3Nxo0bueGGG4DGaqpDhw6RnZ1NQUEB
      EyZMACAsLIx27dpp+507dy4Gg4GJEycyevRo7fxOx263k5OTQ3Z2Nna7/RdLZqcNAP7+/vTt
      25f3338fu92u/QhMJhMnT57E7XZTVFR0Vo2iTYxGIxUVFWfc9ujRowwbNoyYmBiKi4ux2WwA
      +Pj4UFRURENDwykbwm688Ua++eYbKioqtAns4+LisFgsTJo0iXHjxuHt7f2LPRB8fX1xOp0c
      PHhQ6wXV9OPy9/fn2LFjuFwurYFrxIgRhIaGcvjw4TPud+rUqbz99tsUFhbidDrZt28fDQ0N
      FBUVMWrUKMLCwrR9eDwe0tPT6d27NzNnzsTpdOJ2u+nSpQtt2rRh0qRJjBkzBpPJRHFxMVar
      lVGjRvHoo4+yf//+X/4gLlE9evTAYDBo59C7d29qa2sZN24cN998Mx06dECn0xEaGordbicj
      I4MePXowZMgQPvvsMzp06NCsCkxRFKZMmcJrr71GZWUlDoeDjIwM3G43NpuNa6+9loCAAO26
      19TUcPjwYRISEpg9ezbHjh0jICAAPz8/+vfvz+TJk0lISECv13Pw4EGEEIwfP56pU6dy4MAB
      7bg+Pj5069aNbt26nbJh1GazUV5ezrx58+jevTsRERHk5eUxatQo2rRpQ0FBwVndeE2ZMoV/
      /vOf9OnTp0XAGDhwIFu3bsVisWA2m4mPj+edd95h2LBhLX4DXl5eVFZWUl9ff043fKtWrWL8
      +PFaTyGdTkfnzp3p1q2b1qamqqp2vq+//jpdunQhKiqKwsJCevfuTdeuXbHb7VpJSa/XM3Hi
      RP7+978zYsSI0/5eg4KCMJlMfPfdd1p7WpO4uDhWr16t3QAKITAajYSGhmIymfjkk0+0auSz
      ERcXR2JiIikpKaSkpLS4q26q/nnppZd47rnneO6557jnnnu0aqBx48bx5ZdfNusZ2KtXL/z9
      /Zk0aRJjx47VqqN+zmq1MmLECEJCQrTvaVNNyLJlyzhw4ABff/21tn6HDh3o3LkzkydPZuTI
      kadsl/mpM3YD7devH/v27ePjjz9m69atREZG0rdvX5KSkli9ejUHDx4kKiqKIUOGoCgK5eXl
      xMXFAY3F4Pj4eHQ6HVarlY4dOxIVFUVycjLffPNNs20NBgMFBQUMGDCAtm3bsmTJEjZt2oTb
      7SYiIoJBgwZpgWf58uWUlZXRr18/iouL6dq1K97e3gQGBrJlyxZGjhxJt27dgMa7ic2bN7Nq
      1Sq2b99Ot27dTlkfnJ+fr/W00Ol09O7dm0WLFrFmzRr0ej0zZszAYDDQtm1bli9fzsaNG+ne
      vTtt27blnXfeISkpiaioKKKioujWrRsVFRWEhYU1a9AMCgoiKiqKxYsXk5iYSGlpKddccw3B
      wcG8/fbbJCUlER4eTnh4OD169GDDhg18+umn/PDDD1x33XX06tWLuLg4Vq5cybfffkt6ejpx
      cXH4+/vz4Ycf8u2337Jz505mzJhxxp5Ml5r6+noURdGCdteuXdm9ezdjxowhJvY3yh8AACAA
      SURBVCYGvV7PBx98wObNm2loaCA+Ph6j0YjL5cLb25uBAwfi5+dHeno6v//974mMjGy2/w4d
      OuB2u1m8eDEbN27E4/EwcOBAXC4XixYtIiUlhY4dO9K+fXuio6NZsWIFK1euZOvWrUydOpX2
      7dvTs2dPli5dSmJiIocOHWLQoEF4PB4WLlzIunXrOHbsGPfdd98pqwZ+SgjBjz/+yNatW9m1
      axf9+/dn2rRp6HQ6oqOjWbhwIZs3b8ZgMBAeHs6AAQOw2+24XC66du2Kw+HAZrNpjfxRUVF8
      +umnPPLIIy26Qnt7e3PgwAGGDx9Ou3btCA4OJjU1lTvvvFPrzXf8+HGtSkIIweLFizly5AjX
      XHMNJ06coHfv3hiNRpxOJ3a7ne7duzc7l02bNjFt2rTT9g5sqp9vOt++ffsyffp0dDod4eHh
      rF27lrVr12olt6ZupG3btuWjjz7iz3/+c4uMsbKykuDgYCIiIrTrPXToUFRV1Tqf9OjRg02b
      NrFixQr27t3LX//6V+36WCwW0tLSuPPOO7WbhcLCQvr27Yter+fEiRNaW111dTX+/v507NiR
      /v37k5qaSn19PR6PhwEDBmgN4SdPnsThcBAfH6+ls6l6OD4+npCQEL7//nvGjRtHp06dgMab
      m8TERL755ht27NhBbGws0dHRFBQUMHDgQG0/FouFd999l+TkZKKjo4mOjqZr164MHjyYY8eO
      ceDAAdq3b099fT2DBg2ib9++fPbZZ3z33XdkZGTQv3//M+YHck5gSboMqapKYWEh8+fP59VX
      Xz3n9rpLlaqqHDhwgJUrV/L888+3dnIAqK2tJTc3l169elFZWcmzzz7LvHnzzmsV0rnatWsX
      3bt3x2w28/bbb9OrVy+tCvlcnLl8IEnSJSk5OZnvvvuOP/3pT1dM5g+NbYApKSnMnj27tZOi
      0ev17Nixg88++wyz2czDDz/cqpk/NHaXf/XVV3G73fTt21frWn+uZAlAkiTpKnXl3DpIkiRJ
      50QGAEmSpKuUDACSJElXKRkAJEmSrlKn7QVUV1f3m0arVFUVIcRlOTaN1JzdbsfHx+c3j17q
      6+vbrMeKy+XCbrf/1uRp+7qQo9VK0pXotAHgt47F7nQ6EUL85jG2pdZnt9vx8vL6xacKz5XR
      aDwvmbYQgrq6ulbvmidJlxtZBSRJknSVkgFAkiTpKiUDgASAWluMfc3jeEqyLupxhRA4nU6t
      fcHj8TSbjeqn8ys3rdPUviRJ0m8jh4KQGjPh7W/jzt2ALjwWfWSfi3bcLVu2AI3jrUyYMEGb
      /at79+5YLBZt0qBx48axa9cuhg4dyg8//MCoUaNOO1+tJElnRwYACVFnxX1oHSh6DJ3PPK/B
      +TZ8+HAURWH16tUUFBTQrVs3evToQWJiIiaTiRtuuAGr1Upubi42m4309HQ6deqE2WxGVdVm
      JYeznXRIkqRGMgBIuPZ/BW4Hnphh6ENPPQHHhaAoCjabjY0bN5KQkEB1dTW+vr4oiqJNxGMw
      GPD29sZqtVJRUUFJSQl33HFHs300vf7SXA+SJDUnA8BVTngacB1YgwCKwm4g8Be3OI/H/u8c
      rDfeeCMWiwUvLy8yMzMJCgpCr9djsVioqKigsLCQsLAwTp48SXx8PBs2bOB3v/ud9kxB0wxQ
      8pkTSTo3MgBc5TwlWYjqAuqUAE6YY+l5EY8thCAkJIRdu3ahKAojRowgICCAnTt3ahMFJSUl
      4evrS0xMDG63m+DgYHr27Cn7/UvSeSADwFXOlfk5ALmWQbg48zy055tOp2PkyJHNlvXr16/Z
      303zoALabEodOnS44GmTpKuB7AZ6FVNrS3DnbkZFz/Gg0b+8gSRJVxQZAK5irn0rwW2n3LcX
      deY2rZ0cSZIuMhkArlLCWYtr35eoKBwJ+V1rJ0eSpFYgA8BVypXzHaLOSqkuhiKvHq2dHEmS
      WoEMAFchobpx7fsKgIMB16Eiu09K0tXojAHA5XJRVlYGNHbZO3LkCCUlJQBYrVYcDgcADocD
      q9V6gZMqnS+egp2o1hwchgBK/Af+6v3YbDaqq6sBcLvdZGdnU1NTA0BhYaH2lG51dbW2niRJ
      l47TBgCn08mGDRtISUkBYN++fVRXV7Nnzx6qqqrYvn07aWlpAOzZs4cff/zx4qRY+k2E6qFh
      1/uAID/4etw671+1n7KyMn744Qf2798PwNatWzGbzfzwww+oqsqqVasoKCjQ3tuzZ8/5OgVJ
      ks6T0z4HYDKZGDduHBs3bgSguLiYG264gbKyMo4ePYqvry92u12bjMPf3x9ovBNUVVV7lY/n
      X1rU48l4CtOox5dcvxF43CoejwdV9eBxu3E6nS22cbvdzT5Po9FIaGgo1113HVlZWQgh8Hg8
      dOrUibKyMmpra+nWrRu5ublERERgNpvlU7qSdAk6bQD4ecatKAoejwen06nN4tSmTRt2795N
      dHQ0RUVFjTv876xRQgiEEHLExkuIWluKLenfCCFIC5iMwxiCXnWh1+vxqKA3GE75eRkMBu1f
      k59/P5qqexoaGtDr9ej1ekwmE3v37qVXr14cPXr0wp6cJEnn7LRVQLW1tWzdupX8/Hz27t1L
      z549+f7779m5cyddu3bFaDQSGxvLrl276N69u5yP9RInhKBh1/uIquNYfXpzPGjUb9pfUVER
      KSkp5ObmkpeXR0REBD/88AM1NTX4+PhgMBiIjY3l6NGjhIaGnvfpJCVJ+u0UcQ4za7hcjXeL
      P53Y+3TknMCXFk9xJrYv7kVVPawJe4pq7074eJmwO12YTQYaXB7aRQQwPqHlaKClpaWEhISc
      MRMXQmgTs1/saj85J7Ak/Trn1A3UaDSeVeYvXVqEvQp74tPgaSA/aAxlpvbn/RiKomAymWSb
      jyRdRmRufoUTngbs3/0ZUXmManMMOZG3t3aSJEm6RMgAcIVzbl+Ap2AnDkMAPwTPwq33ae0k
      SZJ0iZAB4AolhKAh8wtcaUtQFQN72j5ClT6stZMlSdIlRAaAK5AQAte+lTg3vohAYU/wrZT7
      9m7tZEmSdImRAeAKI4TAffD7/2b+ggOR09lrGQ2ycVaSpJ+RAeAKIlQPrswVOBKfRggP+4Mn
      kRc6HoHM/CVJakk+nXOFEJ4GnJtfwZX1JQLIDbuJHebxhMs7f0mSTkMGgCuAWmfFseEfeI5u
      xaXzYnfwVKwRYxFV9a2dNEmSLmEyAFzGhBB4jiXh+OF5RH0ZDXofdsU8zkFPR0JbO3GSJF3y
      ZAC4TAmPi4adi2jYtRjhcVJu6c724LvBpyPU2Fo7eZIkXQZkALgMqVXHcSQ+i6doNyo6DgeN
      Jyfydk7Wuwlu7cRJknTZkAHgMiLczsYunilvI2qLsRuC2B05g1x9T/wVA+Bu7SRKknQZkQHg
      MiCEQK08ivOHv+Mp2oNAId/3WtJC7kDnHQy2htZOoiRJlyEZAC5xwllLw673adi9HDwN2Iwh
      pAf8AWvoCGwOF76tnUBJki5bMgBcooRQ8eRtxbF1LqK6ABUdx3yHcCjmXgprFQJbO4GSJF32
      ZAC4xAghUEuycCa/gadgJwKoNseQHXUX+90diTD4AnWtnUxJkq4AMgBcIhr79G+jYe8nePK3
      g1Bx4kVu5BR26YcQ4hcElTLjlyTp/JEB4BKgVh3Hue013LkbAWjAREHoDSQbrycoNBK3zPgl
      SboAZABoRcJRjXP7Alz7V4LbSYPiRV74TaQrA/EPbUuDHMpBkqQLSAaAViA8LtyH1+NMfgtR
      cwIVHSX+g9lm/j3e4d2wV9bhLwdxkyTpApMB4CLzlB3EuemfeIr2AIJqrw5s8r0DQ2Qfaqvq
      8W7tBEqSdNWQAeAiEY5qnKnv4sr6AtxO7MYQ9liuoypmPBXVLiLkHb8kSRfZWQeA2tpadu/e
      jV6vp1+/fhw5coQ2bdoQGhpKRUUFBQUF9OvX70Km9bIkhEC1ZmNf+1dE1XFU9Bz0HkZBu+kc
      rzMQoTMDrtZO5jlzu92kpqYC0LlzZxoaGnC73XTu3Bm328327dsZNmwYOp2cc0iSLlVn/es8
      fvw47du3Z9CgQXh7e1NUVERGRgYAWVlZFBQUXLBEXq6E6saV+Tm2L+5BVB2nwtiW7Z2eIzn4
      HpzGy/tRLpvNhqIoDBo0iPDwcPLz8zlw4AAAhw4dIi8vDyFEK6dSkqQzOesSgMfjITs7m9zc
      XEaMGIHRaGzsu+7x4Ha78fLyAhrvDFVV1V6Vq7RqQzjrcG+ZgzjyAwKFwoBhbPCaQqA5BNVu
      a7w+HvVXv6oeFVVV8Xg8eFQPqseDqnr++3fj8jNur1Oar6t68LjdOJ3OFufidrubfZ5GoxGH
      w4HVamXLli0MHjwYgMDAQKqqqigqKqJt27YX+5JLknSOzjoA9OnTh7i4OPLy8jh48CAA7dq1
      IyUlhZiYGI4fP964Q0PjLoUQCCEwm80XINmXrqYqH8cPzyHKDtKg92G7/1Rq21yHp6oeg8GA
      Tq/7za86vQ6dToder0ev06PT69Hp9P/9u3H5GbfXtlXR6/V4VNAbDKf8vAwGg/avSVhYGJMn
      T6a+vp6UlBRMJhN9+vQhIyMDo9GI2y1HJpWkS91ZVwHt27ePjRs3kpGRQUxMDEajkS5durB/
      /346d+6M0Wi8kOm8LAghcOd8h+2Le/GUHaTGEE5Kx+fI9UmAK6wkdOLECRITE9m6dSvt27fH
      aDRisVgoKSmhZ8+emEyms9qPy+Viz5492t+7d+8mNTWVgoIC3G43KSkpZGVlIYSgsLAQgIKC
      glOWVCRJOjfnVAJwu93odI13jyNHjgRg5syZAIwaNeqCJPByIYSKK+NznFv/hVBVTgQOZZPl
      VoIsEeC48p7kbdu2LVFRUQghMBgMdO3aFYDbb78daCwhnI29e/eSm5tL//79EUJQWlqqVTGm
      p6fTtm1bCgsLKSoqIjs7G19fX/bv3y+rmC4w2X5zcbVWVfk5dQP9aRWA9H+Ex0VD6ruN0zMK
      lQz/CRS0veOKf5JXr9f/5n0MGjSI6upqAOx2O5WVlSQnJxMfH09dXR3R0dF4e3tz7NgxysvL
      +e6777jllltQlP+2YXg8QGNJQpYKzp+rte2utbRWwJU5+m8kPG6cG1/CtX8lKjqyI6eRrh9J
      uPwBnTOLxcIdd9yB2+1m/fr1WCwWPB4PDocDo9FIcHAwvr6+nDhxgs6dOze2Yej1CCEwGo1X
      XXvTheRyXX5dky9XiqK02s21DAC/gfC4cGz4B+4DX+NRTGwJfgBb2HCEHLztrAgh2LVrF0eO
      HMFkMtGlSxcyMzMxGAxEREQQHh5OYmIiTqeT8ePHU1payrXXXsvatWsJCwvD39+/tU9Bki5r
      MgD8SqLBhn3tX/Ac3YZHMZHW7jGOeroR0doJu4woisLgwYO1bqQAkZGRuN1urRE5MjJSu9O/
      4YYbAJgwYUKrpFeSrjQyAPwKoqEe+5rH8BxPxan3Y1PIH3H79YcrvM7/YtDpdM16EJ1tbyJJ
      ks6dDADnSLVX4vj2f/AUplGn+JHW/klONETIsXwkSbrsyABwDtz523FunYtakUuFd3e2+d6K
      au4ADfbWTpokXVYqKyvZtGkTt9xyCytWrCA2NpauXbuyevVqbr/9dlJTU9m0aRNPPfUUW7du
      JTo6mm7dupGcnExwcDB79uzhyJEjKIrCnXfeSYcOHairq2PZsmWcOHGCsWPHal3V582bh81m
      o2vXrkyZMoWFCxdy8uRJAB555BECAwOZP38+PXv25PrrrycnJ4fa2lp69+7Nxx9/zIwZM67Y
      Ma2uzLM6z4TbiXPHQuxfz8JTkUu2+RpS2v+NKkvH1k6aJF2W/Pz82LJlCy6Xi5SUFO3hP6vV
      ihCC9evX43K5yMvLw9/fnw0bNgDw3XffER4ezv79+3nggQd4/PHHiYmJAaCmpoaEhAT+8pe/
      8Pnnn2vHysvL409/+hP5+fns2bOHw4cP8+ijj/L4448TEBBAWVkZ5eXl2jGsVivHjx/n/fff
      p2vXrlds5g8yAPwitaYY25czaNg+H1VVORI6kR3hM3Arsm5akn4tg8FAQEAAhw8fJjY2lvLy
      cvbv30+fPn2w2Ww4HA7Gjx/Ptm3biIuLIzs7m7q6OtxuN8HBwbjdbpYuXcrChQupqKgA0EoJ
      ixcvZujQodqx3G43JSUlVFVVYTabqaurY9GiRbz//vvYbDZSUlIYNWoUZrOZ8vJyoDHQ5Ofn
      M2LEiFa5PheLrAI6DeFx4z74Hc6kNxD1ZdgNwfzodzvOiGGIWkdrJ0+SLnuxsbGsWbOGIUOG
      sGvXLvbu3cusWbPYu3cvBQUFfP3115SXl3PvvfcSERFBYmIi8fHxWr/5O++8E19fX/z8/IDG
      Bwmff/55Jk2axPDhw7Xj2Gw2kpOTuemmm+jduze+vr7ce++9GI1GvL29SU5ORlEUysrKSE1N
      xd/fn+HDh5OWlobVaiUi4srt2ydLAD8jhMBTkol91UM4Ep9BrS+jwNCVpC4vUegbj5CNvZJ0
      XsTFxbFx40ZiY2Np164deXl5hIeHk5yczAsvvMALL7xAWFgYVquV4cOHs3jxYoYNGwY03tV/
      /vnnfPTRR5SUlACN40iVl5eTkZHBkiVLtOMEBgZy7733kpCQgKIo1NfX88knn7B8+XIKCwvR
      6/XMmTOHl19+mZSUFAD8/f159NFHef3117Wnza9EirhAzyA7nU6EENow0Zc64XbgOZ5KQ8Zn
      eI6nguqmXvEjL2oKu5TBhAUHYq2qJzTAm5M1doJ8vaiqd+DvbeZkrZ2IIF9KK+su2mugrxc2
      hwtfi4laWwP+Pmaq6hwE+1moqLERGuCNtar+tNubDHp8vEzYnS7MJgMNLg/tIgIYn9C1xbUp
      LS0lJCTkkh0KRAhBXV2ddico/XYX40lgt9tNeXk54eHhOJ1O6uvrtQmmgoKC0Ol01NTUYDab
      URSFEydO0KFDBxRFoaKiAoejsSQeGhqK2WzGZrNRWVkJNA5TEhkZCUBFRQXBwcHa8BZWq1U7
      v5CQEBwOB4GBgQghqKiowNfXF4/Hg4+PD1arldDQ0AvaDiCfBG4loqEez4nduHM34D6egqgp
      AsCpeFEUPJpk01gCQtqiyid7Jem8MxgMWiZtsViwWCxAY6bc5KdPe3fs+H+dLn66ThNvb2+8
      vVvOqv3zdcPDw5v93XSTqigKoaGhZ1z3SnNVBQAhBMJ+Es/xHbgPfY+naC/C3njHIIBafRhF
      IaNI1w3GP6wtjso6Alo3yZIkSRfMFR8AhOpB1JzAnZ+M+8gWPCfSwd1YdFRRsJsiOGLsQ03E
      MA45IwgLDsReWYccZUaSzp+mWQL1ej06ne5Xjzbq8XhoaGgAGu/YzWYzqqqyZs0aJk2apE1E
      ZDAYEEJQU1ODyWTCy8sLRVH4/vvvGTFiBDqdDiGEVuqw2xuf5fH29kZVVWw2GyaTSZvnpK6u
      DrPZfMU9mX5FBgDhcaOW5eDO34770DrUilwQKgAexUCZqTMngwdzQMRiDutKaVU9ET6+qA2y
      qkeSLoScnByKi4tRFIWwsDB69+7dLAjYbDasVisdOnQA/m945J8HiszMTFauXElDQwNWq5VF
      ixZx7Ngx7HY7u3fvZsGCBdx5552MHj2ahQsXcuLECYKCgnj88cdRVZWMjAzcbjfbtm2jvr6e
      6dOnExQUxNtvvw3Aww8/zPr16ykvL8dqtTJnzhxSUlLYtm0bTqeTl19++Ypqa7piAoAQAlF1
      HNf+VbgO/4Coym9cDrgVLyr8epFr6Ikt4lqO1xmJCPKlqrJODuEgSReBqqrExcURFhbG5s2b
      cblcZGRk4HA4CAkJwW63k5eXh81mo1OnTuzYsQNVVRk8eDDZ2dn07dsXo9FI//796d+/P4mJ
      iVitVgwGA9u2bWPs2LFUVlZy/fXXA1BbW8vhw4d58MEHiYqKQlEU9u/fT48ePRg6dCgTJkxg
      /fr15ObmUl5ezuzZs9Hr9axcuZL777+foKAg5s6dS2lpKRs3buTf//43q1evJjU1VRuU8Epw
      WQeAxjr9StwH1+LKWYtaug+EigCchgBOmHtiDRzEQdGdkJDgxl4wRl9A3ulLUmsJCAjAZrPR
      pUsXiouLOXLkCCNGjECv19OzZ0/S09Pp0KEDRqORffv2NRstFhp7D3377bfMmTMHt9tNaWkp
      0dHRtGnThiNHjgBw8uRJSkpK2L59O0lJScyfP59t27Zx++23ExgYyPLlyzl8+DBPPvkk8+bN
      IzAwEC8vLyorK/Hy8uLFF18kOjqa3r17A41VSk1dUq8kZx0AmopP/v7+dO7cmWPHjhEaGoqv
      ry/19fVYrdZmrfQXkhAqnoKduLJX4z6UCO7GmaCcijdFQQkcNfSiKjgeuwuMBh1um5wp6kI4
      fPgw9fX19O3bl/LyclRVJSIiAlVVycnJoUePHnJmKakZIQRlZWXExsaSlJREQkICpaWlKIqi
      Vft4PB5OnjyJj48PnTt3bvEdSk5OJi4ujoCAAPbt20dsbGyLdUJDQwkPD+fee++luLiY8vJy
      amtrCQ4OZtWqVdjtdv7xj3+g0+kIDQ3l+PHj6HQ6oqOjmTt3LmPHjmXIkCFAY5fS2tpacnNz
      iY2NvTgX6iI56wCwe/duAgMDyc/Px9/fn6ysLPz9/Rk5cqT2AMaFDgDCZcd9KJGG9KWN9fo0
      VvGUWnqS73sNpYHX4NL7YnO68EIPXLkPcLS24uJiiouLiYyMZM+ePdTW1lJTU8PEiRM5evQo
      P/74I927dz8v00ZKlz9vb28yMjLQ6/X06dMHs9mMEILMzExUVcVisWC1Wtm/fz89e/YkNTWV
      +vp6zGYzR48epV+/flqDbGZmJtOmTQMgKSmJW265BYAPPviAAwcOaPOWDx8+nCeffJLo6GhK
      Skro168fiqJQWlpKXl4eTz/9NEOHDuWWW27htddeA+Cxxx7jzTffZPXq1axevZo777yT6dOn
      aw+l3XXXXa1zAS+Qsw4AJ0+eJD4+nsDAQI4fP47FYqGhoQEhBA6HA19f3wuSQCEEakUurswV
      uA8lIuyNo/jZDcEc9xnIkYCR2Cwx2Bs8eOuNFyQNUktFRUX06tWLgIAAfvzxRwwGA97e3ths
      No4dO0bnzp1bO4nSJaRTp0506tSp2bKxY8cC/9fQ+9O/r7vuOu3/7du3b7bdn/70J6DxYdOa
      mhqt7/59993XbD0hBJMmTUJRFN566y1mzJgBwKxZs1qk79VXX9WON3fu3BbvDxgwAEVRrrgS
      7Tm1AQghcLlc2lNrkZGR7Nu3j4iICEpLS89rwoTqxp23BVf6MjzFGSA8CKDa3I7DfiM55j8M
      YbDgcquYuLI+lMuBTqfD7Xajqqq2rE+fPmRmZqIoyhU9gqJ0fvw8M/3p32eT0aqqytSpU0+7
      7k8z7N/97ndnvEn9peNdqd/nsw4AnTp1YvPmzdTU1DB27FisViuxsbG88847/PGPfzxvAUA4
      a3HlfIcr83PU8lxA0KCYKQ4YQrbvKKotnRCKDlUVl3cL9mWuc+fObNq0CV9fXzp16kRhYaE2
      uuOoUaM4fPhwaydRusJZLBbatWt3Vut269btAqfm8nTWeWjnzp0JCQnBZDLh4+PDiBEjMBgM
      zJw5E5PJpE2+cK6EEAhHFWpJFu4jm3Af2YywNQ7vWqsLIj/0Rg5arsVtDkJVhbzXv0T4+/tz
      ww030NDQQGBgIG3btsVoNHLrrbdiNpuJiIi4Yu+apIvjdM8CtAaPx9PsATZVVa+IKqHTBoCm
      wdx+qumpuaZBmJxOZ7PXpuXQOJjUKceZEyquvZ+g1pWAsx61thhRX45wNc2nq8Nm6UR+2DiO
      GOPQm70RbhWzHlQFUEABVB3odY3DmRr1Agxg0v+3F4EBzHpQBBj04GVQMOrEeXgF039fjfrG
      5abzuv+zfzXpQTWASQ/m/577uaTL9N911f9uqwjQK2qzz7CJ2+3G5XJpT1k20ev1WCyWFt+D
      n782aRrUS7ryeTwevvjiC8aPH4+fnx/p6ekMHDjwrLevqKggPT0do9FInz59WozR82t8/vnn
      7Nq1C4fDQY8ePRgxYgTvvfcefn5+TJw4UZtDQAjBl19+SXJyMq+//jorVqwgPT0df39/nnzy
      SbKysli2bBkWi4Wnn376sn4w7LQBoL6+vln97q+hqqr22HYzXSeddhshBBZFIRY4mw5Xqqqe
      053mhV4fGs/hXDK6i7E+nN2dVF1d4zMSPz1vs9lMQ0PDbx4h0mg0yl5BV5GQkBB2797NyJEj
      qa+vRwhBVlYWNTU19O7dm7KyMrp06UJWVhZdu3aluroaPz8/fHx82LNnD6NHj9baG/Py8igq
      +v/svXl8FuW5//+eZ82TfV8hISGGJSGAIGGnRQRUUNSjnmq1amuty+94TrX6be3veLSe2tOv
      nvZYtVZbtHpwq4DggmAgYSdAWEP2fd/3Z5+Z+/tHzEhIWAVCYN6vFy+eZWbueybzzHXd931d
      n6ue0NBQJkyYQFFRES0tLSQlJWGz2SgoKCAwMJCJEyeyf/9+ZFkmPT2d1tZWwsPDCQgI4M47
      7+TOO+/k9ddfZ8qUKZSVlXH99dezdOnSAWqcLS0t5Ofna6GpO3bs4H/+53948803OXz4MKtX
      r+aZZ55hx44dbNu2jRtvvHG4LvF35qQGIDQ09Dsf3OPxnJV2hqqqqKp6VtKoZ9vGhd5eCIEs
      y1rI2pkgy7IWunYmeL1eTVPlTFAUBSHEBb2uOjonYrPZ8PHx0apstba24vF4mDp1Kvv27cNs
      NhMbG0t1dTVms5m2tjYyMjIQQmA0Ggf8hiIjIwkICGDfvn1cddVVWvKYxWJh586dZGRkcOTI
      ERoaGujp6WH27NmYzWaio6MHHKejo4Pi4mJ++tOfkpWVxbZt29i4cSMPPPAAU6dORQjBO++8
      w/33388f/vAHoC+E9a233qK0tJT4+HicTichISGMGTOGAwcOXNyLep7RKjelcgAAIABJREFU
      11F1dHQuGJMnTyY7OxuLxYLD4aCtrY2SkhJiYmLw8fHh4MGDTJgwgYaGBoQQmM1mLdpQURRt
      xJiTk0NCQoIm4jZz5kyOHTuGyWSit7eXkpISLBYLwcHBpKSksHfvXhITEweFkH766acsX74c
      k8nE7NmzWbRoEUePHiUzM5PJkyfT1tZGaWkpK1eupLS0lC1btvDss89SWVlJZ2cnsbGxWCwW
      enp6aGhoGFKWeiRxQQ3A2XjB0DdFcbZTBGfbxoXeHjjr4g5ne85ne/xzWYw9l/PW0Tkek8mE
      2WwmJiaGmpoaYmNjKSgowOVyYTKZSEpKYuvWrVxzzTXU1tZq2vuSJJGWlsbXX3+Nr68vEydO
      1IrH9E9RFhQUaIqfSUlJtLe3I0kSvb29VFVVadM3BQUFxMTEEBwcjNPpJD8/n7vvvhuAzz//
      nAMHDmC323nwwQfZsmULPT09vPnmmwgh+PWvf83ChQtZuXKlVjksLS2N5cuX89xzzwHw7LPP
      Ds/FPU9csIpgOjoXC70i2PnnQlUEE0Jonv3p1qT6tzWZTKiqiqIommOiqiperxeLxYIkSSiK
      ouWfKIqCoihnNIXp8XgwGAwYjUbeeecdfvCDHwyqYqgoCk6nEz8/P63PLpfrvK1pDWdFMN0A
      nAFnu+iqc3HRDcD552KUhNTpYzgNwCUdqC2EYMOGDdjtfSGiBQUF5OXlnXa/fr3vurq6s24v
      Pz9/0Oc5OTnaa7fbzaZNm+jq6jqrY7e0tLBp0yY2btw4ZKjliXi9XrKyss5YfdDlcvHVV18h
      hKCxsZH29vbT7iPLMtu2baO+vv6M2tDR0bm8uOQXgXt6eigoKGDatGlUVVVhMplISEjQxOkS
      ExPxer2EhYVRVVVFQkICjY2N+Pn50d3dTVxc3Fm1V1dXR1RUFH5+floIa78B6v/eZrPhcrkI
      CjrzgpG5ubksXLhQG6bW1dVRWlrK5MmTcTgcVFRUYLPZmDp1KpIkUV9fj5+f34C2T4XX66W2
      tpby8nJkWcZms2E0GsnNzSUxMRF/f3/8/PywWq00NjYSFxdHY2Mj/v7+dHd3Exsbe1bXSUdH
      Z+RzSY8AoC8ctaOjg56eHoKDg4G+xaXU1FTtYZeTk0NnZye1tbUAjBo16jsVc66traW3t5e2
      tjZaWloGfJeUlKT142y4+uqr+eKLL7TRxJEjR5g9ezY5OTmUlZWRmpqKEEIbtSQkJJx1KO7E
      iRMpKCjQ4v537tzJ/PnzKSoq0uS8KyoqtPJ3o0aNIiIi4qzPRUdH5/LgkjcA0Cc7sGfPHq04
      Q15eHlVVVVqdT19fX/bt26d9f670LyRdCMLDw1mxYgUBAQGUlZXR0NDA3r17iYyMxGAw4OPj
      Q2Bg4NCJc2eIwWAgNTVVmyYzGo0YjUb8/f01T7+qqkoru6ejo3Nlc8lPAfVn92VmZuLr60tg
      YCA+Pj40NjbS29uL0WhkypQpfPbZZwQG9pVyLy8vp6ioCI/HQ2Bg4BlNAxUWFlJeXk5qaiom
      k4mdO3cihGD69OkDFhcLCgooKyujrq6O6dOnn3GK+uHDh7VEmO9///ukpKTg8XiwWq14vV62
      b9+OoihaubmSkhIKCwuRJAmbzUZ0dPQpj280GvHz82PMmDHk5uZisViIiYlhy5YtQF8yS2xs
      LB0dHQOyKwsLC/F6vQQGBurTQDoaI1HHyel0aqGnI4nhDDAZsVFA/WJMAFlZWSQmJn6ngjRC
      CIQQWqJJf+TP+fzjHC8gdXwbe/bsYcqUKdqI5nxyYptwaYhrnU/0KCAd6Mvy7Rer1DkzRqwB
      6EcIockWjNQHmyzLZxQXrTM0ugHQAd0AnAuX/BTQ6ZAkCavVOtzd+E4MVwywjo7Olc3Im+jT
      0dHR0Tkv6AZAR0dH5wpFNwA6Ojo6Vyi6AdAZVoQQA2Qrurq6qK6u1qKk6urqtO/7s6Ltdvug
      6mQ6Ojpnj24AdIaVPXv28I9//APo01navHkzLS0tHDhwgMLCQqqqqti1axednZ3s2rULj8dD
      ZmbmMPdaR+fyQA8/0RlWZs6cqXn21dXVTJ48mbFjx7Jx40ZMJhPz58+nvb2diooKHA4HmZmZ
      zJ07F5PJpMn+Qp8W0ok1iHWuLLxeL5Ik6ffBWaAbAJ1h5fjch+MT8fqT1/rF8+Db0pb97/ul
      LvorSY30cGCd74bZbNbvg7NEnwLSGTaEEDQ3N9PV1UVDQwOxsbEcPnyYoqIiAgMDCQ8PJy8v
      jwMHDhAfH09AQADXX389WVlZul69js55YMRnAuuMXIQQVFVV4fF4kCSJxMREOjo6aG1tZfz4
      8QCUlpbi5+en6RiFhITQ09OD0WjE19dXO85QmcCqqqKq6kU/ryuV4U5o1DOBzx7dAOiMeE5m
      ABRF0Q3ARWS4Rdh0A3D26FNAOjo6OlcougHQ0dHRuUK5ZAyAw+HgcpmN8ng8FzVRye12a+GQ
      Ojo6OmfKKVdtZFlm3bp15OTkYDKZWLZsGbNnz74gHXn++ed5/vnnsVgsJ+1LZ2fngAIs7733
      HvPnzychIeGs26uqqmLlypUAWtghwCOPPEJUVNSQ+7S1tREQEHDSPvazZs0akpKSmDFjhvbZ
      jh072LRpEwaDgZiYGJYtW3bW9Yr7aWpqIiIiQguHXLt2LcnJyUyfPv2cjqejo3NlcsoRwKpV
      qygpKeGXv/wl//qv/3raB9934XTJG62trfz5z38e8NmCBQvOuaZtbGwsjz/+OI8//ji1tbXa
      61NV+Fq5cqVWs/dUyLI8yCMvLy8nIyODRx99lOTkZJ5++mmqqqrOqe8vvfSSVtf3ZO3pXBwO
      HTqE1+ulq6uL/fv3A1BcXEx3dzeKorBp0yaamppwuVwcOXIE6ItOys3Npa2tjczMTDIzMzl8
      +LB2TCEEx44dG1CPurKykszMTHJycnC73dTV1Wn7FhcXA1BXV8fmzZsRQuBwOCgsLEQIwYED
      B3C5XBfxquiMFE46ArDb7Wzfvp1XX30VHx8fACIjI2loaODYsWMsWrQIgA8//JBbbrkFWZZZ
      tWoV3d3d1NfXM336dFwuFwUFBcTExPD444/T3Nw8YN+PPvqIm2++WTs+QGdnJ2+//Tatra34
      +Phw7733EhISwquvvkpBQQEvvvgiycnJ3H777Rw5coQ5c+awfft2kpOTGTt2LADr169nxowZ
      hISE8Ne//pXKykpGjRrFQw89pLVlNpu1ouvHvwZobm7mz3/+Mz09PUyYMIF7772X7Oxs9u/f
      T3t7O4GBgdx1113Y7XbWrFmDw+EgJiaGH//4x1po4lAEBAQQERHBtddeS3BwMCtXruS5557D
      4XDw1ltvUVdXx5gxY/jxj3+MxWLh008/5cCBAyiKwvz581myZAnvv/8+hYWFvPzyy/j4+PDw
      ww8DkJuby5dffklPTw+33347s2bN4vDhw6xevRpFUZg+fTorVqzQi86cZ7Kzs7FYLFRXV/PB
      Bx/w17/+lffee4+f//znVFdXs3r1aqqrq7nnnnv4y1/+wp/+9CfKysrYsmUL8+fPZ8eOHcyd
      O3fAMd977z02btzI448/rjk427dvx263a+VKk5KSqKysHFAHe82aNRw7dowpU6bgcrlYv349
      y5YtY926dUyZMuWiXhedkcFJRwCNjY3ExsYOeDhDn1hXYWGh9v7AgQPIsozH42HXrl3cdttt
      PPfcc3z22WdMmjSJ559/nvb2durq6uju7h6wb25u7qC5ckmSWLJkCb/61a+4+eabef311/Hz
      8+Puu+9mwoQJPPTQQyxduhSAo0ePYrfbCQ0N5bPPPgP6RhIbN24kNDSUDz74gKioKH7729+S
      kJDA+++/f9oLoqoqv//971m2bBkvvPACqqqyevVq5syZQ1paGnfeeScPPfSQdm3uv/9+nnnm
      GYKCgvjiiy/O4JL3kZ6eTm1tLaqq8u677zJ27Fj+8z//k5CQENasWQPAmDFjePLJJ3nqqaf4
      9NNPaW9vZ/ny5SQlJfHAAw/w4IMPaiFvDoeDf/mXf+Gpp57iww8/RAjBn//8Zx5++GGefvpp
      Ro8efcZ90zlz0tPTycvLo6ioiKuvvpqGhgacTidBQUHs3LmTe+65h8LCQiwWCwkJCZSXl7Nr
      1y7mz58P9MXOW61WbDabdszbb7+dG264YVBbU6ZMYfny5dTW1gJoWa8+Pj4oikJNTQ233HIL
      HR0dQN+I4C9/+QuPPPLIiKzxq3PhOeldcXzK/ZkyevRoEhMTCQgIIDIykilTpmCz2QgLCzvj
      RdGAgADa29tZtWoV2dnZtLW1YTQaCQ4Oxmq1EhoaOijee8qUKRQXF2vD7NTUVCwWC7m5uSQk
      JFBQUEB8fDy5ubmnXWju7e0FYNq0afj4+HD33XeTk5ODr68vPj4+BAUFERoaitlsJioqiv37
      9/Puu+9SUVFBY2PjGV+r4z3xI0eOEBMTQ0FBgVbUHSA0NJR169axatUqnE6nNvqwWCyEhIQQ
      EhKi/Y3mzZtHWFgYYWFh2mfx8fG89957FBYWMmnSJN37vwCkpaWRn5+P3W5nxowZZGZmEhsb
      iyRJ7N69m8LCQpqamqipqWHu3Lns2bOHo0ePah65x+PB4XDg8Xi0Yx5vDI7n73//O6+99ho/
      /vGPgT5np3/f0tJS2traKC8vZ+/evdqxvV6v/vDXOSknvTMiIyOpra0dcGNeDL766it27drF
      4sWLueWWWzQP91QPL7PZTHp6OocPHyYzM5MlS5YAfXPjJSUlFBUVUVZWxq233nra9k80fP3a
      NEPx3//93wDcdNNNXHfddWd8jgBFRUXExMRgMBjweDwUFxdTVFREbW0ty5cvp7e3l9/85jdM
      mTKFW2+9lXHjxp3V8SVJ4umnn2bx4sXk5uby5JNPXvS/5ZVAREQE9fX1+Pn5kZKSwoYNG5g4
      cSJNTU0EBQUxe/ZsbrjhBnbv3s2UKVPYuXMngYGBml6Nv78/ERERA6YOy8vLaWpqorq6mra2
      Nu3z+++/n+eff57U1FQAgoKCiIiIwMfHhx07dnDLLbewYMEC8vLyEEKQmJjIQw89xCuvvKIn
      xOkMyUkNQGBgIJMnT+att97C6XTS3d1Nfn4+FouFtrY2ZFmmvr7+jBZF+zGbzafdt6Kigrlz
      5zJq1CgaGhpwOBwA+Pn5UVdXp3k1J7J48WLWrVtHW1sbiYmJQN/w3Gq1cvPNN7NkyRJsNttp
      vWB/f388Hg+FhYXIssyaNWuYOnWqdk0qKyvxer0oikJjYyPz588nLCxMW4g7FW63G7vdzqFD
      h3jppZe47777AJg4cSKBgYHcfPPNLFq0CB8fH1pbW4mNjSU1NRWDwTBgwdhkMtHU1ITH4zmp
      cRJCsHfvXiZOnMhPfvITJEnSFwIvAJIkcc8993DjjTcSGhrKPffcw4wZM1BVlR/96EdMnDiR
      m266iYSEBGw2GzfffDO33347AAkJCSQkJFBSUkJ9fb12zJKSEuLi4lAURTMA11xzDfHx8do2
      6enp+Pv7U1JSQktLC+PHj+e6665j4sSJLF26FH9/f6699lrS09O57rrr6OnpubgXRmdEcMow
      0J/+9Ke8++67PP300xiNRpYtW8aCBQswGAz84he/ICwsjEmTJmE0GjGbzQO81LS0NM2TTkpK
      wtfXl/Dw8EH79uuHTJw4EYPBwM0338wf/vAH1q5dS0pKCtOmTQP6HsyzZ8/m6aefZurUqdx7
      770kJydraxSJiYkYDAauvfZard17772Xt956i2eeeQaz2cyyZcuGPM/09HTttdFo5IknntAW
      gceMGcNjjz0GwIoVK3j55Zf58ssvefTRR7njjjt49tln8fX1JS0tTTM8cXFxhISEDGhj9OjR
      fPnll2RmZhIREcGvf/1rbdH6wQcf5M0339QWFFesWEFCQgLBwcE89dRTBAUFMXXqVG00dPfd
      d/OnP/0JX19f/s//+T/ExcURHBwM9I1Y+j3EkpISPvnkEwDmz58/aOpM5/wwb9487fVNN900
      6Hs/Pz9mzpwJoK1fAURHR3PnnXcO2r5/BHs8/dpI/SQlJZGUlDRkf/rXF/p/O/3vdXRORNcC
      0hnx6FpAlwa6FtDIQ18d0tG5RKipqdEieE7ll7lcLoqKiobc7vj3/WU1T/ZeR0cvCKOjc4Yo
      ikJWVhZms5ng4GDS09MHrSk1NjYSHR19Rsfbvn07W7du5Ze//CVGo5HVq1ezYsUK3njjDVpb
      W1mxYgXz5s2jpKSEv/3tb/zqV78iMDCQnTt3YjAY2LhxI5WVlcyZM4dbb72VTz75hJycHH76
      05/S3d3N6tWrMRgM/Mu//AsAr7zyClarlSeeeEL3knUAfQSgo3PGCCGwWq3Mnz8fi8VCUVER
      3d3d7N27l/z8fNrb28nKyiI3NxeXy0VzczM5OTm0tbXhdDppaGjQjuVwOPjiiy9obW0F+hIv
      +yVJ/vmf/5lnnnmGTz/9FFmWee+997RcGyEE+/btY9KkSSxYsIDf//73bNmyhdraWnJzc/nN
      b37D2rVrEULwzDPPMG/ePLZu3cqqVau44447mDFjBuvXrx+uS6hziaEbAB2ds0SSJFJSUmhq
      akKSJFJTU+nu7sbj8RAVFUVaWhpGo5G8vDymTp3KwYMHMRgMWuinEIJ3332XH/7whxiNRgBy
      cnLIyMggISGBgIAAXnrpJRYvXkxmZibXXHMNQUFBAPT09GgBFSkpKfzxj39k2rRptLe3M3bs
      WGw2Gw0NDVxzzTUUFxfz+eefM3fuXOrr6xk/fjypqalUV1cP27XTubTQp4B0dM4Bu92O1Wql
      srISu92O3W7H6/Vqmb12u5329nYOHTqE1WrFYrFoBqC3t5fs7Gw6OzspLS0lOzubgwcP8thj
      j9HR0cGzzz7LI488QkpKCo899hijR4/m6NGjfPnll4SFhTFv3jxkWebXv/41N910E/Pnz6e8
      vJyuri6gL2Jux44dbNiwgRdeeIHg4GB8fX3p6uqis7MTf3//4bx0OpcQugHQ0TkLWlpa2Ldv
      H+3t7cyfP5/9+/cTFBSkxetLksShQ4cYN24cQUFB2Gw2DAYDvb29NDQ0kJKSgr+/P++88w7Q
      p+w6adIk8vPzsVqtfP311zgcDj777DMiIiJ45ZVXEELwu9/9juuuu4533nmHpUuXUlhYSFVV
      Fbt37yY3N5ef/exnNDU18bvf/Y6MjAzWrl2L1WrljTfeYO7cuSxZsoT/+q//wu12a2sClyPd
      3d0YDIaTZlPrDOSkYaC9vb3nJYROlmVtmHulMpIlGNxut+a5flf8/f0viCzBxQoDFUJoyXRW
      qxWDwYCiKHR2dhIQEIDRaEQIQXd3N8HBwQghtCkbk8mEoiiDQiXtdjvZ2dnExsYydepU3G63
      pvRqNBq1c3I4HPT29rJmzRp+9rOf4fV6sdvtQN/9FRgYiMfjobm5mbi4OBwOhya/4uPjg9Vq
      paWlBZPJREhIyAW5Jy+FMNAPvj7EHQsnnVLVV+dbTjoCOF/DxKGydq80jEbjiNVjqaurO2fJ
      7csNSZIGeZZGo5GwsLABnx2vLNufoAcMeQ/4+flhMpk0VU+r1TqkwfX19aWiokJLEuuPRDoe
      q9Wqif4N9fuNjIw85fldDnhkPcz1bNCngHR0hpmhMn+Hoj/DW+fcaG9v50hxDfOuSbviZyX6
      GZluqY6Ojs5Zoqoqh8rb9GS449BHAFc4Qnbh2bcStacBn4X/P5LpwlV9G4lUVFRgMBhISEig
      vr6e0NDQQTUyToYQgsrKSmpqaoiMjByk53MueDwe3n//fVpbW8nIyGDu3Lnk5+ezYcMG4uPj
      ueOOO4C+bOGPPvqIlpYW7rrrLmJjY2lra2PVqlXcd999yLLMxx9/DMAdd9wxYNpqpHOstJZJ
      BsNldU4XCt0AXMEI2YPry6eRyzaD2Rcx53Ekk754djwtLS00NTURFxdHU1MT/v7+GI1GKioq
      iIiIwGKxYDabEUJohWC6u7u1yKDa2lrmzp2Ly+VCURStmMvo0aMRQlBVVYWvry9RUVE0Nzdj
      t9tJSEjQyj5GRkYSEBBAZ2cnoaGhCCGYPHkykZGRPPfcc0yePJk33niDp556asCC90cffURg
      YCCLFy/G19cXIQQrV66koqICu93OunXrSElJAeDjjz/mZz/72bBc3wvBwfJ2Jo79tt52e3s7
      BeX1Jy2b2tvbqy3Qn6qi3+XIFTMFVFBQoEVNHM+J+ih1dXVaxubZ6KqMNJ0VIQSe3HeQyzYj
      DL4Yxj2KwU9/+A9FamoqeXl52vtdu3YRGBjIvn376OzspLi4mMLCQvbu3Yvdbtd0empqajRV
      XF9fX1wuF0IIurq6KCoq4vDhw1o0T0tLC2VlZUBfgaBdu3ZpsfuqqtLZ2Qn0LfS63W7+8pe/
      MGPGDBoaGuju7ua1114jOztbMwJ5eXkcOHCAV199le7ubvLy8ggMDNQkpWfOnMn69ev57LPP
      yMjIuJiX87xQVVPP0cIy7b2qqgPqZAMI0XctFEVhX3EzB8raGIqtucWsyTpMYfmZS9tfLgzr
      CGDz5s1a4sz06dM1aeh+6urqiIuLO8ne39Le3s7//u//Mm3aNGbPnk1hYSEffPABTzzxBEFB
      QQghWLt2LQ888ACvvfYaS5cuJT09nczMTDZu3EhcXByPPvooZrOZ9evXs3jxYn7729/S3NzM
      woULmTFjBn/4wx8wmUw8+eSTNDc38/e//x2Xy8X999/PmDFjePnll3E4HDz66KMkJCRcqEt2
      XhCyG++h9/Hk/BmBhAhZDrbk4e7WJUt0dDRVVVXYbDaEELS1tWnZtAEBARQVFWGz2QgMDKSs
      rIwxY8YAfXUb3G63dhyn00lVVRUWiwWj0UhKSgoHDx7EYrFgt9txuVy0trYihGDs2LEUFxcT
      ERFBfHz8AOnnlJQUzGYzf//735k1axapqak88cQT/PKXv6S9vZ3w8HCsViuPPfYYdXV1rFmz
      htLSUsaOHUthYSFZWVl0dHRwyy23oKoqe/bs0WpejBRau+xUNHQyaXyfpLqqqhRXNeKDizi5
      DNPmVTiUbgyBozC7Hcz2hFDpDmGSvA/voRoMV/8Qg8GI3W7H4fbS65KRlZHjwJ0vhtUAGI1G
      FixYQG1tLYcPH2bcuHHk5eVhNpsZO3Ys2dnZJCcnM2HCBK1qVkJCApGRkVoBdYD9+/cjyzJd
      XV1aIZSenh4tDrq1tZWwsDBycnKQZVkbCaxfv56XX36Zt956i0OHDpGenq7Fk//gBz8gJiaG
      n//855SXl3P33XfT0dHBunXrmDlzJk899RQNDQ18/vnnjBkzhoyMDJKTk1m1ahW/+tWvhuuS
      nhbhseP88hcoFdsQgGq+Bsk2Ybi7dckzZcoU/vGPfzBx4kRCQkKIiYkhICBAyweQJIm4uDh2
      7typhXSOHTuWrKws0tPTtfszOjoah8OB1+ulp6eHCRMmcPToUUaPHk1HRwejRo3C7XYjyzKp
      qakcPHiQ8ePHU11dTVJSEiUlJWzbto3o6GicTifx8fHU1taybt06nE4nNpuNzz//nJkzZ7Jy
      5UqsVivJycnceeedyLJMW1sbkydPZufOnRQWFiKEGPERMbIscyCvGD93I7d63sXW0TdaUwG1
      uQAjMOGbfwDe7UWoxRswxqSzuyeJNtflHx57Mi6JNYBRo0ZRUlKCyWQiPT2diooKWltbiYuL
      Y/r06UiSRFZWFt///vfZvHkzUVFRBAYGavsvXrwYIQSKomAwGPjRj340oIJW/74pKSkDqmKZ
      zWbWrl1La2urVp0sPT2dyMhI2tvbef7557n++uvZunUrKSkpdHR0sHPnTsaNG0dxcTGvvfYa
      jz76KBs2bGDFihVER0dr6fiXGkII1PYy3JtfQKnbj1AtiNDlyI4ohjd959JmwoQJWK1WfH19
      WbFiBb6+vsybN4/q6mpCQ0OxWq1MmzYNo9GI1Wpl0aJF2gPV19eXhQsXUldXR3h4OKNHj6a8
      vJz4+HhNGqKyspJJkyYRFRWFn58fnZ2dmhGor69n1qxZGAwGLeY/KSkJh8NBZ2cnL774IgEB
      AbzwwgscPnyYf//3f6empoaoqCimT59OQkICXq+XqVOnaolfDz30kLYgffDgQYAR5/2fiBCC
      gqMHuc52AIRKsxRN+OTr8Uv5Hl11xVTX1BFS+xVWk0S1iGOC9wBKUx5qUx4ZwCRho9g2A5P0
      2HCfykXnkjAADocDk8lEVVUVra2t2g1vMBgwGo2a57J//37N4zrTFX5VVSktLdXK8B3Pf/zH
      f3Do0CEqKyuJiIhg9+7d3HffffT29vLrX/+aRx55hLS0NA4ePEh7ezsdHR34+/tTXFzM66+/
      zrPPPktERAQ7d+6kra2NwMDAYc+GPBneIx/hzv4dqDLCEIBsXY5kGQOOS9NgXSocn118fCLV
      8VMyx29zYgaqzWYjOfnb6bX+hdeh3oeFhWlJZVardYCT03+/G41GJk+ePOAYgYGBWlUyHx8f
      rfTppEmTBp3PqFGjtNfTp08f9P2IRAgWsBVJ9eGAmExh5CzuTptEUEQEink0W0vzIOJqbfP9
      3pv4ybxIRNV2nIVf4etqY4prK6LSCun/PYwncvEZVgPQ3t7Orl276OnpYc6cORQXF2MwGOjp
      6dEErPbs2cPEiROJiorCYDBoRdSLioq0H8KHH37I9u3btYXYgoICjh49yiuvvML111+vrSOs
      XLmSXbt24e/vjyRJlJSU0NDQQEtLCxMmTCAnJ4eAgAC2bdtGW1sb//jHP9iwYQPLli3jt7/9
      LYqi8G//9m9s2LABj8fDq6++SlpaGtdddx2/+93vsFgsQxqa4UTtbcaT+w7eA+8BAmGbhFeZ
      gmQOO+2+OiOPK7Hsp8j/hNDWXdjjFlJk+dao9dcTPxGvORjD6AzK1FHs7ZlLUG8xcxpfxVq2
      Ccean2K74SUkn8Ah973cuOAlIU8lBdE/R280GpEkSdN08fX1RZIDRex8AAAgAElEQVQkJEnC
      brdr710uFxaLBYPBgKqq2lDb6/Vq0Q9GoxFVVbWInA8//JDvfe97xMfHI8uytp3JZNLmZcPC
      wtixYweSJDF//nwURdH6JkkSZrOZ3t5eLZpDURQtpMxgMGA2m7V53cDAwEE6K8MhBSGEivfI
      x7h3/AE8dgRGFOsCDOHz8La0YrCYkXx9UTq7MEdGYIqJwW/unEHHOdOF+OFELwl5aXAxR7+5
      eSVUNHRyy9RgHB/chZDdlCX+hK2OvvWXO743no6ODiIiIng/M2/Q/o/ePo9PMnNp7eozEuO9
      B5na9gFW4cKUshTbjS9dtHMZToZ1BHBi1I8kSYN+xMdrmhyvw3L8wtXJbjwhBLGxscTHx2sP
      8uMxGo3asN5oNHL11Vdrr09cGDu+XyaTaVDfTxY/LIRAlmUslouTYCVUFblkE56D76E2HAZA
      EXFI4QtRegIwjGBhOh0dj8fzjQOmInu99GT9X4yyk2PSZHrDZoGjB4CsAxVMSQzWHLnTUWie
      SuDkCUw89ixy8Ua8YxdiHn8Dbreb0spaEkfHXJY5ApfEGsCFQpIkrrvuujPadu7cuResHx0d
      HRiNRkJDQy/YSEAIgdpRgWfXq8glXwMCISyI0BtQnHEYLaFA+wVpW0fnQqAoCl6vVxv1Axwr
      qaKoqhm3V8W/uxBD6x5ko41c/5sZx7fOTUu3GyEEWw9WDHlsu92OfEJimBSajHXO47izf4dr
      y28wxk1DMQbwdW4VP44dHCnUP/NwvtRyh4MrJhFsuJAkScsYraurGxAXfr5Qu2pxffkUjvdu
      Qy7ZhJAsKNb5eK33Inwnc6X+mUeqDPeZeq2XEhfiWjscDtZuyR2Q4OXyKLR0u7E73SQ3r0FC
      Za+YgewzdBJjc/fQvzePx4MYYnrQPPkHGBPng7sH17bf4/V6Ttq/qtoGMncfPcuzurS46CMA
      IQRff/21ppE+Y8YMDAYDNTU1VFRUYLVaSU1NPa0cdWdnJ4GBgRgMBnJzc5k2bdpp27bb7Xz4
      4Yc0NDRwww03MH78eN566y0URWHChAksXbqU4uJicnJyuPfee7X9ampq+OSTT/B6vfzoRz8i
      LCyMjz/+mPLycpYtW8aUKVNobW3l7bff5v777x9SizwwMBCbzUZzczM2m+07a7ILIVCb8/Hs
      X4lctQvcPQhMCFMKhC5C6ZJgZD7/zhv9QQMjCVVVaWlpITY2dri7cknQ1Dn0A3x0714SpRrc
      xkCKg85slH8mSAYjPguewl6zF7l4EzmOiUDikNt6ZZW23pMbiJHAsPw6/Pz8SEpKYsaMGdpD
      sKWlhfT0dCZMmMD27dtRVZX29naOHTuG0+nUIn/Ky8vxer1s27ZNK8rd09NDaWkpFRUVCCGo
      q6ujoKAAt9tNU1OTthDY1NREamoq999/P2+//TaNjY04nU5++MMfMmfOHNra2li9ejX79u0b
      0N+qqipuuukmpk2bxqeffkp2djZ2u53HHnuMhIQErcZrTU0Nvb29Jz1vs9lMbGwsBoOB+vp6
      PJ6zv3mEECiNR3Fnv4jjo3uRizci3A4U4lEjHkQ2LUGYdf1+nZGN0+mkrqF5yO+CRTvTutaC
      BFuMS1DM5ydip9vuoKm5BSk4AcvV9yAhmNKyCpPcc16OfylyUgOgqir19fVUV1ejqiqyLFNS
      UqJl0fY/dBVFweFwaBEX3d3dp2xQkiRmzZpFTk4OQogBXnB/ZaPw8HA6Ozs5ePAgMTEx5OTk
      aEJbbW1t1NXVYbPZCA4OxmKx4HA4sNlsVFRU0NHRwbFjxwgLC8Plcg0YPiYlJZGens5HH31E
      RkYG7e3tlJSU8MYbb1BVVUVYWBhPPvnkILXHuXPnYrPZ+OKLL5g5cyZ5eXmUlJTwwgsvUFJS
      wtGjR/Hz8yMxcWhP4cTzDw4OJiIigubmZi17+XQIIRCuLjx7/ozjox/iPfQ+QvGiMB4R9Qiy
      ZRlcBCE3IQQdHR2Ulpbi9XoRQlBdXU1rayvQNy9aUlKC0+lElmUtFK9fy0ZH50yQZZmv9lcN
      +swoZKY0vkOAwYkzfCoNwbPOW5sF1e2U17UhSRKWGQ9hiBiPzd3M8o7/Qd73Jq6SLOS6gygN
      RxCuSy9/pru7m/LKmrPSJDvpFFB7ezttbW3Y7XZ6enpobGwkPj6eLVu2cN1115Gdnc24cePY
      sWMHvr6+jB07lqNHj3LVVVcNSGA5ESEEZWVlJCUlDTk87w/p6w/zVBSFUaNG0dTUhCRJqKqK
      y+XCz8+P8PBwzGYzAQEBxMXF0djYiNlsJj4+nq6uLsxmsyYXAX2SEK+88go33HADGRkZOBwO
      Xn31VWpra3njjTd4+eWXB/RFURSEEBw6dIjMzEwee+wxEhMT2bdvHzfffDOJiYm8/vrrBAQE
      EB0dzZEjR9i7d++ANk+GxWIhLi6O7u5umpub8fPzw8/Pb9C0kBAqakshnn1/Q67cCZ5ehDEM
      4X81qghF8YZhNocBLadt83zgdruprKzEZrOxbds2wsLCkCSJ0tJSUlNTOXToEMnJyWzZsoWZ
      M2dSXl6uaeicWMFKR+dsKCs6Rsyh/yJIVNItBXI0/C5Ex7nNYrd3nPwBrqoqLq9K0+Rf4Lv1
      aUK8zUiH38Z7+G20oHazLwGh0xhty0CoGUiG4ZfTcLlcrN9VwuMJfcl+/SqnQUFBA7Y7XjXh
      pFcvPDwci8VCVlYW48aNo76+nquuuor29naqq6uJj48nJSWFyspKfH19+eqrr0hLSyM2NhYh
      hBb/f6KX7/V62b59O8nJyezYsYNZs2ZpYZf79u3DYDAQHx9PSEgIiqJQVlampdl3dnbidDoJ
      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
      AeX/AJFzIMjZ/3gHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='State- and County-Level New Cases and Deaths' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eXwURfr4/+45MpmZ3Bc5SEggCSD3ISIgCrL4W0VF1wMvFFS8j1XZ1ZV1
      ha/XouKH/aCrwiqIqHiAfgQFBOUm3ASIBgi5gISEXJNMMnfX74/Y7UwyubiEZd6vFyTprq6u
      rq5+nqeeeqpKEkIIAgQIECDABYfm9y5AgAABAgT4fQgogAABAgS4QAkogAABAgS4QAkogAAB
      AgS4QAkogAABAgS4QAkogAABAgS4QAkogAABAgS4QAkogAABAgS4QLngFYAQAqfT+XsX47zC
      4/Hgcrl+72L8V+PxeHC73b9rGWRZDrzn/3K0L7744outJZBlmW3btvH555+zYcMGKioqSEpK
      wmAwIITA4/EgSRKSJLXrhh6PB6Dd6c80RUVF/Otf/2LUqFHNznk8HtatW8fixYvJysrC4XDQ
      pUuXM1Z2WZaRZRmN5uT08ubNm3G73URGRp7mkvmyc+dOli5dyiWXXOJz/MiRI3z55ZckJSUR
      EhKiHl+3bh0Gg4HQ0NAzUh673c7XX3/N0qVLyc7OxmQyERcXd860sZPhhx9+YMeOHfTp08fn
      +LZt21ixYgV79uzh0KFDGAwGIiMjT/lZlW/Zu+3t37+fTz/9lEsvvfSU8g5w7tKmpFmyZAnv
      vfce/fr1Y+DAgRw4cID3338fgJqaGp599tkO3fB///d/+fnnn0+utGcAl8tFbW1ts+OyLDNz
      5kw+++wzLrnkEgYMGMDKlSvPaG9h+fLlfPvttyd9/fr168nPzz+NJfKPy+Wivr6+2fGioiI+
      +eQT/v3vf+O9wsjq1aspKSk5I2Wx2Ww8/PDD7N+/n1GjRpGWlsayZcvOyL3OJjabDZvN1uz4
      pk2bKCkpITo6GovFwnPPPcdbb72lGlYny/79+3n77bd9jjmdTqxW6ynlG+DcRtdWgmXLlvH8
      88+TkZEBwJgxY3C73bhcLqqqqigvL8disQBgNpvR6/W4XC6OHz+O1Wqlc+fOqjVotVopKyuj
      qqqKmpoadDodISEhCCEoKSmhuLiY1NRU4uPj27RohBA0NDRQWlqKJEmkpKSg1+uBxo9Hq9XS
      0NDA4cOH6dSpE0lJSWqesixz/PhxLBaL348MGq3cn3/+mXnz5mEwGAC48sorfe5/+PBhKioq
      SE9PJzo6GkmSkGWZhoYG9ZmFENTV1REaGookSdTV1WEymTh69CiVlZVkZGQQGhpKQ0MDJ06c
      QAhBTU0NkiQREhKi5qWU3ePxYLPZfCzs9lBTU8OBAweIiooiPT0dSZKwWq0EBwej0+nUslqt
      VvV+DoeD/fv3o9Pp6NWrl5quNa644gpycnI4dOgQmZmZftO4XC5++eUXXC4XvXv3VnuT3vUk
      hKC2thaz2azet76+nuDgYLRarZrXp59+SlpaGtOmTVPraNy4cerzWCwWjh8/TkhICImJiaqF
      q9Tz8ePHiY6OJjY2Vr3e6XSSk5ODJEn06tVLbVdCCKqrqykrKyMmJoaYmJhm7VSWZU6cOEFl
      ZSWdOnUiKipKTWO1WjEajZSXl1NSUkJaWpqP9e7xeCguLsbpdOJwOFqs40GDBnH11VcDcPvt
      t/PYY4+xevVqrrrqKrV+f/75ZzweD7169VLbrxCC+vp6SktL0el0JCcno9PpsNvtVFRUcOLE
      CWpqagB8emsOh4MDBw6g1+vp3r27Wocej4ejR4/icDhISkrCZDKd172uC5E2v+iEhAR++ukn
      0tLS1A9Rp9ORk5PDW2+9RXFxMc899xwADz/8MGlpaTz44INERkYSFhZGTk4Ozz77LJdccgmz
      Z89m165dHDlyhNDQUDIyMnjqqadYsmQJS5YsYcCAAcyePZt7772XP/zhD62Wa9u2bbz++uuk
      p6djs9morKxkzpw5REREMG/ePHbv3o3b7SYjI4Pt27fz7LPPMmzYMFwuFy+88AIFBQVkZGSo
      CqIpq1ev5uabb1Y/Hm9kWeaf//wnubm5dOvWjZkzZ/L4449zxRVXUFdXx2OPPcZHH32kpr/3
      3ntZuHAhwcHB3H333cTGxmIwGAgJCeHQoUN8+OGHfPXVV6rlumPHDoKDg3nppZf405/+xOLF
      i1W3zrp161i1ahWvvfZaW69OJTs7m5dffplBgwaRl5dH3759efTRR5k9ezZ9+vThuuuuAxoF
      7B133MGXX36JxWLhqaeeIj09nfr6eux2O6+//rrf+vBGq9Xy4IMP8s477zBr1qxm7qz6+nqm
      Tp1KeHg4BoOB//3f/2X27NmEhIQwYcIEPv/8c0JCQigoKOD2229nxowZjB07Fo/Hw5QpU3jr
      rbeIi4tT38NPP/3E9OnT/QqeTz/9lG+//ZauXbuqgv6VV15Bp9OxfPly5s+fz0UXXURRURFD
      hw7loYceoqqqimeeeYbOnTvjcrmoqanhzTffxGQysXTpUj777DN69OhBYWEhl19+Offee6/P
      PZ999lmqqqpISEjgl19+4YYbbuCOO+4AYOrUqciyDEBiYiJbt27lgw8+ID4+nhMnTvDMM89g
      MBiIi4tjz5493HDDDW2+W7PZzIMPPsjHH3/M2LFjsVqtTJ06laioKHQ6HW+//TZvvfUWYWFh
      rFu3jrfffpv09HTq6uqor69nzpw5bN68mfnz51NZWclzzz2HRqNB8QxnZ2czefJk0tPTKSws
      ZNCgQTz22GO43W6efvppPB4PYWFhHDp0iFdffVU1FAOcJ4g2KCkpEVOmTBE33HCDmDt3rigr
      K1PPlZeXi0mTJglZltVjLpdL1NbWqn/v3LlTPPbYY+rfL7zwgti5c6f6d0VFhbjlllvUa0pL
      S8WECROE3W5vtVx1dXXC5XKpf7/xxhtiyZIlQggh/vWvf4m5c+cKj8cjhBBixYoVYtasWUII
      IRYtWiSeffZZ9dqDBw+KJ598sln+jzzyiPj555/93nvTpk3ioYceUvMoKioSN910k6ivrxc1
      NTXirrvuUtPKsixuuukmYbPZhBBC/OlPfxIHDhxQzz/55JPqfT755BOxaNEin2tnzpwp5s+f
      rx575plnxMaNG/2W69VXXxWrV69udnzixInil19+EUII4XQ6xcSJE0V+fr7YvXu3eOihh9R0
      y5cvF6+99poQQojXXntNfPXVV2o5ZsyYIZYvX64+/yuvvNLsPhs2bBAvv/yykGVZ3HfffWLr
      1q1CCCGmTZsmduzYIYQQYsGCBWLOnDlqvnPnzhX/+c9/hCzL4u9//7v48ccf1bp44YUXxIsv
      viiEEKKwsFBMnjzZp605HA5x9dVXq++5KTU1NWp6j8cjpkyZotb1lClTxMGDB9W0FRUVQggh
      Zs+eLT7++GO1fK+//rpaD5MmTRIFBQXqucrKymb3rK6u9snzxhtvFE6nUwghxEMPPSQ2bNig
      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
      mTlzJpGRkQA+7UeSJDUPWZZZtGgR7777Li+++KK6DWdgS8a2mTx5MvPnz/eRC7t27VKt7S5d
      uqgyxuVy0dDQwLZt23j00UfZvn07dXV1uN1uoqOj1etlWfY7NqbVatHr9XzxxRd88803WK1W
      7HY7Xbp0Yf369fz444/ExsYSHR3N1q1b6dOnD4cOHcJqtVJfX4/NZqNLly58+umn7N+/n969
      e/u84xUrVjBnzhw+//zzVp9ZkiS1/cTHx/Pjjz+ycOHC1geBNRoN3bt3p3v37qxYsYLvvvuO
      e+65p1m61157jWHDhnHddddx4MABv74maOwOHTx4ULVQbrzxRmJjYxk7dixAiwOvTa/705/+
      BMBVV13FDz/8QEhICKNHj1a72YWFharlc91117XpdzcYDNx0002qBQmNL7SiokIVmj179iQ+
      Pp7o6Gg+/PBDduzYwcCBAzEajWzdupWcnBy1XNBY4cnJyeTm5jbbPPyNN95g4MCBjBs3joKC
      Avbt24dGo2H69OlkZ2ezbt06PvnkE2bOnInNZiM3N1e9VnEjtcS2bdvo2bOn6odWyp+amkqX
      Ll1avK5379689NJLZGVlMX36dO666y4uvfTSZum867JXr168//77FBcXU15ernaHATp16qS+
      V39uPkmSuOuuu3juuecYM2YMer2+mYtEq9UiyzJ6vZ4BAwawe/duNm7cqLo0WmoXHcXpdBIU
      FITH46Gmpkats4SEBNLT06mvr6d3795+N6Xfu3cv//nPf3jjjTd8BALAsGHDGDZsGLfeeivP
      PPMMx44d87uvsRCCV199lYsuuoibb75ZFSRxcXEUFxer6YqKioiPj0cIwWeffUZRURGzZs1S
      yxUaGkp1dTVutxudTofFYlH3OQ7wG127diUmJoZt27apx1wuFwcPHlR7VkobGzRoELt27aKi
      ooIBAwawePFi9uzZQ58+fXwEcbdu3fjxxx+bGX2//PILCxYsYMqUKYSFhZGXlwfAxRdfTFJS
      EllZWUybNo0HHngAWZYpKSlR3+fYsWPR6XQ88sgj/Pzzz2RlZfHRRx/xxhtvqLKyb9++dO3a
      tc33nJeXR2xsLEIIZsyYwS233MJll13Wcg8gLy+PdevW0dDQgM1mIy8vj06dOqn+3urqapxO
      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
      Nzc3ioqKOH78OF5eXsTHx1uv3WvMNpuN4uJi0tPTeeyxx2jfvr31GYnIt+yZwFu3bmXTpk28
      8cYb913Hlv8fkpKS2LZtG2+99dZdYRKRh+9bFYCUlBSaNWtGYGDgwx6KPADJycm0aNFCO3+R
      b6lvVQBEROT/jv5xFRERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQA
      ERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQM
      pQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIg
      ImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIih
      FAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBE
      RAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGU
      AiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCI
      iKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZS
      AEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARAR
      MZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoBEBExlAIgImIoBUBExFAK
      gIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETEUAqAiIihFAAREUMpACIi
      hlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQCoCIiKEUABERQykAIiKGUgBERAylAIiIGEoB
      EBExlAIgImIoBUBExFAKgIiIoRQAERFDKQAiIoZSAEREDKUAiIgYSgEQETGUAiAiYigFQETE
      UAqAiIihFAAREUMpACIihlIAREQMpQCIiBhKARARMZQCICJiKAVARMRQ7g97AA+K0+nA5XrY
      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
      EBEx1H8B4R0qi3uAtaoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Tri-State New Cases + Deaths' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
