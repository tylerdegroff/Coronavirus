<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0525.1210                               -->
<workbook original-version='18.1' source-build='2020.2.1 (20202.20.0525.1210)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Library/Mobile Documents/com~apple~CloudDocs/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='cases.per100k' ordinal='8' />
            <column datatype='real' name='deaths.percap' ordinal='9' />
            <column datatype='real' name='deaths.per100k' ordinal='10' />
            <column datatype='integer' name='cases.new' ordinal='11' />
            <column datatype='integer' name='deaths.new' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='cases.per100k' ordinal='8' />
            <column datatype='real' name='deaths.percap' ordinal='9' />
            <column datatype='real' name='deaths.per100k' ordinal='10' />
            <column datatype='integer' name='cases.new' ordinal='11' />
            <column datatype='integer' name='deaths.new' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.per100k</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.per100k]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.per100k</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.per100k</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.per100k]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.per100k</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' value='Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Cases per Capita - State' datatype='real' name='[Calculation_705305989324251140]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([cases] / [population]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Cases - 7D SMA' datatype='real' name='[Calculation_705305989325619205]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Cases per Capita - State' datatype='real' name='[Cases per Capita - State (copy)_705305989344137228]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new] / [population]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='Cases per 100K' datatype='real' name='[cases.per100k]' role='measure' type='quantitative' />
      <column caption='Cases per Capita - County' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='Deaths per 100K' datatype='real' name='[deaths.per100k]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_705305989324251140]' derivation='User' name='[usr:Calculation_705305989324251140:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_705305989324251140]' derivation='User' name='[usr:Calculation_705305989324251140:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_705305989325619205]' derivation='User' name='[usr:Calculation_705305989325619205:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Cases per Capita - State (copy)_705305989344137228]' derivation='User' name='[usr:Cases per Capita - State (copy)_705305989344137228:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Continental United States' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[state]' member='&quot;Alabama&quot;' />
          <groupfilter from='&quot;Arizona&quot;' function='range' level='[state]' to='&quot;Georgia&quot;' />
          <groupfilter from='&quot;Idaho&quot;' function='range' level='[state]' to='&quot;Wyoming&quot;' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[Calculation_705305989324251140]' type='field' />
        <folder-item name='[Calculation_705305989325619205]' type='field' />
        <folder-item name='[Cases per Capita - State (copy)_705305989344137228]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.per100k]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.per100k]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Cases'>
          <folder-item name='[Calculation_705305989324251140]' type='field' />
          <folder-item name='[Calculation_705305989325619205]' type='field' />
          <folder-item name='[Cases per Capita - State (copy)_705305989344137228]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.per100k]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.per100k]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Library/Mobile Documents/com~apple~CloudDocs/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='06/29/2020 03:12:46 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='277284' timestamp-start='2020-06-29 15:12:46.028' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>fips</remote-name>
              <remote-type>20</remote-type>
              <local-name>[fips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fips</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17679</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>207</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8739</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>84</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3718</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>947</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17394</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83717</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.per100k</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.per100k]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.per100k</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83717</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32524</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.per100k</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.per100k]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.per100k</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32524</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>636</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>128</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='cases.per100k' ordinal='8' />
                  <column datatype='real' name='deaths.percap' ordinal='9' />
                  <column datatype='real' name='deaths.per100k' ordinal='10' />
                  <column datatype='integer' name='cases.new' ordinal='11' />
                  <column datatype='integer' name='deaths.new' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State-Level Perspective' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='State-Level Perspective' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[New Case Density as of <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' name='[Calculation_705305989325619205]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_705305989325619205]' derivation='User' name='[usr:Calculation_705305989325619205:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6886359.2814061549' min='-14843174.940166993' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='7750770.9626842989' min='1317600.6739683654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f0e4db</color>
                <color>#f0d8c6</color>
                <color>#efccb1</color>
                <color>#efc09c</color>
                <color>#eeb487</color>
                <color>#eea973</color>
                <color>#ed9d5e</color>
                <color>#ed9149</color>
                <color>#ec8535</color>
                <color>#ec7a21</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' value='Average'>
              <formatted-text>
                <run>Average</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{B06C2684-0D41-49AE-A343-241CCF03CE02}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily New Cases with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989341708297]' role='measure' type='quantitative' user:unnamed='Nation-Wide Daily Cases'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_705305989341708297]' derivation='User' name='[usr:Calculation_705305989341708297:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='New Cases - California'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{FC1E0ECC-6390-475B-9680-86DD8698AC19}' />
    </worksheet>
    <worksheet name='New Cases - Florida'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{6BBDFAA9-8112-421F-98D7-D1517DEC995B}' />
    </worksheet>
    <worksheet name='New Cases - New York'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{B914B506-9BAA-4723-84A0-51BDFEAAB609}' />
    </worksheet>
    <worksheet name='New Cases - Texas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{1E4FD359-4CEF-41D5-949B-0B8517739889}' />
    </worksheet>
    <worksheet name='State-Level - Cumulative'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='15' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{8550A81D-22A9-4FA8-B532-9453397BA0F2}' />
    </worksheet>
    <worksheet name='State-Level - New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily New Cases with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='15' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]))</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{8FBE7C42-261E-41F3-B892-30C18CBDAE19}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93704' id='58' param='vert' w='98698' x='651' y='1048'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='59' w='98698' x='651' y='1048'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='88200' id='7' param='horz' w='98698' x='651' y='6552'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='88200' id='5' w='98698' x='651' y='6552'>
                <zone h='58774' id='10' name='Nation-Wide Cumulative Map' w='24657' x='74692' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='58774' id='35' name='Nation-Wide Daily New' w='49393' x='25299' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29426' id='40' name='New Cases - New York' w='24660' x='651' y='65326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29426' id='43' name='New Cases - Florida' w='24677' x='25311' y='65326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29426' id='45' name='New Cases - Texas' w='24664' x='49988' y='65326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29426' id='47' name='New Cases - California' w='24697' x='74652' y='65326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29385' id='146' name='Nation-Wide Cumulative New' w='24648' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29389' id='155' name='Nation-Wide Cumulative Deaths' w='24648' x='651' y='35937'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='4200' id='126' w='98698' x='651' y='94752'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4200' id='125' param='horz' w='49305' x='651' y='94752'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4200' id='42' leg-item-layout='horz' name='New Cases - New York' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='49305' x='651' y='94752'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4200' id='127' param='horz' w='49393' x='49956' y='94752'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4200' id='12' name='Nation-Wide Cumulative Map' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' show-title='false' single-line='true' w='49393' x='49956' y='94752'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='171' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='170' param='vert' w='98698' x='651' y='1048'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='59' w='98698' x='651' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29385' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24648' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58774' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49393' x='25299' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58774' id='10' is-fixed='true' name='Nation-Wide Cumulative Map' w='24657' x='74692' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4200' id='12' name='Nation-Wide Cumulative Map' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' show-title='false' single-line='true' w='49393' x='49956' y='94752'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='228' h='29389' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24648' x='651' y='35937'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29426' id='40' is-fixed='true' name='New Cases - New York' w='24660' x='651' y='65326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4200' id='42' leg-item-layout='horz' name='New Cases - New York' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='49305' x='651' y='94752'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29426' id='43' is-fixed='true' name='New Cases - Florida' w='24677' x='25311' y='65326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29426' id='45' is-fixed='true' name='New Cases - Texas' w='24664' x='49988' y='65326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29426' id='47' is-fixed='true' name='New Cases - California' w='24697' x='74652' y='65326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State-Level Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
      </datasources>
      <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='16' param='vert' w='98698' x='651' y='1048'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='17' w='98698' x='651' y='1048'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92400' id='5' param='horz' w='98698' x='651' y='6552'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92400' id='3' w='85679' x='651' y='6552'>
                <zone h='92400' id='1' name='State-Level - New' w='42841' x='43489' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='92400' id='8' name='State-Level - Cumulative' w='42838' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='92400' id='4' is-fixed='true' param='vert' w='13019' x='86330' y='6552'>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8650' id='7' name='State-Level - New' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='13019' x='86330' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='83750' id='6' name='State-Level - New' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' values='cascading' w='13019' x='86330' y='15202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='51' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='50' param='vert' w='98698' x='651' y='1048'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='17' w='98698' x='651' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92400' id='8' is-fixed='true' name='State-Level - Cumulative' w='42838' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='83750' id='6' mode='checkdropdown' name='State-Level - New' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' values='cascading' w='13019' x='86330' y='15202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92400' id='1' is-fixed='true' name='State-Level - New' w='42841' x='43489' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8650' id='7' name='State-Level - New' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='13019' x='86330' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{00D19BA9-6846-45E9-994C-7B68C7FCB8C6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - California'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - Florida'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - New York'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='New Cases - Texas'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='dashboard' name='State-Level Perspective'>
      <viewpoints>
        <viewpoint name='State-Level - Cumulative'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State-Level - New'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E9A947AE-5183-41DB-9C6A-53EAC5F65E4F}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-28#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59732700-92E5-42F2-AB6B-3436D85DF36F}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - California'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03D80F0F-E9AF-4297-AB65-A46BD0A7AE79}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - Florida'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F1486C4-5B63-4167-B59B-545A3EA575F0}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - New York'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A4225C0-C0AC-4562-952F-FF3A3570ED7C}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - Texas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0271F810-9FBA-48E9-AE38-254E23C494B7}' />
    </window>
    <window class='worksheet' hidden='true' name='State-Level - Cumulative'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC85C3E9-A59D-4486-9C54-5C7BA85A9F3C}' />
    </window>
    <window class='worksheet' hidden='true' name='State-Level - New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D057535-1148-4A3E-9E15-1860A5E0C5B4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='State-Level Perspective' width='384'>
      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
      n59PTk4Oy5Yt4+abbwbayoGSkhJaWlp44oknEELwy1/+kqamJjIzM3n44YdJTU09p/597ty5
      ZGRkMGvWLHJychgzZgx1dXWYzWaSk5N9NQTQVq6eOnWK9PR037znACtWrGDy5MnU19fzxhtv
      dPqdOBwOtm7d6vvMzv7su0wAQUFBmEymrt7uVPvUhIqidKiOOF+d4NkyMjLYtGkTwcHBVFRU
      cOedd3a7zU033cTnn3/OPffcg8lkIjExkYMHD3L06FFfpi8tLcVisXSbAJqbm331jFFRUaiq
      2umDqsLCQv785z8TFBSE3W7vMG3j2fz9/bFaredMJbl//34++ugj3xSN8+bNIzg4mIULF7Ji
      xQpGjhzJfffdh06no6KiwjcXc0VFBQkJCSxZsoQXX3yRTZs2MX/+fJYvX35Bn7Uk9Sar1er7
      3X/00UccPHiQwMBA8vLyzjvJUVhYGOPGjePgwYM4HA7mzJlzTtUwQEJCAsnJyezZs8e3rLy8
      nIqKCt/vvKioiPLycubNm8f777/PsGHDmDhxIo2NjZSWlnLw4EF+9rOf+bbX6/U4nU68Xu85
      z+Q+/vhj9u3bR1BQEIWFhcyePdv3m/vss898v7mysjIKCwt9MRQXF1NbW8u9997La6+9hl6v
      Jz09nRtvvNG37wkTJvD666/jcrnQarUsWrSIzMxMLBZLh3r682kvy873m9+8eTPz58/3TUe7
      Zs0aTpw4QWpqKt/4xje6TgCjR4/m9OnTmM3mLh809Da3283atWt59dVX0ev1bN682ZexNBpN
      ly0GZs+ezQcffEB8fDwLFy5Eo9EQERHB4sWLueeeey4oBoPBgMlkIjIy0vcfo70u8czjv/XW
      W6xatYr4+Hhqa2v5xz/+0eU+582bx4YNG7j33ns73FG98847vPjiiwQGBnLgwAEKCgoAuOee
      e7j77rvJy8tj9erVPPPMM6SkpPgmim+nKAovvPACLpeLN998k61bt3LTTTdd0PlKUm/573//
      y4IFC2hubmb//v2sXr0arVbL3//+9263veOOO/jLX/6CXq/ngQce6HQdRVH49re/zWOPPUZ0
      dDQAERERTJgwodOHtmVlZezdu5f09HQaGxvZuXMnDoejw8WaVqtlxIgRHDlyhBkzZviWt7S0
      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
      xs/+Vn72t/xLYv6qfz05FhxWKC9wkmuHUrcTl0Oh2O3Ak2Oh0GWnMM+KJ9dOictKfq6dMred
      PKeViMdOrsNKTNVx2q0kNCPlr7miwM7GGhcFeZ+/v26nQonbSZ5DoczjJMcGFQVO7BaTqiIn
      ViWf6mInmG5qihyUuKY+szzn1GeYY7cSV/WUxqjV5H/+ncibes8KXXY8uVaK8x24nAqlbid5
      doWyAidOG1QU5mBTpmK24KamyIlpTMWsr3QTCATmfJL14Z2naZFIhHB44Zc/npaK9kE8SjEf
      08onEjLC5UkMw5gabbBEz2Ok0nRDYbFkzzLW0+vCZMPnq+v6E/vhp8/fffExuq4vdGgZZ7b3
      cql5bAIQT6ZpGhaLJSsaxekfeiZ9secrmz7fRCKBwyHlSFMh097L5f/tXiDZsGc4LZteazaS
      zzd1Mu29lCMAIYTIUnIEIIQQWUoSwBxomjbnE16maSaLR2eK6cW2pmmaNucRIrquf+Up+0vF
      05zMzLTP9oum1955mGmaRCKRGZcz/XUutOlVAuZiKb+fkgDm4OTJk1y5cmXW+2maxkcffcTJ
      kycXIarU0XWd7373u8kv6c9//nMePHgw6+P6+/t5++23GR0dXeAIF9Ynn3wyp/tdu3aNt99+
      e4GjWVjt7e1MTEzMuE7TtOT3W9d1PvroIz7++ON0hJcxPv74Y1paWma9n6qqnDhxgtOnTy9C
      VE9v6S/Ik2aJRAKn08nk5CSmaXL27NnkxLbnn3+ec+fOoWkaR48exWKxcPDgQS5dupTusJ9a
      TU0Nd+/epba2FpvNhqZp3L17l8HBQRwOB/n5+axZs4ZIJEIkEmH16tUUFxeza9eujD8CiMfj
      9PT04Ha70XWdWCzG3bt3kyf0Dh8+DMD69esfaTwzjaqqGIZBS0sLO3bs4Nq1azMKryiKkrHf
      4cUSj8fJy8tLzpU6c+YMpmlis9nYu3cvFy5cwDAMjhw5kmwTmpqa0h32l5IjgFncv38/uVzt
      dBI4fPgwiqIQi8UYHR1NLlxlsVjIycnMZSOqq6sZGhqira2Nbdu2AVNL7DocDh48eEBdXR3X
      rl2jvb2dqqoqgOS67MtBJBIhHo8Tj8eJRCJYLJbk5zxtPkVKlprJyckZf6dZLBZyc2V58yfp
      7OwEpmoQ+P1+YGonwTRNYrEY4+PjyZ0Gq9W6pNsESQCz6OnpoaGhgW3bttHe3o5hGMTjcUKh
      EHa7ndra2uRY8enbNE3LyIl0DoeDUChEXt5UScsrV67w7LPP4na78Xg8RKPR5BERTO1NqqpK
      IpHIyElBmqYRCoWAqYYvEokkf9BfZJpm8rONx+OLOks+FabXuxofHyc3N5dEIkE0Gn1k5rxh
      GMRiseTnKh7V19dHfX09W7Zs4c6dO8nffTgcxmazZVSbYP3TP/3TP013EEuVaZrY7XZWrlxJ
      cXExpmnS19eHz+dj48aNyT1kt9sNQDgc5tatW1itVhKJBKWlpWl+BXPncDhYuXIlHo+HoqIi
      8vLyyM/P5969e6xYsYKysjICgQA1NTUUFxcDU8lxcnKSUCiE2+3OuD3Hvr4+2tvb2b17N8XF
      xbS3twMklzD3eDzJQiSmaXLr1i0URWFiYoKKioqMmiSm6zqXLl2ioqKCmpoaVFXl/v371NbW
      UlJSgtPpxO12z/gOx+PxjPoOLwbTNJO/lZKSEgzDoLe3F7/fz6ZNm/B4PDidzhmVytra2rBY
      LKiquuTqoMg8gKd0+/ZtNm3alO4wFp3f7+fGjRscOHBg2XT7CJEKmdwmSAIQQogslTnHsEII
      IVJKEoAQQmQpSQBCCJGlJAEIIUSWkgQghBBZShKAEEJkKUkAQgiRpSQBCCFElpIEIIQQWer/
      Bwi6l+0B8uF2AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
