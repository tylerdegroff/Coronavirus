<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0525.1210                               -->
<workbook original-version='18.1' source-build='2020.2.1 (20202.20.0525.1210)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='1.7' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Library/Mobile Documents/com~apple~CloudDocs/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='cases.per100k' ordinal='8' />
            <column datatype='real' name='deaths.percap' ordinal='9' />
            <column datatype='real' name='deaths.per100k' ordinal='10' />
            <column datatype='integer' name='cases.new' ordinal='11' />
            <column datatype='integer' name='deaths.new' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='cases.per100k' ordinal='8' />
            <column datatype='real' name='deaths.percap' ordinal='9' />
            <column datatype='real' name='deaths.per100k' ordinal='10' />
            <column datatype='integer' name='cases.new' ordinal='11' />
            <column datatype='integer' name='deaths.new' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.per100k</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.per100k]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.per100k</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.per100k</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.per100k]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.per100k</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' value='Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Cases per Capita - State' datatype='real' name='[Calculation_705305989324251140]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([cases] / [population]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Cases - 7D SMA' datatype='real' name='[Calculation_705305989325619205]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Cases per Capita - State' datatype='real' name='[Cases per Capita - State (copy)_705305989344137228]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new] / [population]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='Cases per 100K' datatype='real' name='[cases.per100k]' role='measure' type='quantitative' />
      <column caption='Cases per Capita - County' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='Deaths per 100K' datatype='real' name='[deaths.per100k]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_705305989324251140]' derivation='User' name='[usr:Calculation_705305989324251140:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_705305989324251140]' derivation='User' name='[usr:Calculation_705305989324251140:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_705305989325619205]' derivation='User' name='[usr:Calculation_705305989325619205:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Cases per Capita - State (copy)_705305989344137228]' derivation='User' name='[usr:Cases per Capita - State (copy)_705305989344137228:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Continental United States' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[state]' member='&quot;Alabama&quot;' />
          <groupfilter from='&quot;Arizona&quot;' function='range' level='[state]' to='&quot;Georgia&quot;' />
          <groupfilter from='&quot;Idaho&quot;' function='range' level='[state]' to='&quot;Wyoming&quot;' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[Calculation_705305989324251140]' type='field' />
        <folder-item name='[Calculation_705305989325619205]' type='field' />
        <folder-item name='[Cases per Capita - State (copy)_705305989344137228]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.per100k]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.per100k]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Cases'>
          <folder-item name='[Calculation_705305989324251140]' type='field' />
          <folder-item name='[Calculation_705305989325619205]' type='field' />
          <folder-item name='[Cases per Capita - State (copy)_705305989344137228]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.per100k]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.per100k]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Library/Mobile Documents/com~apple~CloudDocs/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='06/29/2020 03:12:46 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='277284' timestamp-start='2020-06-29 15:12:46.028' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>fips</remote-name>
              <remote-type>20</remote-type>
              <local-name>[fips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fips</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17679</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>207</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8739</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>84</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3718</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>947</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17394</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83717</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.per100k</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.per100k]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.per100k</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83717</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32524</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.per100k</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.per100k]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.per100k</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32524</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>636</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>128</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='cases.per100k' ordinal='8' />
                  <column datatype='real' name='deaths.percap' ordinal='9' />
                  <column datatype='real' name='deaths.per100k' ordinal='10' />
                  <column datatype='integer' name='cases.new' ordinal='11' />
                  <column datatype='integer' name='deaths.new' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State-Level Perspective' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='State-Level Perspective' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[New Case Density as of <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' name='[Calculation_705305989325619205]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_705305989325619205]' derivation='User' name='[usr:Calculation_705305989325619205:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6886359.2814061549' min='-14843174.940166993' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='7750770.9626842989' min='1317600.6739683654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f0e4db</color>
                <color>#f0d8c6</color>
                <color>#efccb1</color>
                <color>#efc09c</color>
                <color>#eeb487</color>
                <color>#eea973</color>
                <color>#ed9d5e</color>
                <color>#ed9149</color>
                <color>#ec8535</color>
                <color>#ec7a21</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' value='Average'>
              <formatted-text>
                <run>Average</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{B06C2684-0D41-49AE-A343-241CCF03CE02}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily New Cases with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989341708297]' role='measure' type='quantitative' user:unnamed='Nation-Wide Daily Cases'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_705305989341708297]' derivation='User' name='[usr:Calculation_705305989341708297:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='New Cases - California'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{FC1E0ECC-6390-475B-9680-86DD8698AC19}' />
    </worksheet>
    <worksheet name='New Cases - Florida'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{6BBDFAA9-8112-421F-98D7-D1517DEC995B}' />
    </worksheet>
    <worksheet name='New Cases - New York'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{B914B506-9BAA-4723-84A0-51BDFEAAB609}' />
    </worksheet>
    <worksheet name='New Cases - Texas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{1E4FD359-4CEF-41D5-949B-0B8517739889}' />
    </worksheet>
    <worksheet name='State-Level - Cumulative'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='15' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{8550A81D-22A9-4FA8-B532-9453397BA0F2}' />
    </worksheet>
    <worksheet name='State-Level - New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily New Cases with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='15' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]))</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{8FBE7C42-261E-41F3-B892-30C18CBDAE19}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> [Hover for Specific Values]]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93706' id='58' param='vert' w='98698' x='651' y='1048'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='59' w='98698' x='651' y='1048'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='88202' id='7' param='horz' w='98698' x='651' y='6552'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='88202' id='5' w='98698' x='651' y='6552'>
                <zone h='58777' id='10' name='Nation-Wide Cumulative Map' w='24656' x='74693' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='58777' id='35' name='Nation-Wide Daily New' w='49392' x='25301' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29425' id='40' name='New Cases - New York' w='24662' x='651' y='65329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29425' id='43' name='New Cases - Florida' w='24676' x='25313' y='65329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29425' id='45' name='New Cases - Texas' w='24665' x='49989' y='65329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29425' id='47' name='New Cases - California' w='24695' x='74654' y='65329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29388' id='146' name='Nation-Wide Cumulative New' w='24650' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29389' id='155' name='Nation-Wide Cumulative Deaths' w='24650' x='651' y='35940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='4198' id='126' w='98698' x='651' y='94754'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4198' id='125' param='horz' w='49306' x='651' y='94754'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4198' id='42' leg-item-layout='horz' name='New Cases - New York' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='49306' x='651' y='94754'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4198' id='127' param='horz' w='49392' x='49957' y='94754'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4198' id='12' name='Nation-Wide Cumulative Map' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' show-title='false' single-line='true' w='49392' x='49957' y='94754'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run><![CDATA[<Sheet Name> [Hover for Specific Values]]]></run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='165' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='164' param='vert' w='98698' x='651' y='1048'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='59' w='98698' x='651' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='228' h='29388' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24650' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58777' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49392' x='25301' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58777' id='10' is-fixed='true' name='Nation-Wide Cumulative Map' w='24656' x='74693' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4198' id='12' name='Nation-Wide Cumulative Map' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' show-title='false' single-line='true' w='49392' x='49957' y='94754'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29389' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24650' x='651' y='35940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29425' id='40' is-fixed='true' name='New Cases - New York' w='24662' x='651' y='65329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4198' id='42' leg-item-layout='horz' name='New Cases - New York' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='49306' x='651' y='94754'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29425' id='43' is-fixed='true' name='New Cases - Florida' w='24676' x='25313' y='65329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29425' id='45' is-fixed='true' name='New Cases - Texas' w='24665' x='49989' y='65329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29425' id='47' is-fixed='true' name='New Cases - California' w='24695' x='74654' y='65329'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State-Level Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> [Hover for Specific Values, Select/Deselect States on Right]]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
      </datasources>
      <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='16' param='vert' w='98698' x='651' y='1048'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='17' w='98698' x='651' y='1048'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92400' id='5' param='horz' w='98698' x='651' y='6552'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92400' id='3' w='85679' x='651' y='6552'>
                <zone h='92400' id='1' name='State-Level - New' w='42840' x='43490' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='92400' id='8' name='State-Level - Cumulative' w='42839' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='92400' id='4' is-fixed='true' param='vert' w='13019' x='86330' y='6552'>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8650' id='7' name='State-Level - New' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='13019' x='86330' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='83750' id='6' name='State-Level - New' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' values='cascading' w='13019' x='86330' y='15202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run><![CDATA[<Sheet Name> [Hover for Specific Values, Select/Deselect States on Right]]]></run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='45' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='44' param='vert' w='98698' x='651' y='1048'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='17' w='98698' x='651' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92400' id='8' is-fixed='true' name='State-Level - Cumulative' w='42839' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='83750' id='6' mode='checkdropdown' name='State-Level - New' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' values='cascading' w='13019' x='86330' y='15202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92400' id='1' is-fixed='true' name='State-Level - New' w='42840' x='43490' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8650' id='7' name='State-Level - New' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='13019' x='86330' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{00D19BA9-6846-45E9-994C-7B68C7FCB8C6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - California'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - Florida'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - New York'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='New Cases - Texas'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='dashboard' name='State-Level Perspective'>
      <viewpoints>
        <viewpoint name='State-Level - Cumulative'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State-Level - New'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E9A947AE-5183-41DB-9C6A-53EAC5F65E4F}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-28#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59732700-92E5-42F2-AB6B-3436D85DF36F}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - California'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03D80F0F-E9AF-4297-AB65-A46BD0A7AE79}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - Florida'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F1486C4-5B63-4167-B59B-545A3EA575F0}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - New York'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A4225C0-C0AC-4562-952F-FF3A3570ED7C}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - Texas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0271F810-9FBA-48E9-AE38-254E23C494B7}' />
    </window>
    <window class='worksheet' hidden='true' name='State-Level - Cumulative'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC85C3E9-A59D-4486-9C54-5C7BA85A9F3C}' />
    </window>
    <window class='worksheet' hidden='true' name='State-Level - New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D057535-1148-4A3E-9E15-1860A5E0C5B4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
      qG/833jjDb755hsMBgPvvfceq1evBiAzM5MpU6bw4osvkpuby/bt21m8ePFpZejSpQuZmZmY
      zWag3vQwePBg/P39KSgoUORpaKCrqqp47bXXlPd3797NY489xpEjR4iPjycpKUn57ejRo8ye
      PRuDwUBcXBzPPfccdrv9rPnm7e2NwWAAYPny5axfvx673c6SJUvYunUrAMXFxSxfvpyvvvqK
      p556igMHDmA2m5k+fTq7du0iJSWFV199lRMnTgDw8ssvM3v2bPLz89m7dy9Tp06ltrYWgPj4
      eJ5//nlqa2s5ePAgc+bMwW63I4Tgww8/5M033yQ5OZl33nmHo0ePsmnTJgwGAxs3bmTTpk2k
      p6cD8MEHH5CZmYkkSTzzzDPo9XolTd9//z2///47AB9++CFffvklNpuN9957j59++umseXIu
      pKSkMH36dAoKCkhLS2Pq1KkUFxcjyzKzZs1S0gvwxRdfEBMTA8CKFSv44YcfsNvtLF26VBl5
      lpSUNMrjBoxGI5s3b6aqqoqtW7eyadMmioqK+Prrr1m2bBkGg4ENGzYwf/58pczfeustYmNj
      eeihh/j2228xmUxKeMHBwaSnpxMTE6M8L0mS0oi9++67TJs2jRMnTpCUlMTDDz9McXExUG+G
      WrhwIRaLhS1btvDWW28pdX39+vW88MILHD9+nLVr1yqj3YYGu6ioiK1bt6LX69m0aRM///wz
      RqOR7777jtjYWCWts2bN4ttvvyUhIYF58+Y5jOJ1Oh19+/Zl7969yr3t27czYsQIRf4XX3yR
      LVu2kJmZyeLFi1m7du1py/D9998nOztbud64caNSTrGxsbz44osYjUb27NnDvHnzsNvt2Gw2
      nn32WbZs2cKJEydYvHgxhw4dOpcqo3KhiLOwevVqsX79emE0GsWECRNEZmamEEKIcePGCYPB
      IIQQwmw2K89XV1eLcePGKffWrFkjfvzxR4cw4+LixIIFC4QQQiQmJorJkycLq9UqhBCitrZW
      jB07VpSUlIjjx4+LmTNnCovFovw2btw4IcvyaWWdNm2aSExMFBaLRdx7773CbDaLzz77TKxf
      v14IIcSjjz4qMjIyhBBClJaWiocfflgIIYTJZBLjxo0TycnJSlgLFiwQcXFxQpZlMWPGDBEf
      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
      8lLyq6KiApPJROvWrZX0WSwWqqqq8PX1RafTXVUV02az8cwzzxAeHk55eTkvvPACbdu2JSIi
      AlmWqa6uRgihlJ1Wq+Wdd95pFE5DHWxI+6n1rOH36Oho1q1bx7Rp0xT3iw00+BFwd3dXjtk+
      tW7a7XbF7eTp6tsHH3zAv//9b8WZToMnrIY0yLKMn5+fUo4mk4mamhr8/f0Vd5CyLJOXl4e3
      tzc+Pj7KswaDAYvFgp+fn8MhaKem+dRv8tTv6rXXXlPcW+7atYsePXrg7OyspEsIQXFxMVqt
      loCAAIe6c6rzpAYHRX/1zyvLMgMGDODpp59GlmU+++wzVq1axYwZM5TyraysxMvLS1EKp+br
      6doAd3d3xa+Bv78/Qgj++OMPBg4cqIwwGtqZiooKxQfFX9ulhuuwsDCee+45h3pRXl6O3W6n
      ZcuWDnWmsrISNzc3nJ2dG3XOsrOzCQ0NpaKiQvGg93dtT4NPiLZt2yptQ0P8sixjsVhwdXXF
      arVSWVmJr68vzs7OijwN9xvKvaG9KCsrw2q10qpVq0tyKN4ZFUBmZibe3t506dJFuefm5sZv
      v/2G2Wzm9ttvB+Dpp59mxYoVHD58mCVLlhAREYHRaMRsNuPu7o6npydWq5VXX32Vjz/+mEGD
      BhEVFYXBYOD111/njTfecIj3iy++4Pjx4/j4+JCRkcHy5cvZuXMnsbGxlJaW4u7uzhNPPAHA
      559/zuOPP87cuXN555130Gg0HDhwgKNHj/LII4/w6quv4urqSkVFBdHR0dx9991nbSDT09N5
      44036NKlCykpKUyfPh2LxcLGjRuV9I8dOxaz2cy3335Lq1atSEtL4+mnn6Zbt26nDfN///sf
      Tz31lFLRGz6GDRs2sGfPHgIDA0lLS+P1118nKCiIl19+GZ1Oh8VioXPnzkycOJH//e9/xMTE
      EBQUhF6vZ8GCBZw4cYLly5fTsWNHcnJyePnllxt5KbtaCAgIYNq0acqo7pVXXsHJyQmr1Yqz
      szPz5s1DlmWeffZZVqxY4fDuypUriY6OZvDgwQghmDVrFi+//LKDY5SbbrqJH3/8kaKiIoc8
      kmWZN954A0mSqKmpoWvXrkyYMIEZM2awcuVKdDodjz76KEOGDGHixIkcOnSIuLg4pk6dCtT7
      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
      WXleQhuXy8UzzzzDihUrRlj665e2tjZefvllZs+erb7HOTk52Gy2YecLuRCKopCTk8Nrr73G
      8ePHiYiIUHNufJoUFBTw9ttvc+zYMfWnpKSErKysy/Yxl7QAdu7cye9//3t1ZNHU1ERxcfGI
      CF1fX8+Pf/xj1qxZw0MPPTSqichramp4//332bNnj3rswIEDaiLnqyEuLo5nnnlGHcG/8cYb
      6HS6YcUH7+npGbGR4ljiyJEjvPbaa9TV1QEgSRK7d+8ekbJlWeb73/8+RqORRx99lLS0tMsm
      gr9WKIrCsWPHWL9+vfojiqKan3U4xMbGXnAAJssyPT09IyXyDUFHRwe7d+/mtddeU9+/Y8eO
      4XA4RqT8bdu2sW3bNjZv3sxtt91GZ2fniJQ7XCZPnsy6devIysqioaGBdevWsWrVqiH1MZcc
      Ug4ktM7JyWH16tWD/tfe3s4LL7yA3+/n9ttvZ+HChWzfvp01a9Zgt9s5evQoPT09bNiwgWAw
      yPbt27n77rvV77/yyis8+eSTzJ8/X70J6B/h7Ny5E7fbzbx587j99tuB/g45JycHi8XCXXfd
      xdSpU2lqauJ///d/kWWZTZs2MWfOHFwuF6+++iodHR2kpKSwefPmIY3i7733Xv7617+yatUq
      LBaLelxRFPbt28fu3buJj4/nC1/4AoqikJuby2233YYkSbz44ovcdtttJCQkUFpaiiRJzJkz
      B4DZs2djtVrJz88nLS2NvLw8nn32WaB/hPLCCy/g9Xq55ZZbWL16NT6fj5ycHDIyMnj77bd5
      4IEHBsmyd+9epkyZoua5vd7ZsmULL7zwAj/5yU8GHQ+FQrzxxhsUFxcza9YsNm/eTHV1NW63
      mwULFtDX18dLL73E1772NXQ6Hfv27SMrK0u1Vo8fP05CQgL3338/giCQmJgI9Kd1fPvtt2lu
      biYmJoa/+7u/IzIykqamJt544w28Xi/z58/n1ltvJRgM8uqrr1JZWcn8+fPZtGkToijy0Ucf
      ceLECex2O5s2bRpSekmLxcK0adMu+n+fz8eLL75IfX09mZmZ3H///ej1erZv3052djZvvfUW
      c+bMIS4uDqfTCfR3+vv27ePo0aNqli6AkydPsm/fPnw+H0uWLGHdunVjNiHJtWbt2rWcPHmS
      e+6557zkOfn5+bzzzjuEhYWxZcsWoqOj2bZtG5s2bUIQBN566y0yMzOZOXMmLS0tVFdXs3Ll
      SqA/s9fWrVv5r//6LzXj2syZM1EUhY8++oj8/HwAbrvtNubOnUsoFOL111+ntraWuLg4Nm/e
      THh4OEePHmXbtm1ERUXx6KOPEh0dTU1NDe+88w6BQIDly5ezZs2aS9ZfdHQ00dHRWK1WIiMj
      1RSm0J/G8/XXX8dkMvHQQw+RlJTEm2++yd13343FYrn8GsAjjzzC66+/rjYu6B+p/exnP+Pu
      u+/mySef5MUXX6Szs5PW1lby8/NRFIXt27ezdetWJEmioaGB0tJS9fuyLFNXV6d2kufi9/u5
      5557+NrXvkZeXh5nzpyhr6+PP//5z3zlK1/h7rvvxuVyEQqF+Ld/+zcefvhhnnjiCZ599llc
      Lhevv/46CQkJPPHEEyQnJw95XjQsLIy1a9fy3nvvDTpeVFTEnj17+MEPfsCiRYv47W9/i9Vq
      5a9//SuyLNPa2sru3bs5cOAA0D8q+GSGpK9+9as8//zz/OlPf+KRRx5RE84//fTT3H777Xz7
      299m+/btFBYW4vf7efPNN/nFL37B0qVLiY6OVsvJycnh4MGDw5oyGOvMmDEDk8mk5igeYOAF
      +Jd/+ReCwSB//etfsdvtvP3220C/9ZCbm6u2q7feemtQprYzZ85w0003nffi+Hw+srKyeOKJ
      J0hLS+O5554D4Nlnn2Xt2rV8+ctfVhOMv/LKK9jtdn70ox+p9dzY2MiuXbv46le/yq233jrk
      3MmKohAKhdSfT67pPPPMM8THx/P9738fj8fDa6+9BvRPRf7oRz8iLi6OGTNm0NjYSFlZmfq/
      3NxcvvSlL3H33XerKTxDoRD33Xcfjz/+OB999BE1NTVDkvFGRBRFHnnkEf70pz8NeuYDg6/v
      fOc73HPPPfz7v/87Op2OAwcO0NfXh9vt5sMPP2THjh1A/1TuuXmEOzs7iYmJOS/dpqIoWCwW
      Hn30UR566CF++9vf4vf7OXDgAN3d3XzjG99g4cKFuN1uzp49y5///Gf+6Z/+iQ0bNvDzn/8c
      RVH4zW9+w913381jjz12VYq7p6eHZ555hq9//es89NBD/PKXv0RRFGJiYnj22WdpaGi4vAKI
      jIxk+fLl6oOA/tG/wWDAbDbjcDiYPXs2Z86cYfny5Rw5cgS3241eryc9PZ3GxkaOHDnC8uXL
      Bz0k4II5Z2fOnElZWRnvv/8+kiTR1NSE2WzG6/Vy4MABrFYrc+fO5ezZs6pG7+vrY9q0aZSV
      lZGQkEBeXh7l5eUsW7ZMfZkBTp06xcsvv8zbb799QcVwxx13cODAgUFTBTk5OWRnZ9Pe3k58
      fDwNDQ3o9XqmTJlCTU0NR44c4ctf/jKnT59WFdsnR+eJiYlkZGRQXV2tPoempiaSk5PJysoi
      KiqKLVu2cOjQIQCcTidPP/00y5YtU/PR7t27l3fffZd//Md/vKHWAgRB4Itf/CIvvvjioGmu
      o0ePctNNN9Hc3MySJUs4cuQICQkJdHV1EQqFOHbsGH//93/P4cOH1byn51p6A/laP0lcXByC
      IPDBBx9QX19Pa2urenzPnj20traq5nNBQQFZWVm0tLSwdOlSjhw5gs1mo6uri9zcXKKjo8nI
      yFDL7unp4eWXX+bll1+mqalp0HVra2t56qmneOqpp86zdgb+f8cddxAWFsYjjzzCiRMnUBQF
      r9fLF77wBe64447zUhvu2rWLJ554gokTJ5KYmKi+TxkZGRQVFbFjxw4kSVLvcbwy0I7Onj2r
      Hjtx4gQLFy5Uc35LkoTL5WLBggWcPn2a4uJi1q9fT0tLC6FQiMLCQhYsWKB+fyAH8ScRBIFp
      06aRk5PD3r17kSSJ3t5e4uLiKC4u5tSpU8yYMYPExEQOHz7MihUr6OzsxG6343A4kCSJmJgY
      du3aRVdXF9nZ2YOUwPbt23n55ZfVvuJSFBUVkZGRgdvtRpZl7HY7bW1trFu3DkmS+MEPfnDp
      KaABPve5z/Hkk09y3333qTff3t7O/v37gf7kxsnJyaSkpFBfX09hYSFz5swhPj6eo0ePcubM
      Ge644w61PFEUiYyMpKGhYdBoVpZlnn76aW6++WbV1AIwmUw888wz5OTk8Otf/5qsrCyWLl1K
      S0uLKkNMTAxxcXEsXryY9PR0Dh8+zHPPPcdPfvIT1fyPj48H+hOqX0izms1m7r33XnX0Bf1J
      pAsKCmhpaQFgzZo1yLLMsmXLOHr0KJWVlfzjP/4ju3fvprKykkmTJqkLyeeyePFibDabet1Q
      KDRoQXKgoweYPn36IHM1FApRUlKCzWYbkcTRY43k5GRSU1PJyclRjw1MhQ0ou1tuuQVRFNXB
      hsfjYenSpbz99tscPXqUZcuWDarT1NRUiouLzzu+bds2SkpKuOuuu1RHBIBvfvObnDx5kj17
      9vDHP/6RX/3qV7jdbnJyctT6zM7OJjo6ml//+tccOnSIn/70p6xevZp77rkH6K/DAav2k3mj
      09LS+M///M+LPgNBEFQ59Xq9OkiKiIhg1qxZF/3OudOV0N9WfvjDH3L77bezcuXKQYnqxyuC
      IPDYY4/x3HPPERUVBfS/1xUVFeo5CxYsQK/Xs2zZMt577z2sVit33XUXra2tlJaWqonWB4iJ
      iaG1tfW8gYbD4eBf//VfefTRR5kwYYJqoWZmZvKDH/yAnJwcvv3tb/O1r32NQCBATU0Nbrcb
      gBUrVqAoCv/8z//M0aNHef/992ltbeWXv/ylqtzT09NJSEgYNDNwMQbKH+gjZ86cidVqRRAE
      zGYzwWBwaG6gFouFO+64gzfffBPoHy1ZLBZuvfVWtmzZwi233ILVasVoNJKQkMC7777L0qVL
      yczMJC8vD1EUCQ8PH1Qh9913H7/5zW9wOp1IkkRZWRmhUAin08mGDRtITk5WRy49PT10dXVx
      66238vTTT3PixAkmT56MIAjcddddbNmyhdWrV2M2mykpKSElJYVHH32UlStXUl1drV43MTGR
      BQsWMGfOnAt20tDfwZeVldHW1gbA3Llz0ev1fP7zn+fzn/88U6dORafTsXDhQvLy8tSXcP78
      +fzhD38YpLguRVJSEuXl5XR1dSHLMlu3blXXQy70/J944gnmzZvHf/zHf9yQ7n6f//znef31
      1wmFQkD/2kliYiJbtmxh8+bNqvJesWIFr7zyCtOmTUMQBCIiIti5c+cgCxPg5ptv5tChQxQX
      FyPLMi0tLTgcDsrKyrjzzjuZMWMGvb296vWKiopYsGAB3/zmNwkPD6enp4cZM2aQnp7Oli1b
      uO+++4iNjaW9vR2Px8Ndd93FU089xcmTJ9VrWiwWFixYwIIFCwa196EQERHBmTNn1HWe9PT0
      y5r/8fHxHDlyRJ2KDAaDeDweBEFg7dq1JCQkqO14vJORkYEoiqoTy+zZs5EkiQcffJBHHnlE
      fc/T09NpaGigsbGRxMREli1bxgsvvHCeR43dbmfu3Lm8+OKLhEIhfD4f1dXVNDc3M23aNJYs
      WUJYWBhdXV0AVFdXEx4ezoMPPsjDDz9MYWEhWVlZSJLEww8/zCOPPMKsWbPQ6XQUFRVx0003
      8Z3vfIdAIDBo6mnmzJksWLBgSNPAM2bMQJZl7r//frZs2cLixYsxGAwcOHCAYDDIj3/840tb
      ADNnzlQ/b9y4kaNHj5KQkIDJZOIb3/gGv/71r5FlmaioKB577DEA1q1bx44dO0hISEAURVJS
      UgaZyQMsXboUh8PB9773PVXYJ554gptvvpknn3wSq9VKWloaMTExCILAq6++qnrDfPGLX8Ri
      sfD1r3+dn/70p0C/d8Tjjz9Od3c3zz//PKIoEh0dzYMPPnjZBxUbG6t2qnq9ni9+8Yu89NJL
      GAwGsrOzqa+v5x/+4R8QRZHFixezdOlSwsPDmTJlimoWrly5kv3797Nw4cILXiMiIoKkpCT1
      74Fn+JOf/IRAIMC8efPIzs7G6/WSlpY26LsDSufee+/lzTff5NChQ6xZs+ay9zXWSUlJUafo
      oqKiuP322ykpKQH6F4d/97vfsWfPHnQ6nepAkJmZiSRJrF69GkEQWLduHXv27DlvRGQymfjx
      j3/MH/7wBzweDxaLhW9961ts2rSJ3/72t5hMJqZNm6YumJWVlfHiiy8iCAKzZ88mLi6Oxx9/
      nN/97nds3boVg8GgWsDPP/+8Ovc/0O4vx4XegdjYWHVk961vfYvf/OY3PP/880RHR/Pd734X
      QFV0A0RGRqpt9Utf+hK/+tWvePfdd5k4cSLp6emEhYUxd+5cvv3tb2O1Wpk0adJ5U0fjBbvd
      zqRJk9S/H3vsMX7+859jtVpJTEwkOzub733ve4iiyLRp08jMzESv17No0SLMZjM6nY7Zs2cj
      iiKrVq06r/wvf/nLvPDCC3zzm99Ep9Nx5513smbNGv7yl7/w3e9+V7XejEYjgUCAn/3sZ8iy
      jMFg4Lvf/S7R0dFUVFTw1FNPqdbtkiVLOHXqFC+99BLQP+D5pJV3MUwm0yDFkJSUxJ133skP
      f/hDBEFgypQpPPLIIxw7downnnii3xpQxrt9qKGhoTFO0XYCa2hoaIxTNAWgoaGhMU7RFICG
      hobGOEVTABoaGhrjFE0BaGhoaIxTNAWgoaGhMU656D4Ap9N5xTsIA4HAefFwNK5vfD7foLAa
      w0EUxfNipvh8vkHxpYbCwKatYDB4wTAiGtcvfr8fm82GLMsIgjDs+rVarYNCpIRCITwezxXJ
      IkkSgiBcdLPojcQ12QfQ19c37J2QGmObpqamQRvZPm3ObaZOp/O8UAsa1zfNzc1qyBZgVKOX
      er1edDrduBjE3vgqTmNM09XVxeHDh4H+UdvBgwc5dOgQkiRRVVUFQEVFBX6/f1C8nIHP2s+N
      8fPJOlUUhdraWjV0g9PpZPfu3WrQxZqaGhRFOS+KrMbwuK4VgCzLeL3eGzI2znhgIHrqQPTV
      kpISJk+eTFJSEmVlZdTW1tLV1UV9ff2oZPLSGDlCoRBer3fI08per5euri46OjqA/vDfK1as
      wOFw0NvbS319PSUlJaNqKdwIXNcKwOfz8Ze9p654rk9jdBFFkYULF6qmtsPhICEhgcTERLq6
      uujp6eG99967bEIMjbFPX18ff9l7Sl3HuRwDYd/PrXeLxUJCQgIOh4OamhpKSkoumFNEY+hc
      1woAoKPPf/mTNK4LzGYzbrcbt9uN2WwmMjKSFStWUFBQMNqiaYwAV/OuyrKMoig4nU6sViup
      qalMmDDhvLwLGsPjulcAQ8XpdFJaWatNF40hgsEgOTk5tLa2cuTIEWbPnk1OTg65ubnMmTMH
      u93O9OnTCQQCWr7bcYbD4SA3N5fm5mZKS0uZOXMmO3bsoLOzk9jYWOx2O9nZ2RQXF2vv9FVw
      46SWugzBYJCdJ2qZljrp8idrfCoYDAZWrlw5KIfCQA5oURRZtmwZ0B8SV+P6RZKkIU/9DBAV
      FXVeyPPk5GREUUQQBJYsWQLAhg0bhiXH8ePH8Xq9LF++nKamJtLS0igrK2PatGnj0rV43CgA
      jeuD8eB7Pd7o7e1l74mqqy7najvogoICkpOTiY+PRxRFqqur0ev1OByOcdvuNAWgoaFxzWnr
      9Y22CGpWuPz8fNasWUNLSwsdHR088MADCIJAKBRClmX193hIlaIpAA0NjU+NQCCAXq8fFa8u
      q9XKihUr6OnpobKykvj4eMLCwqirqyM9PV3dSSxJkrYR7HrF6XRSWVNPZU09siwP+/uBQGDY
      85UaGhpD4/2Dp0ft/crKymLXrl0cP36c1NRUbDYbS5cupbq6Gp9v9C2U0eCGswD8fj87jvYn
      gn9iSvKwv3/weAnJEyOZOTVlhCXT0NBo7Rm9jjY2NpZbb70V6F9PGHAuWL9+/ajJNNpc1gII
      hULqXFgwGFQ1pSRJKIqCLMtXNNK+WmRZJhgMjni53a4A/qDmVjZUzh3N+Xw+tU4GXPMG2omG
      xlhAp9ONS2+fi3FJBXDq1Cn+7//+D1mW8fl8bN++nb1799LU1EReXh6yLHPo0CF1K/+nidfr
      ZWde8SXPCQaDWudzjZBlmT179vD+++8D/cHi9u3bx44dO/B6veTk5CBJEjt37tT8tDU0xiiX
      nAKaOXOm2rlXV1ezcOFC4uPjOXjwIABlZWXY7XaioqIGWQKSJF2T0fm5SJJEs+Nja2TgerIk
      YZH68IphbNufzx1r5qPT6dRO6HJKQUFBlpVrLv/1hqIo6mh/wBd7+fLlaiC3iooK1q5dS3t7
      OzU1NXi9XnJzc8nMzBwUpldDQ2PscMk302q1qp/9fj8WiwW9Xq+6Sp0+fZpbbrkF6I/kN+BL
      K4riNTezzvXbHbieEvRgOfFr7u/cRUPsevY5Nqgm34DXweVMQIH+aISamTiYc+t3IGKjxWJR
      /68oCjqdDrPZTGdnJw6Hg+7ubpYuXTpaImtoaFyGSyoAr9dLMBjE6/WSmJhIRUUFiYmJREVF
      0dfXx6ZNm/jwww+59dZbMZlMg8K6XuuNFee6kQ10SIGc36BUfkiDlExK54esN9YidCcgTswY
      pJwuJ5sgaBuSLsS5z0SWZfx+P4FAAJ/PR3h4OI2NjTQ3N5OWlkZnZycLFy5k7969bNiwQXue
      GhpjkEu+lRUVFYSFhVFWVsaECROIiorC4XAwb948ZsyYgdFo5Oabbx6VNYABBEVCOvbf+LZ/
      m8CZdyiIeYADEx7nmGkdem87vg/+AbnnLLrjzzKNylGT80YjEAhQXFxMZGQk1dXVzJ8/H4fD
      QVRUFBMnTiQjI4Po6GgyMzPx+7WAfRoaY5FLWgBz584d9HdGRob6eSA7VERExDUQa+jM8+xB
      LHyfDnMq5oVPkH82FQSB4sjbqJWSeaDnT3jeeQyxr5HlxggE371gjx1VmW8EzGYzixYtGnRs
      /vz56ufk5ORBvzU0NMYe16VdHgqFcLvdRHprmOf6ACl1Haen/wBm3Nk/f/M3PNGZ6Jc8juLt
      JpicjRB0Eyp6axQl19DQ0Bg7XJcKwO/3sy2nlFXyHgLGKKTF3xzU8asIAqalj2P74g6UtT+h
      mqkEi95FCY3PXX8aGhoa5zLmFYDH4yHvVDFerxev16t+DjoaiXEWcUpcimywXbIM0RaLIIjk
      i4uRnS2Eag99StJraGhojF3GvAKQZZlj5W3qPoOBzxlKISBQaVp4ye87nU7V798dPReXLoZg
      4Rsoyqe/e1lDQ0NjLDHmFcDFmCWfwWmfSsgUox6rqG8977x39xeqm8AUnZFDoSVIZ48ht545
      71yXy4WsKQYNDY1xwnWpAGoqSjC5GyiWpoMgUPm3jv9kVed55zq9gyMPtsdmIxvD8Of9DkUe
      HKJg3/Fyuvu8105wDY1xjN1VzQS5ZbTF0DiH61IBtBTnAFArTgfgxAU6/oshG+wYFj+GVJ9H
      qOKDQf/zBCRCkhY7SENjxFEUPuv/M2uEg6MshoLD4UBRFDWwpdfrHZWAlmOB60YBSJKEx+MB
      IFNXTtAUg88++YrKMmQ9gC55Ib49/4bc2zSSYmpotRHSRAAAIABJREFUaFwAXaAHi9RDKwmj
      KkdhYSHvvfceAIcOHcLr9bJr165RlWk0uW6idPl8PnbklWPwdRDnOk2x9WYQrkx/eXwB7Ot+
      gufV+wgc+yPmdf86wtJqaGici8HdjCgHqAklkDlKMrhcLjo7O9XNiR6Ph927d3PzzTcjiqKW
      EnKs4PF4KKlqYM70lEHHnX19rPZuBUUhX79syOX19fVRUdes/v2X/YU8dNtNGKZvIFjxEcYV
      30S0xlyiBA0NjashwluLbDDQrkwYNRk++ugjUlJSKCkpob29nUAgMChwpZYScowgSRK5xc3n
      zcut9G8nxV9Inv0egpa4IZcXCoU4Wt6u/t3rCXK6pAph1r0Q9CDV5Y6Y7BoaGv0Eg0FcLheK
      opBqaEEyxxI0hI+aPLfccgspKSmEh4cTFhZGZGQkGzduZNeuXdoawFhHlHykeY5SG7aSMvua
      qy4vt6QFISYdwRpNqCHv6gXU0NAYhNPp5J29+UhSiCm6Vvz2lCueth0JIiMjiYmJYdWqVVgs
      FhYtWoTNZmP16tXjNg/4mJwCuhD61pMIkp9T0uwRK1PQGREnzERuL1Pn+3SEEOj3FhAuFF5C
      45px+vRpurq6CA8PJy0tjWAwSGRkJBUVFWRmjtbMscbV0OMOogv0YZJ6qReHtwDc2NhIaWkp
      RqORpUuXcvbsWaZOnUp+fj4LFiy4YpmioqIG/Y6MjLzisq53rg8FoMgoha8SMMbiDJsx7K9f
      KruXLj6TQOMJFG83E3XdrOr4OfaDEOjdjHHJYwji9fGIbgTa29tZt24dAA0NDXg8Hk6dOqUm
      79a4PjG4mxDkAA1SHAwjz1JdXR0rVqzAarUSDAZpamrC5XJhs1069IvG0LkuerdZzj3oPGUc
      CnsIRRh+pq49p2ov+j9dfBaEfPiaS8jw5WEI9eCKmo/9yO+R6nIx3/ZLxPDEqxFfY4jodDp2
      7dpFWFgYiYmJ5OTkkJGRQXh4OIrycZrOUCik5Ri4DhiYVmkqP0USIo3SRND155L45Jy7LMtq
      ulZRFNHr9VitVvLy8giFQqxevZqqqioiIyO59957R+N2bkjGvAIwdBax1PM+HRGLqLVcWXpB
      hytwweNerxd7wjwESzSNH/0nEaE2iqVphC/6IbG6any7fojntc1YNv0PuriMC5ahMTIoisKa
      NWsQBIEPPviAxMREVqxYQXl5OR6PB6vVqnpl6PV6TCbTKEuscTkGvGpaqguJN0US0PcvABuN
      RgwGw6BzRVE879i8efMQRZGTJ0/S0dHB1KlTEUWRs2fPMnnyle0B0hjMmF8Elk79L0HLRHYY
      N4942e8dKETSmTEs/AIJgUpEyUtD7AZCIQl5ymqsD74OejPe97+N4neN+PU1PkaWZfbu3cvu
      3buJjIzEZDJhs9lYt24dp06dGm3xNK6CKfo2QtaJKKLh8iefw8mTJ9m9ezft7e3ExcURERHB
      ypUrqaqqUuN7aVwdY9oCqKiqJa3lDE2WBci6kffJ7f6bZWBc8Hny651UOMPoMadQWN2G2WRg
      9vRUzBt/hvetLxIs3YZx3oMjLoNGPzqdjltuuUX9+9wF+JUrV46GSBojgBj0EKt00mWZA8P0
      tFy8eLHqnCEIgppxbu3atSMt5rhlTFkAHo+HwtIqAoH+jjnv6HGEgJPy4KRrel1fIEStbSk9
      5hQAnN4gwVB/a9UlZCFETiJUl3NNZdDof8kHfjRuDPTeVgTJR23oykJAaO3h2jKmFIAkSewr
      aFDNu+RQFQoCHfprqwD2HSulx3XhLGGCzog+dRVS00mUgPuayqGhcaNhcdUBCnVXqAA0ri1D
      ngJSFIV9+/ah0+mYOnUqPp+P1NRUmpqasNvtqk/tiKEoZIkl+K2JBK3xI1v2J+j1fDzivxD6
      1GyC+f+H1FKAformkjjAyZMncblcTJgwgaioKNVbp62tjfT09NEWT2MU8Hq9mM1mddSeLDQh
      GyNw68avr/1YZsgWgNvtxmQysXLlShISEqivr8ftdnP69GkiIiJGXLAwZzlRngpOiMuB0TUB
      dRPngN6EdIEkMuOZrq4uVq5cyYwZM2hvb8flcrF//34SErTR3nilrq5OdfEUg25m6yrxhqWj
      6DSvrbHIkC2AYDBId3c3O3fuZMGCBXi9Xt566y3uvfdeRFFUo+jBlftpe739yVgkSWKJcBzZ
      EE6VefGwyxkOTqfzgnFAZFk+5x6MCOGTCJ49CfPGp/+5oijq2oxer0cURfx+P3v27FGjK+7Y
      sYPFixdjtVpHU1SNUaK8qg5J+vhdMldvRVT62CWuHkWpNC7FkBVAREQEt99+O8FgkP3792Ox
      WFi3bh0nT55Uw6lerZ+20+kEoK2tjRR/Cc32+ch687DLGQ4f5pUOarQDiKKIyWSitr4Ro1FP
      ROx0aDyGUa9D0I1p56lrgiAIg6IjKorC7bffDvR3/MnJyaxdu5b8/Hxmzpyp+oBrjB8OnTnL
      vJT+2QAl6CVU9Dau2EU0iimjK5jGRRnyW9re3s7p06eRJInZs2fT1tZGYmIi3d3dNDU1qaPA
      keBU3kHSQm7ygzPh2vb/dPT5ibJd3D85v6qVPpeX+aEYUr0Oes4WE5Uy99oKdR0QCATYt28f
      er2euLg4zGYzYWFhLFu2jIKCAhYtWjTaImqMEn6/H0PrCRR3B4W2TaB58YxZhqwA4uPjmThx
      orpVe8qUKQDMnTvyneE0oQpFZ6bbMm3Ey74S+jxB/JOWIDS9gVi1HTQFgMlkYsOGDciyjCiK
      g1z1Jk6cOIqSaYw2H374Eet9byAZwqlUNGeAscyw3EAFQUAUr7XnqMI0fQM+eyqy3nKNr3Vx
      JFkaFEROjEgiOGUtYuk7SB0VoybXWEIQBHQ6neanrUFlTT2SLGNwN7Gs4T+Qumo5EfsQsu4a
      m/DDoLe3lwMHDnDgwAFCoRA1NTUAlJWVjdudxWNqHwCAIAWxeJpoEpJGVY7imnYqaxvVv2VZ
      4XT4HfSGzHi3fgPZUTd6wmlojDH2FzRA0Eds0e+wGMC/4f+nWBlb8bNcLhdLliwhNjaWuro6
      qquraWhooLu7+1MY2I5NxtxKnd7Tiih5qQkmXvP5/0vR4w7gD348Kiitb8cfBPOsbxFW+wye
      dx7DuumPiNGpoyekhsYYQUBhVegjwnwNHI57nMRgJDC2Nk4mJSXR0tJCVVUVGzdu5PDhw3R0
      dPDAAw8gCIKWE3gsEBVoQEGgXTe2QjD3uvungyp8E7HO+xfSTz+Nb9e/oL/rvxF0hvMiGWpo
      jAeqahuIiQpnur6OhI7duJLXUh6cSXlh02iLdh6NjY0UFRXx2c9+Fr1eT3x8PHa7nbq6OtLT
      07WcwGOBmYYGZEMYIfPYXEjs9QTxWZIwrfkeUmshTa99hcrystEWS0PjUyMQCKh7fvacqqPH
      0U1m++u0S1F0pD04Zr1+SktL0el0HDx4kM7OTmw2GzfddBPV1dX4fBcOBXOjM2YsgMbmVnxe
      N1OkSnps01DE4Sd+GWl6nW78/gtnE9NP34jJ00XswV/D6Z8ip/0e0Rr9KUuoofHp8/7+U9yU
      mUJiQn+IFn/xVnTOBo5ZH2GmaGGsTf0MMJBtboDY2FgA1q9fPxrijAnGhAUQDAbJr2imo7YI
      vb+LgtDYWDwqrO2io9d7wf8JgoBh3kM0zPkHAm1l+Hc/jaIMM96thsZ1SGuPT50fjxKdxNa+
      SWkwhZ7oK8/TqzE6jAkFcKSgnLZuJ+auIhD0NOqnjrZIQ0KSJOoMGZRE30mweh/BEy+ed04o
      FFLNZQ2NGwkl5Ge188/IAR9nJmxGVsZEd3Ld09beQXNr26dyrTExBdTjDuL1hwhzFOALT0Ey
      Xx9TKUcLymntdFJrXoUuzE1G7jNIHWUYl34FXUwaAPnFVSjAkrkzR1dYDY0RpLqxE/up3yJ2
      FrPTvgWPeWw5bVzPlDd04PEFSYy/9uugY0IBANhFLwlKE1Xi2J+Pa27vobruLD2eIG5/CBA5
      YfssuuhUZje8gad6H8b5f0dw9kM4XD50utFfz9DQGAlyTxQhKwrU7YfG9zkgbKQrPGu0xdK4
      BLIs09PTQ3FVE1kzJg+K3jxmFMAUXTN6QaI8NGW0RbksZzvdKDTj9Q+e2glMXot13ecIHP0f
      AidepO/MTiJNs2DKaty9idgiYkZJYg2Nq6e3t5fCmnYWhg4zq+NtmnRptMeN/QHbjUZNfSMu
      j4+sjKFNlUuSxDv7z+DxS8ye2r/BVg4F8LWVjx0FYHdWoohGekxjXwEANHae7+nQ1t1HdYed
      qbf8iEb9VIQzrzLVvw9D4UeEyiPxxKYjhMVjmPlZ2sUkImLjsdlsoyC9hsbweXffaZYH95Da
      9h7FzCZ/wkOExk4Xcl3j8/kIhULY7Xb1mBLyAQKCfnBk5c5eD82dTrKG4Svj9YWIlVvxnTiN
      M9CC0FWG3F07NmpPEBTsjkICUanIhuu3Q2zu8hAX5WJamkCdKYuS2AQsios4bxkJoRoSejuJ
      6jlGqGwHFnMMws3fR5m2dlyGl75RURSFvr4+zGbzFYVEH21cLheCIJw3MOlzdDLbc4DU9q0c
      UZZQnrAZRdDa7UjR19dHWX0HS6ZGkdbwCrSdwV3iAlGPbvIyxPBEdIkL0CWfH2XX4/Go+TkA
      LBYLBoMepAAhn4e2gh3c0fcOMd5qpA4BxRaLGDuNQ/4Fo68AisprkN2dxNOKJ+pOuLDX5XVD
      SArhdn9sHXgFO/XWRdSziIwpsXxmUTpS43E8h35L6IPv4M6bjBCdhmiJQD9lBdLEeZyq6iRr
      Zuqg0YDGp8tAoqCas63ERNiQepuIsemxxyYjGK1gsCJcYK+Koii8vec0d62aNUgBdHV1UV7X
      yvKFsz8V+YPBIMFg8KLJeVwuF6IoDvp/aWUtpXXt6HUCi2cmE20MQNUHSA1HkTprmOnrplCZ
      Q0XCA1rnfxX4fD4CgQBGoxG/36/OycuOOgIf/hxzSzEdpqk06yZjF4JMrjlAMOhBCP0e3eSl
      pDidTMCKb980BHscnrY6dJKX7q4uWg2pzJ6ow9BVjOJsQfE7CQ/5cQix5FjupNE6l4wZ00if
      FEfVgbLRVwA1LT1Eu0rQIeGKWQCNl//OWKaisRuDTrxodEFPEKTYBXQu/3cqD71Fkq+U8LPl
      ROh8hIr/iiIaSRSi8ddOQ5x+C5bpnwGDBST/3zqdUa+ycUHu8UIi2nOJ6C3CKPZh9dQjyMH+
      LU56C0J4AtgmIur0OMMzMM9YR/jEFBQEPN7zRzHBUIiTlW2fmgJwu904nc6LKoC8wmqiwiws
      ypyuHmto76O7rYl4qQFdfS7+3nIEQYc/bAp1wjRqwjNps81BGRve49ctjp4ePjxayW03TWf7
      4XJmJVqY3fkO8yo+wI+ekzEPUmHsH+lPTY5myrwUSksrcZ18nVkNufhNceiCHXgKizCICgZB
      h1syYBMEZssFSF06gpFpKHE3UdYRokmXRocpHUXsD1dzqqabiuY+YAwsAuuQmdC6mw45ihYS
      AM9oi3RVBIIyxfWdcIE4UpIkkV9aS0VjNxMjzFRZllNmWQ7A5tXTifA3IDedwH3mKKbWEgyN
      ObgO/gLBZEPx9iBGp2LI2oxh5mfBaNPCMI8gTqcTvV5PRc1ZInsKWFL1AnpXE05dDMbwGKom
      buKs187iKSZqqmuI9TVjcDYTaxOx1B9GKPwjbksU6Izc6/Ji2JmGL2kuYngCQlgCxq4Wpgfb
      UaSVCLrzY8w4HA7KaptZOi/jspEpA4EAPp8Pu91OKBRSPw8noqU/KOP1B/F4PFitVpSQj6z2
      11jcuQu9HKBbiOWUaQNZN3+OD8v9uLzaXpaRxO0LIcgBotsPEFFzAEXXQUHkPdTqM3DqJww6
      t6S2nYIGD/7Iz1KibFCtr0mxVu5aOYOm9h7ePVyLoEjYFBc+xYjZFgYKuOwXrjeXr//4qCuA
      OdIpokJ1HIp6CIMy6uKMCIHghXcE17X2Igj9L1+kbfA524/WsGFJOvWWcI5HzgFFIUGqZ1Vk
      PWYxRH6zRGagFGnvv+HP/S90cbPQJS1AP20dYsw0TRlcBfnFFZTWdbAgSUfsmT9i7zhOBxMo
      iPj/aLVlctOsZDp63NQ19dDVq8dp/3hPx8L0GOqrStmY4qW++ChJ0RbaFA+pUg/+068jKBLI
      IfQI3KQouP/0AfrUbITwJMSIZATbBHTxmYRCIY6XtbIkcyoBnw+/P4jNKCC1FRG0JaGLTMbv
      D2C323G5XPz1QBGb1y/E1V7LwZPlfDYrCrl2H25dNGFRsYhnj2OTFLylEQg6Iz6fD1HUY56Q
      ij59LYmukwjVhTjO2tBPmk6o/jDW+iOU2tdQb55Hm34yiqCjucyvdhYaV4/f70fqayW19wCW
      Hb9gracJpyWZ3oX/ypnaiPMikPY6PQT8H0cmPnfqTUZHbauTTofrb//T4RL6p5OGWmeCcg1i
      nvb19REeHn7Z8yoryond/w3O9okcTP4u0xMjKW3qu6Jrpk20UdN2ZTFIomwGetwXjvlzrUiO
      tXK2c7C1E2bR4/zESCvMomd6UiQnqzoJN4vYXVXMEUowdZ1hgtAFsoQucR66SUvQJcxDsSfg
      19mx2OyIOj0IugvOVQ+XpqYmkpJGN0fDAENtX0Mhv7iCgvImkl3HmdfzV5SQn3zrZ6gJX0NQ
      6J/Dt5h0mA06ul2Bi5Zzb/Z03jlUodbhwqmxVNU1MT3OwESxC3tkLHuOFDPbd4hU8SxywIuI
      hACIsdMIJmfTUbSXBIsfxetAVgREOQCKhCyaICKZoCximzyfoKuTpuZWkqLN0FaIIIdQgKBg
      Qaf40QkCsi0OX0BCrwRR5CCKrKDXiehlL8gSsgIh0QQI6AkiG8MpsN/KGcNSRFFAkj/uFoYz
      tFg+M5bcss5LnvO1z2WfFz13LLUvr9c7ItFAfT7foKRSdouR3uOvIpz4b4SQF7d1CifC7qRG
      mEqYRY/bJw0rBLVeJ2LQCdjNetr7/Fck46gNuRVFwdywG52rmbq4r2jbyOG8zn/g2Mmq/heq
      zyfTp0/DPDGTGt3tLJliIt1zDF3dbgxHnwMlhAD989AGK4LRgmAMA1MY6M0EjVEY7dHozHYQ
      DSAIKF4H/r9FQjTHTMK46EsI4yA5hsvlQlEU2qvPsLb9FaI8VdQJqZyI3ozLlDDoXK9fQn+Z
      Z7LrRH92qYE67K8zE8eb4TNZc7DFxtJpFzhgn0PCLbP5y848bEofZl87630fIRS+gtGUQlkw
      npB5FiFZwBYWTiAsheDZE8yxBulo70Ioeg+dyY5VMiH77FSEraVDTMQvWmnVp2KQ3NybPZ2A
      KZa9p2px+0MEQwohSWbxjHiyEnRU5PyFCncUnaZUZHTYcSGabHglPYS0eFYjRXtnN3tPVGEO
      dpLqK2COfBqxu5rOsLkcM2+gXfdxHnWnN4Q4TCs+JMmEJLCbr7wbH/I3ZVnm4MGD+P1+srOz
      qa+vZ8aMGdTU1BAdHU109PDCNyg99URW/B8VTKPBMDaCv11vHKv3U2ZZBLGLECOcmNyNhEmd
      WGQXRsVDhCGE6Hei87jRyS5sUgWK4EeUQ4CCooAk6FH+NsZzKkYCtgWkzV44pOsXFBTQ2tpK
      ZmYmsiwTGRmJJEm0t7czffr0yxfwCcrLy9XY7FFRUQSDQSIjI6moqCAra+R2myqKQt7hXFK7
      dnJT+37cIR177ZtpDF+GPKzx7sf0XWKOXFEUqhvOje0i4NOF4yMc7Mn0rbyPPUeK6QldIAOS
      C4hKIWX5dHYeqkAnB1gwbSLHqx0snhbL8crBo+2g3sR7Bb1ALyaDiNf/sTNCUW0Het1EmmI+
      Q1voY0vbSRj4AcZW59/Z2cmJEyeIiopi0aJFVFVVMX36dE6cOMHixYuHXZ7L5SInJwebzcaK
      FSsoKysjIyODU6dOMW/evBHdsd/Z3oKv7EMW1m9jklSFIAh0madQFvtFKgzzkJWxMWU7ZAVQ
      X1/PhAkTmDRpEidPniQYDBIfH09lZSUbN24c8gUVRUburMS77Ul6vFCc+PAVv3Qa0OcdMDHN
      YJpKG5/YHfiJPiU5xkJ3rwdBDhGQZELCYF/1OU4TaUO4biAQoL29nfXr1/Phhx+SlJSEwWDg
      2LFjbNiwYdj3IUkSNTU1bNy4kQ8++IA5c+bg8Xg4deoU2dnZwy5PURRQ5P4fOYjU14avqRCp
      swKxq4ylzScJSlBsXMiZmDvw60ZmSulCyAqqFQdQ1TA40NfuUw30XqjzP/eck7UASKKR49UO
      gPM6/wEG2sQEw+C69QYkCqrbCEnXR6arkydPcsstt3DkyBF6enpoaWnB6XQSFRV1ReUdP36c
      7OxsKioqaG1tpampCVEU0el0V9T597cxCcXXR6Czht6GYqyKE727CdPZE8S7WvAa4ygJv51a
      0zy6hL8t7o6hxz9kBdDd3U1qairh4eGqH+tbb73Fgw8+iCAI581dDfytKIq6QCm7O/B/8BRS
      0yn6FDs5sY/Rw5VVpsaV4w0JgOGCk7sKF647zjkO/W6GUVFRiKKozue+//77LF++/Io2QIVC
      IWy2fs+mgfIOHTrErFmzCAsLu2j7GnxQJpD3LFJ7KYqvD8XbjeLrhYAbFLn/3tDRLsTSYLqZ
      GttS3Ia4Yct6tRyv7Bj0d6/n8utPQzlnKJxrEYwWiqIgy7Lats5tbwMIgqC2rdjYWPr6+qiq
      qiIyMpLPfe5zV3RdSZKwWCxMnDiR7u5umpqaaG1t5eGHHwYYlBLS4/Go+ygkScLv9/d/rj+M
      qeo9kEMovh4UVweKpwsFBQv9C7F+QxjeiGmcjb2bGkMmob+5zV50jkT5+J6VK9AOdot+0JrN
      cBiyAoiIiKCrqwuz2YzBYECn03H33XeTm5vLhg0bUBRF9X0f2ESj0+nweDyYTCZ0Oh2+jhas
      BhvBuV/CFbuSWZ8YdVmMOibGRlzo8pfFZBCZHH9lUUR1n1j0+jQw6kXSk67M5L6aezXqRaYm
      X/y6FqMel6vfq8DlcmG321EUBUVR1LDWOp0Oq9WK0+kcdPy2227j6NGjTJ06ddgLaHq9Hp/P
      N6i8lStXUlFRgdvtxmq1qse9Xi+CIBAI9C/KDmyoEVEweXrA6wBTOEpYMrLBhmwIQzJF4bdN
      wqGPRxJNRHOJF/ICXE0bCbcaWD33098VrNcJn/poP8yiZ81cyyXP8fl8+Hw+jEaj2kcAav0K
      goBer0eWZWRZpre3l5iYGKZOnYrBYKC2tpbU1OHn4hYEgWAwiMPhIDw8nKSkJOLi4igqKmLO
      nDmDUkKaTKYLtuGgxUDA6wBBBGssYtxs9FFTEKPTUOzxhMwxKHorRiACmDNsKT9dhuwFJEkS
      u3btIhgMsmrVKmpra8nMzKSqqgqbzUZy8scLGiPppaExNriQl0ZeXh4Oh4MZM2YAEBMTg6Io
      1NbWsmDB8JOD5Ofn09bWRmJiIvHx8fj9fmJjY8nPz2f58uXqeVr7uvG4UPtqamoiPz8fm81G
      dnY2xcXFZGVlceDAAbKzs4c9beNwOMjJycFoNLJu3Try8/NZuHAhOTk5LFq0CLO5fxpupLyA
      rgdG1Q1U4/phLLnpae3rxmMstS9NAQDNzc3D8kk9l4E4Fxo3DldTp3q9nokTBye36OnpGRQz
      6dOSRWNs4vF4CA8Pv+LsebGxsYPWnvx+P52dl96PcDFCoRCiKA5rZ/X1ykUVwDUwDEYESZJG
      JcGKdt2r45M7lcdq+xpY7/i0X/7RqufRuva1uObFHBbGGqPxvAcW3T/5Hl50EXishhYYqNhP
      U76BTmE0nslo3C/0N5iBRbFrwVhuX6NR19f6eV+MG/V+x2r7gtGp64E6/uRzue5snNGq2PF2
      3fFg/l6M0Xjmo/m8x9v9jjajce8Xq+NrsgisoaGhoTH2Gb9qWENDQ2OcM2YVgCRJ6gaRoZ5/
      pSiKgtfrVefbg8HgkL0RZFkeFPHvahhqOYqiqOnfroRzN1udS3d396C//X7/mF5Mu1oGAsIN
      BVmWr+pZBAIB9ZkrioLvbwH4hsLV1PW5hEKhId/D1V7zQm25r69vULsLhUJX7PVzPTAQMWGo
      XE0fJsvyoDrz+XzI8uU3mo5ZBXDmzBm2bt06pHOPHDlCTk7OVV3vf/7nf1S3se3bt3Py5MnL
      fqe1tZU333yTsrKyq7r2AAcPHhzSebm5uXz00UdXfJ1AIMCRI0fOO56fn69+Pnz4MK+++uoN
      qwD8/v/X3rnHRHnlffwzd+bKMMxwc7wgKMhIdRS0ijZWG7XXdXfbbNp9o2+z6SUkm/2vb9J/
      tsmb/aPpP/2naTZxN7vJasS47ppqrbFKVaqiWOh6gwEGgQFkGGCYgRnm+rx/UJ5XRFsLVK2c
      TzKZZ85zOc9znjPn9zvnec73F+Nvf/vbA70q6PP5+Ne//jWrRrG2tpavv/4amBC9q6mp+cF9
      0uk0J06c4OjRozPO904uXrz4QA3SrVu32Lt376zyulddnpzVDdDV1cX+/fvp7u6eVT6PM7W1
      tVy4cOEHt0ulUhw9ehSPxzPjvPx+P3v37iWVSpFIJPj0008JBoM/uN9jGYFFkiT8fj9Lliwh
      GAzS1dVFb28vkUiE7du309DQQDgcZtOmTbJSYF9f36zyLCoqwuPxYDabZS2a7u5uWltbiUQi
      lJWVAeBwOPB4PKxduxa73c6zzz5Lf3//9x36gUmn07S0tJCTk8PY2BiSJMkzIROJhCy6t2HD
      Bmpra2ed18WLF3n66aepr6+fpq5YWVn5o7zUnxutra1s376d5uZmzGYzR44cITMzk4KCAlQq
      Fd3d3TidTlauXEleXt6MBOnuRKVSyY2vz+ejoKCARCLB2bNnGRsbY926ddy8eZMtW7Zw7tw5
      Nm/ejEKhYNu2bZw5c2YuLlnWubl27Rput5vLly+j1Wrx+/0Eg0FefvllDAYDCxculGd3zyav
      gYEBQqEQDodjWkNfUFDApk2bnlgHI5FIoNNj2F7ZAAAOBElEQVTp5JGFkydPTsjhjI+zc+dO
      jhw5QkZGBi+88AJKpZKdO3fOqg2TJIm8vDx6e3uJxWIsWrQImFDsHRwcxGg0kkwmqaiowOv1
      4nA4cDgcj2cPIBaL4fP5iEajNDY2EovFqKqqYvPmzbS1tTE0NMSOHTtkVcC5eKXKYDAwPj5O
      a2urLGWsVqvRaDQMDQ2Rl5dHS0sLN27cYOnSpfL6uX6DIhaLyVY8kUhgMpnYtm3blIlPs32H
      ePJPNznEdq+htrsDdjxpNDc3Mzw8TEdHB+l0mkWLFrFjxw78fj/RaJTi4mJWrpxQcpmr+1xQ
      UEB3d/eU4+l0OnQ6Hb29vaRSKQYGBlAqlfIre3P9uqAkSVPuezweZ9OmTbhcLsLhMDD7+jVJ
      MpkkHo+TTqenOROP4pXXh0lbWxvhcJihoSFu376NWq1m27ZtZGZmysMzzz//PMCc3eeioiK8
      Xi8+n082AFqtloyMDHp6eigqKuLq1at0d3djt9uBx3QIqLm5ma1bt1JZWUkkEkGSJMLhMM3N
      zeTm5mK1Wqc0iMFgkFAoJFfgmZKfn8+NGzfkWatNTU24XC4MBgNqtRqz2UxfXx9WqxWYmDIe
      CoUYHR2dlbcciUTo7++XZWkHBwfv6w1IkkQwGCQajc7oekdHR2lvbyc7O5t0Os3Q0BB+v3/a
      dsFgkEgkQjAYfOK8tFgsRmZmJi6Xi+LiYgKBAJFIhN7eXtRqNUqlUv6DwMT9GRkZIRgMzmqc
      trS0lGPHjrFixUT8i+7ubvR6Pfn5EwFo1q5dy8GDBykvLwcmhgaGh4eJRCKEQjOLlAcTDXEo
      FGJ4eBitVsvo6Ch+v/++dTYSiRCNRhkeHn6gceQ7GR8fJxgMkkgkUCqVBINBent7px0nEokQ
      DocJh8Nz9ozjcaKrq4utW7eyY8cOmpubSSaTjIyMEAgE0Ol0OBwO2QlIJpMMDw8TCoWIRqMz
      zlOj0cizmFUqFZIk4fF4WL58OSqViry8PLq7u8nMzJTzVn3wwQcfzMUFzyUKhYIFCxag0+mw
      WCyMjIwwNDTEwoULcTqdmEwmjEajvH1HRwfJZJJEIvGjA9NMYjabWbBgAXa7nczMTEwmE06n
      E6/XS1FRETabjXQ6PeUPOzw8zPDwMBqNhoyMDAwGw4zy9vv9+Hw+Kisryc7OpqurC5vNRn5+
      PjabDaPRKF+zJEncunULk8lEKpX60droXq+XVCpFWVkZdrsdj8dDYWEh2dnZmM1muVy9Xi8m
      k4mxsbEplfVJYDKWhcViweFwkEgk8Hg8GAwG1qxZI5f1pCccCAQYGRkhEomQlZU1I2/NZDJh
      MpnIzc2loKAAs9lMfn4+/f39ct2zWCwMDAxQXl4uK1d2dHRgsViIx+NkZ2fP6Hrj8ThXr16l
      vLwci8WCJEmMjIxQXFxMTk4ORqMRg8GAyWRCrVYzMDCARqMhHA6TnZ39o3oEwWCQ1tZWKisr
      sVqtDA4OotVqWbRokVyXVSoVAwMDsqqrwWBAr/9+BdGfE5IkYTabsdls6PV69Ho9Pp+PeDzO
      6tWr5bKebC9isRi3bt0inU6j0WgwmUw/Os/J/fLy8igoKMBqtcp5DA4Osnz5ckwmE7dv32bV
      qlWybMbPYh6Az+fD4XDMSGd+rojH41y6dImNGzfO60ksTyKJRIK+vj652/yoaGpqwul0Tul9
      CJ4M2tvbKSoqeqTncPv2bQKBgDy0CT8TAyAQCASCuUe4sgKBQDBPEQZAIBAI5inCAAgEAsE8
      RRgAgUAgmKcIAyAQCATzFGEABAKBYJ4iDIBAIBDMU4QBEAgEgnnKz0qRSZIkRkdH76nHotPp
      nqjp5JOMj4/fU7NFqVRisVgewRkJBIK5xn+7h/HYg8c/mSvuawBSqRQKhWJOZA8GBwexWq1z
      ojJYc/IbzrcMTkv/3z0bWHCHAZgUkLtT0+XnyHDXdXS1/zMtPVz231g2/5f8e3x8HK1Wi1Kp
      JJlMkk6npwjm3U0sFkOr1T6Qxk88HkeSpEcqxSEQPMn09XaSV7AECQkkCUiDxHcfeeG7Ze5Y
      /u57Wvod+0kT6dI9tr2vATh+/DhOp5PVq1cDE/rekxK1k+oRk41HKpWSJWwlSUKSJNlwSJLE
      3r17qa6uxmw2z7qgIrEUg+HpQS3uFLRIp9N88skn6PV6CgsL2bZt232Pd/e1PG4o0kk0kdvT
      0pXJqd7C+++/zxtvvEFFRQU1NTWMjIxQXV2NJEn3vLb6+nqqqqoeyDju37+fSCRCdXX1tHUz
      Kb/HvcwFTw6xWAy1Wv1YOYGTEeE0Go0sLKhUqTGaLEhS+v8NQJqpjT+AlJ48CFMa/8n0uw3D
      d9tK9zEW9zUA0WhUDuvW2NjIsWPHMJvN7Nmzh48//hi1Ws3TTz+NVqulrq4Ou91OZWUl//zn
      PxkbG+Ptt9/G7/dz6tQpOjs756zwHoSWlhaWLl3Kiy++CMAXX3xBZ2cnNpsNl8vFyZMnsdvt
      /OIXv+Cvf/0r6XSa119/nYMHD6JSqdi1axcFBQUP9ZxnS25uLt988w1ut5uenh5MJhPXr1/n
      yy+/RKlU8vzzz9PX18f69ev57LPP5Ir3pz/9CZvNRlZWFs888wwHDhwgnU6za9cuiouLkSRJ
      liJOJpMcOnSI1157jePHj+N2uzl06BCSJPHmm29y8OBBRkZGeOWVVzh16hTRaJR33nmHo0eP
      EgwG0Wg0vPLKK+zbtw+A3/3udzNSPhQIHoR0Os0f/vAHdu7cya5du+65ftKpvV/69zm7M+Xq
      1as0NjYyNjbGu++++0jFJe8rB33jxg2sVisLFizg008/ZcWKFVy5coV4PE5JSQkVFRV0dXVR
      W1uL2+3m/PnzOJ1OnE4nq1atwu/3c/r0af74xz/S3t5OZWXlnAwhXLp2iw7/2LT0F9ctwWKZ
      6GF4PB6MRiNOpxOYGB4JBAI0NjZSWFhIIBBg06ZNXLt2jXg8TlZWFj6fD5/Px6pVqygrK3ts
      PIbRQA/atumhMWN567EUrpV/X7lyBa1WK5fx6OgoHR0dVFdXMz4+jlKp5OLFiygUCqxWK16v
      F7fbzX/+8x+qq6u5cOECbW1tvPnmm6hUKpRKJbm5ubS0tHDt2jUAWR5ao9Fw6dIlIpGIHHAi
      HA5z+fJl3nvvPYxGIz6fD6/XS1ZWFj09Pbz11ltcuHCBgYEBTCaTHJ1q8eLFD6cgBfOOlpYW
      UqkUN27coLy8nMOHD1NSUsJf/vIXQqEQBw4cwOv1Yjab+cc//sHZs2cJBAIcPnwYr9fLsmXL
      +PDDD6mrqyMSidDa2sqhQ4fo6emRYzbMhC+++ILdu3eTSCRkmW9/fw9ZNgeypy8P3dzN/bQ7
      Z6bp+b2mp7Ozk/b2dqxWK3q9nl//+tcsXLiQ+vp6zp8/D4DFYsFisfDqq6+i0WhQKpWyRVMo
      FHR2dk4LNv5TU1paSl1dHaFQCL/fz+HDh3nppZfIycmhqKiIl19+mZqaGnnMvKysjJUrV7J7
      925isdiswy0+KtavX8+f//xnNm7cCEw8GA8EAvj9fqxWK1lZWdTW1lJRUSHvM3mvlEolVquV
      b7/9lpaWFnn9uXPn2LlzJ9u3b6euro4tW7bw97//neXLl2OxWFAqlTz11FMsW7aM4uJi9Ho9
      J06coKysjPLycjQaDQMDA3g8HkZHRzGbzWi1WioqKliyZMlDLR/B/OLMmTPo9Xr8fj9arZab
      N2/S0NBAXl4e//73v3G5XNTX1zMyMoLP5+P3v/89ixYtIj8/nwsXLtDQ0MDq1at57bXX8Pv9
      HDlyhPLycs6cOTOrwEAqlQqFQoHFYrlnNL6HyX17AFqtFp/PRygUYteuXVy/fp10Os2GDRsw
      m80MDAxgtVr51a9+RVNTEzqdjhUrVmC327Hb7dhsNtasWcPZs2dZuXIly5YtmxOv+lb3bdJp
      CYdFN+WzfkU+lu+eMRgMBjIzMzl9+jRGo5G8vDwaGhooLy/HaDRy6tQpXC4XzzzzDH19fXR1
      dVFSUkJ9fT3BYJDnnnuOjIyMWZ/rXBAODpEMdpEwLpjyiee4sTpXyNtlZGRQVlaG1WqlpKQE
      vV7Pxo0bOXbsGA6Hg4qKCnJzc9HpdBQVFaHT6cjJyUGv15Obm0tGRgbr1q2jvb2drq4uSktL
      sdvtqNVqnnrqKXJzc9FqtSxevJhwOMzWrVtZunQpnZ2d+Hw+Oe+cnBxsNhtfffUVNpuN8vJy
      Fi9eTHt7O8FgkN/85jd4PB76+/txuVyPTTkLniwkSeLAgQO43W6USiXRaBS1Ws3p06fZs2cP
      V65cweVyUVpaKgfCcbvdfPTRR7z66qs0NjZSVVXFl19+STgclqObud1uSkpKKCwsnPEwUHNz
      M3a7nYsXL1JRUTFhpB5RD+BHxwPw+/0cOHAAlUrFnj17HvoYbiwWu2eYusn4vU8ak5HO7kah
      UMx543nz5k3q6urIyMjgt7/97ZyMTUqSRE1NDaFQiKqqKlwu1xycqUDw/SQSCS5fvszGjRsJ
      hUK0tbXJnv0vf/lL/H4/J06cIDc3lzVr1jA0NERJSQnnzp2jt7cXh8NBVVUVTU1N3Lx5E4PB
      IBsEp9PJ1q1bZ2wAotEon3/+OQsXLmTdunUAXP32EoVFZQ/9IbAICCMQCAT3YHBwkH379qFQ
      KNi9ezeZmZk/WV7fNJzDmuWYaKjven1T/mby+8510vRtvi9NXp5YJwyAQCAQPGLC4SDJe/T0
      f2qEARAIBIJ5itACEggEgnmKMAACgUAwTxEGQCAQCOYpwgAIBALBPEUYAIFAIJinCAMgEAgE
      85T/A2pQToT4WzYuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='State-Level Perspective' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
