<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook source-build='2020.3.2 (20203.20.1018.2303)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='4.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='data.state' name='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.7dsma' ordinal='12' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='fips' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='county' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
              <column datatype='integer' name='population' ordinal='6' />
              <column datatype='real' name='cases.percap' ordinal='7' />
              <column datatype='real' name='deaths.percap' ordinal='8' />
              <column datatype='string' name='countyState' ordinal='9' />
              <column datatype='integer' name='cases.new' ordinal='10' />
              <column datatype='integer' name='deaths.new' ordinal='11' />
              <column datatype='string' name='cases.new.7dsma' ordinal='12' />
              <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr' name='data.state.csv' table='[data.state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='dateState' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='cases' ordinal='3' />
              <column datatype='integer' name='deaths' ordinal='4' />
              <column datatype='integer' name='pop' ordinal='5' />
              <column datatype='real' name='cases.perCap' ordinal='6' />
              <column datatype='real' name='deaths.perCap' ordinal='7' />
              <column datatype='integer' name='cases.new' ordinal='8' />
              <column datatype='integer' name='deaths.new' ordinal='9' />
              <column datatype='real' name='cases.new.perCap' ordinal='10' />
              <column datatype='real' name='deaths.new.perCap' ordinal='11' />
              <column datatype='real' name='cases.new.perM' ordinal='12' />
              <column datatype='real' name='deaths.new.perM' ordinal='13' />
              <column datatype='real' name='cases.new.7dsma' ordinal='14' />
              <column datatype='real' name='deaths.new.7dsma' ordinal='15' />
              <column datatype='real' name='cases.new.perCap.7dsma' ordinal='16' />
              <column datatype='real' name='deaths.new.perCap.7dsma' ordinal='17' />
              <column datatype='real' name='cases.new.perM.7dsma' ordinal='18' />
              <column datatype='real' name='deaths.new.perM.7dsma' ordinal='19' />
              <column datatype='integer' name='cases.active' ordinal='20' />
              <column datatype='real' name='cases.active.perCap' ordinal='21' />
              <column datatype='real' name='cases.active.perM' ordinal='22' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases (data.state.csv)]' value='[data.state.csv].[cases]' />
          <map key='[cases.active.perCap]' value='[data.state.csv].[cases.active.perCap]' />
          <map key='[cases.active.perM]' value='[data.state.csv].[cases.active.perM]' />
          <map key='[cases.active]' value='[data.state.csv].[cases.active]' />
          <map key='[cases.new (data.state.csv)]' value='[data.state.csv].[cases.new]' />
          <map key='[cases.new.7dsma (data.state.csv)]' value='[data.state.csv].[cases.new.7dsma]' />
          <map key='[cases.new.7dsma]' value='[data.csv].[cases.new.7dsma]' />
          <map key='[cases.new.perCap.7dsma]' value='[data.state.csv].[cases.new.perCap.7dsma]' />
          <map key='[cases.new.perCap]' value='[data.state.csv].[cases.new.perCap]' />
          <map key='[cases.new.perM.7dsma]' value='[data.state.csv].[cases.new.perM.7dsma]' />
          <map key='[cases.new.perM]' value='[data.state.csv].[cases.new.perM]' />
          <map key='[cases.new]' value='[data.csv].[cases.new]' />
          <map key='[cases.perCap]' value='[data.state.csv].[cases.perCap]' />
          <map key='[cases.percap]' value='[data.csv].[cases.percap]' />
          <map key='[cases]' value='[data.csv].[cases]' />
          <map key='[countyState]' value='[data.csv].[countyState]' />
          <map key='[county]' value='[data.csv].[county]' />
          <map key='[date (data.state.csv)]' value='[data.state.csv].[date]' />
          <map key='[dateState]' value='[data.state.csv].[dateState]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[deaths (data.state.csv)]' value='[data.state.csv].[deaths]' />
          <map key='[deaths.new (data.state.csv)]' value='[data.state.csv].[deaths.new]' />
          <map key='[deaths.new.7dsma (data.state.csv)]' value='[data.state.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.7dsma]' value='[data.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.perCap.7dsma]' value='[data.state.csv].[deaths.new.perCap.7dsma]' />
          <map key='[deaths.new.perCap]' value='[data.state.csv].[deaths.new.perCap]' />
          <map key='[deaths.new.perM.7dsma]' value='[data.state.csv].[deaths.new.perM.7dsma]' />
          <map key='[deaths.new.perM]' value='[data.state.csv].[deaths.new.perM]' />
          <map key='[deaths.new]' value='[data.csv].[deaths.new]' />
          <map key='[deaths.perCap]' value='[data.state.csv].[deaths.perCap]' />
          <map key='[deaths.percap]' value='[data.csv].[deaths.percap]' />
          <map key='[deaths]' value='[data.csv].[deaths]' />
          <map key='[fips]' value='[data.csv].[fips]' />
          <map key='[pop]' value='[data.state.csv].[pop]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[state (data.state.csv)]' value='[data.state.csv].[state]' />
          <map key='[state]' value='[data.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyState]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>countyState</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dateState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dateState]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>dateState</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.perCap</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.perCap</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perCap</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perCap</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perM</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perM</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.7dsma (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perCap.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perCap.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perCap.7dsma</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perCap.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perCap.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perCap.7dsma</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perM.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perM.7dsma</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perM.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perM.7dsma</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.active]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.active.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active.perCap</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.active.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active.perM</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;' value='Σ Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' value='Case 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;' value='Σ Deaths' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;' value='Deaths 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='Death Rate' datatype='real' default-format='p0.00%' name='[Calculation_187532707400040448]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[deaths (data.state.csv)] / [cases (data.state.csv)]' />
      </column>
      <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY() - 1' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='County-Level' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.state.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' role='measure' type='quantitative' />
      <column caption='s_Cases Cumulative' datatype='integer' name='[cases (data.state.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
      <column datatype='integer' name='[cases.active]' role='measure' type='quantitative' />
      <column caption='s_Cases New' datatype='integer' name='[cases.new (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[cases.new.perCap.7dsma]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[cases.new.perCap]' role='measure' type='quantitative' />
      <column datatype='real' name='[cases.new.perM.7dsma]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='s_Cases per Capita' datatype='real' name='[cases.perCap]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County and State' datatype='string' name='[countyState]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
      </column>
      <column caption='s_Date' datatype='date' name='[date (data.state.csv)]' role='dimension' type='ordinal' />
      <column caption='s_Date, State' datatype='string' name='[dateState]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='s_Deaths Cumulative' datatype='integer' name='[deaths (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='s_Deaths New' datatype='integer' name='[deaths.new (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='s_Deaths per Capita' datatype='real' name='[deaths.perCap]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' hidden='true' name='[fips]' role='measure' type='quantitative' />
      <column caption='s_Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='s_State' datatype='string' name='[state (data.state.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_187532707400040448]' derivation='Sum' name='[sum:Calculation_187532707400040448:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases (data.state.csv)]' derivation='Sum' name='[sum:cases (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.active]' derivation='Sum' name='[sum:cases.active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new (data.state.csv)]' derivation='Sum' name='[sum:cases.new (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perCap.7dsma]' derivation='Sum' name='[sum:cases.new.perCap.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perCap]' derivation='Sum' name='[sum:cases.new.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perM.7dsma]' derivation='Sum' name='[sum:cases.new.perM.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.perCap]' derivation='Sum' name='[sum:cases.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths (data.state.csv)]' derivation='Sum' name='[sum:deaths (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new (data.state.csv)]' derivation='Sum' name='[sum:deaths.new (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.perCap]' derivation='Sum' name='[sum:deaths.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pop]' derivation='Sum' name='[sum:pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County, State,Cases per Capita (bins))' hidden='true' name='[Action (County, State,Cases per Capita (bins))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
          <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),County,State)' hidden='true' name='[Action (MDY(Yesterday),County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),State)' hidden='true' name='[Action (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (cases.new.7dsma,State)' hidden='true' name='[Action (cases.new.7dsma,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cases.new.7dsma:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Contiguous USA' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[state]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Northern Mariana Islands&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Puerto Rico&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cases per Capita (bins),County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County, State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1718193694053994508:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Bins' role='dimensions'>
        <folder-item name='[Cases per Capita - County (bin)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[cases.new.7dsma]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new.7dsma]' type='field' />
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='dimensions'>
        <folder-item name='[Calculation_1718193694053994508]' type='field' />
        <folder-item name='[Calculation_204561939512385536]' type='field' />
        <folder-item name='[countyState]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='state, county' type='drillpath' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='measures'>
        <folder-item name='[Calculation_1718193694052151304]' type='field' />
        <folder-item name='[population]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='groups'>
        <folder-item name='[Continental United States]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='State-Level Fields' role='dimensions'>
        <folder-item name='[date (data.state.csv)]' type='field' />
        <folder-item name='[dateState]' type='field' />
        <folder-item name='[state (data.state.csv)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='State-Level Fields' role='measures'>
        <folder-item name='[cases (data.state.csv)]' type='field' />
        <folder-item name='[cases.new (data.state.csv)]' type='field' />
        <folder-item name='[cases.perCap]' type='field' />
        <folder-item name='[deaths (data.state.csv)]' type='field' />
        <folder-item name='[deaths.new (data.state.csv)]' type='field' />
        <folder-item name='[deaths.perCap]' type='field' />
        <folder-item name='[pop]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Bins'>
          <folder-item name='[Cases per Capita - County (bin)]' type='field' />
        </folder>
        <folder name='Cases'>
          <folder-item name='[cases.new.7dsma]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new.7dsma]' type='field' />
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
        <folder name='Metadata'>
          <folder-item name='[Calculation_1718193694052151304]' type='field' />
          <folder-item name='[Calculation_1718193694053994508]' type='field' />
          <folder-item name='[Calculation_204561939512385536]' type='field' />
          <folder-item name='[Continental United States]' type='field' />
          <folder-item name='[countyState]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[population]' type='field' />
          <folder-item name='state, county' type='drillpath' />
        </folder>
        <folder name='State-Level Fields'>
          <folder-item name='[cases (data.state.csv)]' type='field' />
          <folder-item name='[cases.new (data.state.csv)]' type='field' />
          <folder-item name='[cases.perCap]' type='field' />
          <folder-item name='[date (data.state.csv)]' type='field' />
          <folder-item name='[dateState]' type='field' />
          <folder-item name='[deaths (data.state.csv)]' type='field' />
          <folder-item name='[deaths.new (data.state.csv)]' type='field' />
          <folder-item name='[deaths.perCap]' type='field' />
          <folder-item name='[pop]' type='field' />
          <folder-item name='[state (data.state.csv)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Documents/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='11/13/2020 11:22:44 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
            <relation name='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' table='[Extract].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[cases (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases]' />
            <map key='[cases.active.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active.perCap]' />
            <map key='[cases.active.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active.perM]' />
            <map key='[cases.active]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active]' />
            <map key='[cases.new (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new]' />
            <map key='[cases.new.7dsma (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.7dsma]' />
            <map key='[cases.new.7dsma]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.new.7dsma]' />
            <map key='[cases.new.perCap.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perCap.7dsma]' />
            <map key='[cases.new.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perCap]' />
            <map key='[cases.new.perM.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perM.7dsma]' />
            <map key='[cases.new.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perM]' />
            <map key='[cases.new]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.new]' />
            <map key='[cases.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.perCap]' />
            <map key='[cases.percap]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.percap]' />
            <map key='[cases]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases]' />
            <map key='[countyState]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[countyState]' />
            <map key='[county]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[county]' />
            <map key='[date (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[date]' />
            <map key='[dateState]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[dateState]' />
            <map key='[date]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[date]' />
            <map key='[deaths (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths]' />
            <map key='[deaths.new (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new]' />
            <map key='[deaths.new.7dsma (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.7dsma]' />
            <map key='[deaths.new.7dsma]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.new.7dsma]' />
            <map key='[deaths.new.perCap.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perCap.7dsma]' />
            <map key='[deaths.new.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perCap]' />
            <map key='[deaths.new.perM.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perM.7dsma]' />
            <map key='[deaths.new.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perM]' />
            <map key='[deaths.new]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.new]' />
            <map key='[deaths.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.perCap]' />
            <map key='[deaths.percap]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.percap]' />
            <map key='[deaths]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths]' />
            <map key='[pop]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[pop]' />
            <map key='[population]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[population]' />
            <map key='[state (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[state]' />
            <map key='[state]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[state]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='734978' timestamp-start='2020-11-13 23:22:44.192' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>349</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9412</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12959</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2182</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16067</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>263880</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>79531</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyState]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>countyState</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16924</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1169</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>138</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>310</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dateState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dateState]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>dateState</remote-alias>
              <ordinal>13</ordinal>
              <family>data.state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13588</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>14</ordinal>
              <family>data.state.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>327</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>15</ordinal>
              <family>data.state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>16</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6126</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>17</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2799</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[pop]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>pop</remote-alias>
              <ordinal>18</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>765</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.perCap</remote-alias>
              <ordinal>19</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7351</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.perCap</remote-alias>
              <ordinal>20</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5106</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>21</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2091</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>22</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>282</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perCap</remote-alias>
              <ordinal>23</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7385</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perCap</remote-alias>
              <ordinal>24</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3697</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perM</remote-alias>
              <ordinal>25</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7385</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perM</remote-alias>
              <ordinal>26</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3697</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>27</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4166</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>28</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>751</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perCap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perCap.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perCap.7dsma</remote-alias>
              <ordinal>29</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8765</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perCap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perCap.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perCap.7dsma</remote-alias>
              <ordinal>30</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4316</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perM.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perM.7dsma</remote-alias>
              <ordinal>31</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8775</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perM.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perM.7dsma</remote-alias>
              <ordinal>32</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4310</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.active]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active</remote-alias>
              <ordinal>33</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4177</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active.perCap</remote-alias>
              <ordinal>34</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10529</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active.perM</remote-alias>
              <ordinal>35</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10529</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>5</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>4</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>3</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_187532707401031681:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203182039043:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:Calculation_187532707400040448:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_325455445230501890:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.perCap:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203179343874:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864367105:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864514562:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864535043:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864580100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864633349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864649734:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864666119:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864682504:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864698889:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.perCap:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='County-Level' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='deaths.percap' ordinal='8' />
                  <column datatype='string' name='countyState' ordinal='9' />
                  <column datatype='integer' name='cases.new' ordinal='10' />
                  <column datatype='integer' name='deaths.new' ordinal='11' />
                  <column datatype='string' name='cases.new.7dsma' ordinal='12' />
                  <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
            </properties>
          </object>
          <object caption='data.state.csv' id='data.state.csv_09D45CB279DD4396BA9415ED380F7A05'>
            <properties context=''>
              <relation connection='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr' name='data.state.csv' table='[data.state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='dateState' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='integer' name='cases' ordinal='3' />
                  <column datatype='integer' name='deaths' ordinal='4' />
                  <column datatype='integer' name='pop' ordinal='5' />
                  <column datatype='real' name='cases.perCap' ordinal='6' />
                  <column datatype='real' name='deaths.perCap' ordinal='7' />
                  <column datatype='integer' name='cases.new' ordinal='8' />
                  <column datatype='integer' name='deaths.new' ordinal='9' />
                  <column datatype='real' name='cases.new.perCap' ordinal='10' />
                  <column datatype='real' name='deaths.new.perCap' ordinal='11' />
                  <column datatype='real' name='cases.new.perM' ordinal='12' />
                  <column datatype='real' name='deaths.new.perM' ordinal='13' />
                  <column datatype='real' name='cases.new.7dsma' ordinal='14' />
                  <column datatype='real' name='deaths.new.7dsma' ordinal='15' />
                  <column datatype='real' name='cases.new.perCap.7dsma' ordinal='16' />
                  <column datatype='real' name='deaths.new.perCap.7dsma' ordinal='17' />
                  <column datatype='real' name='cases.new.perM.7dsma' ordinal='18' />
                  <column datatype='real' name='deaths.new.perM.7dsma' ordinal='19' />
                  <column datatype='integer' name='cases.active' ordinal='20' />
                  <column datatype='real' name='cases.active.perCap' ordinal='21' />
                  <column datatype='real' name='cases.active.perM' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' table='[Extract].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[date]' />
                <expression op='[date (data.state.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[state]' />
                <expression op='[state (data.state.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='data.csv_62B351438B2C46A48040691DC829D2A9' />
            <second-end-point object-id='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State- and County-Level New Cases and Deaths' type='sheet' worksheet='5a' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='State- and County-Level New Cases and Deaths' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>State-Level New Case Density</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{B06C2684-0D41-49AE-A343-241CCF03CE02}' />
    </worksheet>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County-Level Hot Spots&#10;</run>
            <run fontsize='12'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='New Cases 7D SMA'>
              <formatted-text>
                <run>New Cases 7D SMA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{277AF070-EEB8-474C-A442-6620AAEDDFD8}' />
    </worksheet>
    <worksheet name='5a'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[State-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6670967.0743742296' min='-14670203.825095043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6E5C1D5A-A324-4D39-AA35-1E76DE613F2C}' />
    </worksheet>
    <worksheet name='5b'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[County-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20200730</value>
                    <value>&quot;Douglas&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>123.85714285714286</value>
                    <value>&quot;POLYGON((-96.3274 41.19,-96.3656 41.2341,-96.3506 41.2652,-96.4076 41.3146,-96.4244 41.3661,-96.4707 41.3932,-96.329 41.3931,-95.9387 41.3932,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9276 41.2984,-95.9115 41.229,-95.9235 41.1909,-96.3274 41.19))&quot;</value>
                    <value>41.291899999999998</value>
                    <value>-96.150199999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-55' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{42E61C40-2836-4455-BDA4-B4B6380BBC4B}' />
    </worksheet>
    <worksheet name='5c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C85D93EA-FE10-4771-B4D8-03FB23236857}' />
    </worksheet>
    <worksheet name='5d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Deaths - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201110' />
              <groupfilter function='member' level='[state]' member='&quot;Connecticut&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C63D437F-3477-486E-A4A0-0691D9000DA3}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Missouri&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Virgin Islands&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{C7BE4A65-2880-415E-821D-E62636CC1C9A}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' minor-origin='#2020-05-14#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='#898989' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='subtotal' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='total' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='*m/d/yyyy' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_5' value='0' />
            <format attr='line-visibility' id='annotation_5' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='192'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases Reported: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-04 18:21:18.720#'>
                  <node-reference>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12348.994845360825'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;New York&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='119' y='1' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='114.477' text-width='166'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Peak New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-12#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>15282</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-98' y='-89' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-08-30#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2979.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-52' y='-131' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='291'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-11#</value>
                    <value>&quot;New York&quot;</value>
                    <value>4607.3826791917427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='186' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-19#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>4925.0533238208473</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='185' y='-20' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='296'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;South Dakota&quot;</value>
                    <value>8058.4722474987548</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-236' y='29' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='293'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>4077.2163886832536</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-186' y='-29' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='294'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2579.3154940962677</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='187' y='-20' />
          </annotation>
          <annotation class='point' id='15' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='2'>on</run>
              <run bold='true' fontalignment='2'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='2'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-27#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>7178.2694316500638</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-173' y='31' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0CF20289-F574-46F5-941E-C539B8F24827}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Notable States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{18B2D08C-D4D2-4F82-8F4C-7C904941F167}' />
    </worksheet>
    <worksheet name='Tri-State New Cases + Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])))</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{3AEE0153-2BB7-47F3-A410-04767AF59D72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='511' param='horz' w='98698' x='651' y='1060'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='58' param='vert' w='98698' x='651' y='1060'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92317' id='7' param='horz' w='98698' x='651' y='6623'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92317' id='5' w='98698' x='651' y='6623'>
                  <zone h='61481' id='35' name='Nation-Wide Daily New' w='49318' x='25261' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30715' id='146' name='Nation-Wide Cumulative New' w='24610' x='651' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30766' id='155' name='Nation-Wide Cumulative Deaths' w='24610' x='651' y='37338'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30836' id='311' name='Notable States' show-title='false' w='98698' x='651' y='68104'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57215' id='324' name='1d' w='24770' x='74579' y='6623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4266' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24770' x='74579' y='63838'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='520' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97880' id='519' param='vert' w='98698' x='651' y='1060'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5563' id='59' w='98698' x='651' y='1060'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30715' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24610' x='651' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61481' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49318' x='25261' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57215' id='324' is-fixed='true' name='1d' w='24770' x='74579' y='6623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4266' id='512' name='1d' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='24770' x='74579' y='63838'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30766' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24610' x='651' y='37338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30836' id='311' is-fixed='true' name='Notable States' show-title='false' w='98698' x='651' y='68104'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State- and County-Level New Cases and Deaths'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98042' id='178' param='vert' w='98888' x='556' y='979'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='179' w='98888' x='556' y='979'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='28' param='horz' w='98888' x='556' y='6120'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92901' id='7' param='horz' w='98888' x='556' y='6120'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92901' id='5' w='98888' x='556' y='6120'>
                  <zone h='42390' id='3' name='5c' w='49454' x='49990' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41982' id='10' name='5b' w='49434' x='556' y='52615'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4424' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49434' x='556' y='94597'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42390' id='14' name='5a' w='49434' x='556' y='6120'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4105' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49434' x='556' y='48510'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42083' id='26' name='5d' w='49454' x='49990' y='52566'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4056' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49454' x='49990' y='48510'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4372' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49454' x='49990' y='94649'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='185' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='184' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5141' id='179' w='98888' x='556' y='979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42390' id='14' is-fixed='true' name='5a' w='49434' x='556' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4105' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49434' x='556' y='48510'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42390' id='3' is-fixed='true' name='5c' w='49454' x='49990' y='6120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4056' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49454' x='49990' y='48510'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42083' id='26' is-fixed='true' name='5d' w='49454' x='49990' y='52566'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4372' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49454' x='49990' y='94649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41982' id='10' is-fixed='true' name='5b' w='49434' x='556' y='52615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4424' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49434' x='556' y='94597'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836711AE-A8FC-40BB-A283-4102C7E23F92}' />
    </dashboard>
  </dashboards>
  <windows source-height='23'>
    <window class='dashboard' maximized='true' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='1d'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Notable States'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='311' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='worksheet' name='1c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59732700-92E5-42F2-AB6B-3436D85DF36F}' />
    </window>
    <window class='worksheet' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='dashboard' name='State- and County-Level New Cases and Deaths'>
      <viewpoints>
        <viewpoint name='5a'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                    <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>20201110</value>
                  <value>&quot;Connecticut&quot;</value>
                  <value>1148.2857142857142</value>
                  <value>&quot;POLYGON((-73.6587 40.9934,-73.6545 41.0113,-73.7278 41.1007,-73.4827 41.2128,-73.551 41.2954,-73.5181 41.6668,-73.4873 42.0496,-73.426 42.0505,-73.0533 42.0399,-72.8135 42.0365,-72.8167 41.9976,-72.7667 42.003,-72.7558 42.0362,-72.6079 42.0308,-72.5092 42.0341,-72.1357 42.0302,-71.8007 42.0236,-71.7992 42.0081,-71.7877 41.6399,-71.7977 41.4169,-71.8423 41.4105,-71.832 41.37,-71.8613 41.3236,-71.9613 41.35,-72.0047 41.3066,-72.1776 41.3228,-72.3129 41.278,-72.3767 41.3683,-72.343 41.2686,-72.5465 41.2682,-72.5828 41.272,-72.695 41.2447,-72.757 41.2691,-72.8944 41.2424,-72.9324 41.2612,-73.1011 41.174,-73.1106 41.2003,-73.2623 41.1179,-73.4155 41.0987,-73.4333 41.0554,-73.5955 41.0293,-73.6587 40.9934))&quot;</value>
                  <value>41.622700000000002</value>
                  <value>-72.702799999999996</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5b'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='5d'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3FD9FA44-6E72-44CA-A079-4E2D80E4338F}' />
    </window>
    <window class='worksheet' name='Tri-State New Cases + Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E29869-794A-42BD-9FD3-6C37C11A1D8D}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-10#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C16D9719-18FC-49FF-9506-40BA605AB53C}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27A623D-2455-4E71-9350-83AEACEE3B0B}' />
    </window>
    <window class='worksheet' hidden='true' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-16#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A69FE9-8E67-4E4E-8D8A-5DEA02588AF4}' />
    </window>
    <window class='worksheet' hidden='true' name='5a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED5063A-3620-48EF-A2E5-BD1E1DA58829}' />
    </window>
    <window class='worksheet' hidden='true' name='5b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4B5A0E-088B-4C88-A0B3-21B1C81304AE}' />
    </window>
    <window class='worksheet' hidden='true' name='5c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D64A6E8-DE6A-46B7-B86E-B23AC593D8C9}' />
    </window>
    <window class='worksheet' hidden='true' name='5d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E95A138C-5A92-427D-9DA7-5B0D9AF77F38}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Notable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{798B147B-0696-4FFF-81B2-64334898F022}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Daily New' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3Qc933v/ffMViwaCRYQ7L1TpESKpApFqtmSrF7t2E5yHOc6PU7yPPcm
      57n3xnniXOcm13Ec27Edt0iWLauLlNhEUmIB2EmQBMGCXhcd2AW2T/ndPyCuRBEkARKFxHxf
      5/Ac7O6U34CL+czMr2lKKYUQQgjH0Ue6AEIIIUaGBIAQQjiUBIAQQjiU+9NvKKUwDGMkyiKE
      EGIYDVsAmKaJaZr4/f5B37YQQoiB04arFVAqlcIwDDIzM4djd0IIIa5C6gCEEMKhJACEEMKh
      JACEEMKhJACEEMKhJACEEMKhJACEEMKhJACEEMKhJACEEMKhJACEEMKhJACEEMKhJACEEMKh
      JACEEMKhLhsAiUSClpaW9GvDMDh9+jRlZWXYto1t25SVlVFVVYVSikQiQTQaBSAcDpNIJIa+
      9EIIIa5ZnwFQU1PDxo0b2b17N9A7RPTGjRvRdT09queBAwdoa2ujsrKSkpISGhsbKSsrI5lM
      smnTJjRNG87jEEIIMUCXzAcAUFBQwLPPPsvGjRsBaG9vJy8vj4kTJ5KVlYXP56OxsZHnnnsO
      0zR59913Wb58OUop3n//fTZs2IDP50MphW3bAFiWhWVZmKY5fEcnhBDisvoMAJ/Pd9HrSCTC
      +fPn8Xg8VFZW8vDDD6PrOpqm4fF40if5wsJCxo4dy9SpU9Prfnq6gWGafkAIIcRV9BkAn5aV
      lcX8+fNZt24d06ZNo7a2FsuysG2bVCqF2927mXXr1tHd3c2JEye49dZb0TQt/dmFegOPxzN0
      RyOEEKLf+gyA8vJyGhoaqK2tpaioiNtvv51QKMTevXsJBoM88MAD+P1+Nm3aRCqVYuXKleln
      /uvWreONN95gypQpTJw4cVgPRgghRP/1OSVkMplMP6vXNI2MjAxs26a9vZ2srCwCgQAAoVAI
      l8tFdnY2tm2jlMLtdmOaJkqpi672ZUpIIYS4scicwEII4VDSEUwIIRxKAkAIIRxKAkAIIRxK
      AkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxK
      AkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxK
      AkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxKAkAIIRxK
      AkAIIRxKAkAIIRxKAkAIIRzqsgEQj8cJBoMXvdfT00NdXR0Atm1TWlpKWVkZtm0Tj8eJRCIA
      dHZ2Eo/Hh7DYQgghrlefAVBdXc27777Lvn370u8ppdi6dStFRUUAFBYWEolEaGxs5NSpUwSD
      QcrLy0kkEmzevBmXyzU8RyCEEOKauPt6c+rUqcyYMYN33nkn/V5xcTHz58+npqYGgObmZp57
      7jksy2Ljxo2sWLEC27bZvn07999/P16vF6UUlmUBYFkWlmVhGMbQH5UQQoir6jMAPB7PRa+7
      u7upqanhscceo7q6GqUUuq6jaRputxulFAD79+9nzJgxTJo0Kb2upmkXbevTr4UQQoyMPgPg
      02pra7Ftm23btlFZWcm5c+ewLAvbtkkmk7jdvZu5++67iUajFBcXs3LlSjRNSz8Kcrlc2Lad
      XlYIIcTI6vNsfO7cOerq6qiurmb37t3cddddLFu2DNM0sSyLRYsWYVkWb775JqZpsnbt2vRd
      wJ133slbb73FlClTLroTEEIIcWPR1IUz9yeYpolt2+nXHo8HTdPSz/QvPPaJRCLouk4gEEgH
      gK7r2LaNUuqiiuBUKoVhGGRmZg7DYQkhhLiaPgNgKEgACCHEjUU6ggkhhENJAAghhENJAAgh
      hENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAgh
      hENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAgh
      hENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAghhENJAAgh
      hENJAAghhENJAAghhENJAAghhENdNgCUUiQSifRr27YJhUIkk8n055FIhFgsBoBlWViWBYBp
      mumfhRBC3Jjcfb3Z0dHBrl27cLlcPPPMM8RiMTZt2kReXh7Nzc088cQTNDU1cfr0aSzL4o47
      7sC2bXp6eliyZAlvv/02Dz/8MFlZWcN9PEIIIfpJU0qpT7/Z3t5ORkYG27dv5+mnn8YwDJRS
      eDweDhw4QEFBAYcPH+a5554jkUiwY8cOli5dSnd3N7FYjMzMTFasWMEnN51KpTBNk0AgMKwH
      KIQQom993gGMHz/+otcejwfbtjl06BDt7e2sWbOGY8eOoes6gUAAwzAAOHDgANnZ2Xzxi19M
      r3vhM9M0MQwj/QhJCCHEyOozAD5NKcWWLVuYMGECjz76KLquY9s20Hti1zQNgFWrVtHQ0EAw
      GGTq1KlomobX671oW36/f5APQQghxLXosxI4FArR0NBAT08PwWCQtrY22tvbyc/Pp66ujng8
      zvjx4zlx4gQHDhxgxowZQO+dwiOPPMKuXbsuqkAWQghx4+mzDqChoYH29nYA3G4306dPp6qq
      Kv35rFmzyM7O5sSJE3i9XhYvXkw8HscwDMaMGUMoFMKyLMaNG5deJ5VKYRgGmZmZw3BYQggh
      rqbPABgKEgBCCHFjkY5gQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjh
      UBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjh
      UBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjh
      UBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUBIAQgjhUJcNAKUU
      8Xg8/dqyLNrb2zFNM/15d3c3kUgk/fmFz0zTxLKsoSy3EEKI6+Tu68329nZ27NiBx+Ph2Wef
      RSnFG2+8wcSJE2ltbeWZZ56hrKyMs2fPYpoma9asQSlFT08PS5cu5Y033uDRRx8lKytruI9H
      CCFEP/UZALqu89RTT7FlyxYAmpubyc/PZ/369RQVFdHc3MypU6d44YUXSCQSbN++nWXLlmFZ
      FoWFhSxZsoSsrCyUUultXvjZtu1hOCwhhBBX02cA5OXlXfS6p6eHvLw8NE1j3LhxhEIh3G43
      mqaRkZGRfvSzf/9+cnJyWLduXXpdwzCA3sdChmHgdve5SyGEEMOsX2djv99PR0cHANFolLy8
      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
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
      E7RI0qWiKApWq/VnWdeV9H2U2qd78ocZ03/E6XSyfv161qxZQ2JiIp6enkRGRv4kBXniiSeY
      Nm2amiHrbGWpqanB09NTnbZ27Vr8/f3p1atXp9dXUFDAyy+/TGJiIgkJCSQmJpKYmMjQoUPx
      9vY+6zwtCevbK2OLL774AqvVSp8+fVpNb0nevmXLFk6fPs3IkSPPu6wr3cmTJ1mxYgVxcXHq
      ENNbtmzB19e33c+hM4QQpKSksHLlSrZv305tbS3Dhg276OVeCJvNxjPPPENCQgIHDhxAUZQ2
      Q4r/2IkTJ0hOTmbIkCHk5eXx2WefMWHChEtSnueff56JEyei0WiorKxslSL02WefJS4u7qzJ
      jQBeeOEFtm/frn5vkpKSWn2G0Hwh9PTTT6vb63K56Nu370UlC9q3bx+rV69uNcQ5wAcffEBq
      aipjx47t9DJff/11Bg8erA45f6FcLhf//Oc/sVqtDBw48KKW9XM5Zw3g448/Jicnh7/97W8s
      X778Jx3j3WaznfP1qqoqVq5c2WratGnT1KxfnRUeHs7y5ctZvnw5RUVF6t+9e/dud57Vq1dT
      XFx83mU7nU5cLleraaWlpTz77LPceuutPP7444wYMQJFUS6o7FeSyspKsrOzWbdunTotIyPj
      rFnSLkRqaiofffQR999/P4888kirHBE/N6fTSUVFBcuXL+eXv/wl27Zt47333jvnlXbfvn3V
      E76iKOdNldoZCxYsQKfTYTabefHFF1u9Zrfbz1mue+65R/3O3HbbbRQVFbU5gbpcLsrKyli+
      fDm/+tWv2L59O+++++5F1Szy8/MpLCxk37596rT6+nqSkpI4fvz4BS1zzpw5rS4sL9SpU6cA
      2LRp00Uv6+fSbkYws9nMnj17WLFihfrBhoSEUFpaSkZGBtdeey0An332GQsWLMDpdPLJJ59Q
      X19PaWkpcXFxWK1WMjMz1ZNtRUUFJ06c4LrrrlPnnT9/fqsDp66ujvfff5+qqio8PDxYsmQJ
      /v7+vPHGG2RmZvLcc88RExPDzTffTFpaGlOnTiUpKYmYmBg1scu3336rJltZtWoVeXl5REZG
      cu+996rrMhgMavD44d/QnPBm5cqVNDY2MmTIEJYsWUJiYiKpqanU1NTg6+vL4sWLaWpq4quv
      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
      Wei6XrHeQbfqah9927ZxXXfKpR+o7vatqipPP/000WiUn//85/T09OD1eqmtreXSpUs0Njay
      e/dudF0vXfqrVrw7d+7k8OHDAPT09CzcBNDZ2cnbb7/NunXF6e6i0Siu69Le3g5AIBAgEHhv
      VGQqlSKdThOPx6/ZOGajrq6OkZERGhoagGIzb3BwkK6uLhRFYe3atZw6dYq2trbSj5lMJslm
      s8RisXk7UzIMg0QiUcrqqVSKoaGha9ZvGAbxeJxMJnPL13zL6dy5c7S0tBAKhfB4PITDYTZs
      2MCmTZuwLIt4PM7Y2FjpN00mk2QymXn9LgFWrFhBPB7HNE3q6uro7++nt7eXuro6Nm3axIsv
      vsiWLVuAYqsmGo2SzWZJJpMzWs+2bdv48Y9/XHqvnp4eWltbaW4uVrWtq6srDfYRQhCPx8lm
      s6X9YK66urrYt28fGzZsAIr7l+M4rFq1qhTf3r172bhxYymGWCxW2r7n6zJQNptlcnIS13XR
      NI1YLFZqCXzwdYlEglQqNe+tcMdxuHDhAp2dnTiOQ2NjI8FgkE2bNrF27VoMwyAajZLJZEon
      s+X+PW/V1WKcmUyGxsZGtK997Wtfm7e134JCoUBTUxM1NTW0trbS3t5OXV0dLS0tpFIpfD4f
      HR0dtLW1EQqFSgffsbExNE3Dtm1qa2vxemdfojUYDBIOh2lubmbNmjU0NDSUylkbhsGGDRsI
      hUKMjIxw7733lnbU4eFh/H4/hUKB+vr6eek6mM1m6e7uZseOHYRCISzLwrZturq6SnF7vV7S
      6TSRSKT0OeYyD8NsKIrC4OAgGzdupLW1ldraWkZHR1m1ahW9vb3Yts327dtLo2RHRkZK3+X7
      D4aVVFNTQygUYsWKFTQ2NrJu3Tqi0SiqqrJ582ZqamqoqakpHSQLhQIDAwM0NDRg23bpZOFG
      DMNA0zSampqoq6ujvb2dpqYmamtr6ejoYHh4mJaWFlauXElzc/OUEcODg4PU1taSzWaLO+4c
      ukG+/3OuWrWKuro6mpubyWQy+Hw+Ojs7CYVCjI6OsnPnztI+1t/fX7pc1dzcPC9nsfF4nP7+
      fu6//34aGhqIRCKEQiE6OjpobGwkFAqVEkMul8Pj8eD3+8s62no6iqJgWRYjIyNs376dlpbi
      3OTRaJTVq1dz7tw5VFXl3nvvxev1IoQo/Z65XI7GxsZ56S569XdfuXIltbW1rFmzZuGVgrjV
      aqDVNjg4SC6XK10vlmbv0qVLrF+/vtphVNxsqoFWy/nz5wmHw1PuI0mzs5C3b5kAJGmeLKYE
      IC0PC/YegCRJklRZMgFIkiQtUwtuHMDVLnaStNQEg8EFXxtGWl4W3D0ASZIkaX7I0xFJkqRl
      SiYASZKkZUomAEmSpGVKJgBJkqRlSiYASZKkZer/BzLddDOaK+cEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='State- and County-Level New Cases and Deaths' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydeZxU5ZX3v/fe2ntvaJpmExrZVUA0SkSTOIIaY+KbjOIybgFF40KcCRh3
      BGOCJjouE03ingxmZsAZNcYPEBUURFAWQdnsZl96X2rpWu7yvH9U30tVdVV19cbW9fuIUHd5
      nuc+yznnOec850hCCEEWWWSRRRa9DvKxbkAWWWSRRRbHBlkGkEUWWWTRS5FlAFlkkUUWvRRZ
      BpBFFllk0UuRZQBZZJFFFr0UWQaQRRZZZNFLkWUAWWSRRRa9FFkGkEUWWWTRS5ExAxBCcLKd
      GQuFQni93pT3zW8+2b67s6ipqcEwjGPdDAsn0/h4vV5CodAxq98wDOrr649Z/VkcG9jae8Dn
      8/Hqq6+yefNmHA4H48eP58orr6S4uJhwOIymaeTk5GRUmWEYeL1eCgsLu9zw7sBHH33Evn37
      mDVrVtx1IQR79uzhtddeY+/evRQXF/OTn/yE8847r0faoWkaLS0t5Ofnd+r9N954g+9+97sM
      GTKkm1sWj9mzZ/PKK6/gdruta7qu88gjj3D22Wfzwx/+EEmSAFi9ejWGYXD++ed3ezuEEGzZ
      soW//OUv1NTU0L9/f66//nrGjRvX7XUdLbzwwgtccMEFTJ482bomhOCpp56ipqYGWZYpLS1l
      2rRpjBkzxurnzkAIQVNTE4WFhVY5Xq+XuXPn8vLLL3f5W7I4cZB2ByCE4JFHHsHtdvOb3/yG
      OXPm4HQ62bp1KwDLli3jv/7rvzKu7MCBAzz88MNda/FRwL59+/j5z3/OOeecw1NPPcXMmTNp
      bm7usfo2b97Mv//7v3f6/S1btqTdyfQkhBBs3LiRV199lYaGBuv6/v372bdvX4/UuXHjRh56
      6CGuuOIKnn76aa688krq6up6pK5jCSEE69ev58orr+SGG26gvLycBx98kLfeeqtLu55QKMQd
      d9zRjS3N4kRF2h2AEIKvv/6aJ554ApvNRt++fRk2bBgAlZWVbN++Ha/Xy4oVK1AUhfPPPx9N
      09i4cSN79uzB4XBw/vnnU1xcTG1tLevWraOhoYEVK1YAcNZZZ5GTk0NFRQUrV64kJyeHH/zg
      B+Tl5aVttBCCHTt2sG3bNjRN4+yzz+aUU05BkiT27NmD0+lkz549bNu2jSFDhnDhhRciy1Fe
      19jYyCeffEIwGKS6uhqn09mm7Jdeeombb76Z73//+wAUFxczduxY6/4333zDxx9/jMvl4tJL
      L6VPnz4A7Nixg/79+1NQUABEGYnNZmPAgAFUVFSQn5/Pjh07+Oabbxg+fDjnn38+hw8fZtOm
      TVRVVbFixQokSWLSpEl89dVXnHXWWdhs0SFqaWlh+/btnHnmmRkPrmEYfPDBB1RWVjJmzBhr
      fDZt2sRZZ50V1yeHDx9m7Nix6LrOBx98wK5duxg3bhxTpkxpV9rMycnh8ssv59VXX+Xf/u3f
      kj7v8/l477338Pl8fO9732P48OEIIVi7di3nnHMOsiwTiURYs2aNNS8A1q1bx6RJk1AUxer/
      Z599locffphJkyYBWH8D1NbW8sUXX9DU1ER5eTnf+ta3kCQJIQS1tbWsXr0aXdcZP348p556
      KpIkoWka77//PgcPHmTSpEmcddZZ1jvbt29ny5YtuN1uJk+eTN++feO+KxAIsG7dOqqqqigp
      KeGCCy7A4XAAUcY+ePBg1q5dy6FDh5g4cSITJkywyt6/fz/r1q1DlmVqamqS9q0sy5SXl1Nc
      XMyYMWM455xzuOWWW7jgggsoKSnBMAxWrVrF1q1bKS8v56KLLkKWZYQQHDp0iI0bN+L3+xk9
      ejTjx48nFArxySef4Pf7WblyJQCjR4/G5XIBcPjwYT7++GNUVWXq1KmUlpYC0R3Cxx9/TEtL
      C6NGjeL000+35k8WJy7SjqAkSYwZM4bf/e53NDY2xkkddXV11NTUUF9fT0VFBbt37waiu4K/
      /e1vSJJEdXU1M2bMoLm5mUAgwN69ewkEAlRUVFBZWUkkEmHDhg3MmzePQYMGEQwGufvuu4lE
      ImkbXVlZyQsvvEAoFELTNO655x6+/vprAJYuXcrMmTNZuXIlpaWlLFq0iA8++ACAvXv3ctNN
      N1nMqaKiok3Zqqqyfft2vve97yWte82aNTz00EMUFxcTiUS47bbbrMX7P//zP1RWVlrPrlix
      gs8++wyAd955h5kzZ7J27Vr69evHSy+9xJo1a2hububgwYN4vV6rXwD++Mc/snnzZqus5cuX
      s3z58rT9EgshBE8++SSrVq1i5MiRvP322/zlL3/BZrPx7LPPsn//fuvZJUuWsGHDBoQQLFy4
      kM8++4yRI0eyZMkS3nzzzYykzR//+Md8/vnnceWaaGlp4fbbbyccDjN48GAeeOABtm/fjizL
      PPfcc1RVVQFRgvnQQw/x8ccfA1GmsXDhwjiG4vV6aWpqSskIf/WrX3HgwAHcbjevv/46L730
      EgDNzc3ceuut+P1+dF3nqaeeor6+HiEE999/Pzt27GDEiBH86U9/4v333wdg7dq1zJ8/H5vN
      Rk1NDQsXLmxT34svvsiXX36J2+3m008/Ze7cuVZ//fGPf2TWrFns3buXPn36MG/ePA4ePAjA
      ypUrueuuuwgEAmialrTfkqG0tJQpU6bw+eefW8LKu+++y8iRI/n44495/vnnEUIQCoVYuHAh
      tbW1OBwOnnnmGd566y1UVWXXrl2Ew2EqKiqoqKjA7/cD0fXxyCOPIMsygUCA++67DyEE4XCY
      O+64gwMHDiDLMm+88YalBcjiBIdoB01NTeKJJ54Q06ZNE3PnzhVbtmwRhmEIIYR45513xMsv
      v5z0PcMwhK7rYv78+WL16tVCCCH27t0r7rrrrrhn7rrrLvH1119bvx999FGxcuVKYRhG3J90
      dbz11lviD3/4gxBCiBdffFG8++671jPvvfeede/BBx+Mu/f3v/9dvPjii3FlNjc3i3/+539O
      WqdhGGLmzJli27Zt1rU333xTPP/880IIIRYsWCDWr19v3Xv99dfFkiVLhBBC/O53vxMffvih
      de9//ud/xF/+8hchhBDr168Xjz76aFxd77//vrjvvvus77/tttvEV199lbRffvGLX4gtW7bE
      vX/o0CFx4403ClVVhRBCeL1eMX36dBEKhcQbb7wh/vSnPwkhhNB1XVx33XWiurpa7N+/X9x8
      881C0zSrL6666ioRDoeFEEJcffXVoqWlJa4eVVXFlVdeKVRVFe+//764//77hWEY4s0337S+
      76233rL6SAghVq1aJR5++GEhhBDPPfecWLx4sRBCiGeeeUa89NJL4qGHHhKGYYiPPvpI/PrX
      v46rb9euXWLWrFkp54Q5Trqui/r6enHNNdcIIYT46quvxM9+9jOh63rcs1u3bhV33nmn9bu6
      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
      hUL4fD4KCwst4qVpGocOHaKgoKDN+BqGQW1tLUII+vXrF9eGcDhMU1MTxcXFcYRQVVVqampw
      u90UFxe3aYMQgqqqKhRFoV+/fh1qv+mKXFpa2mYMOgJN06ivr6egoCBunkYiEaqqqigqKkrq
      Wt3c3Ew4HKakpKTdNWeu0VAoRGlpaYfmdhbHLzJiAFkcfezatYtly5axYcMGnn/++W4lxFlk
      kUUW0AEjcBZHF4ZhMGjQIK699tos8c8iiyx6BNkdQBZZZJFFL0X2LHcWWWSRRS9FlgFkkUUW
      WfRSZBlAFllkkUUvRZYBZJFFFln0UmQZQBZZZJFFL0WWAWSRRRZZ9FJkGUAWWWSRRS9FlgFk
      kUUWWfRSZBlAFllkkUUvRZYBZJFFFln0Uijz5s2bl+qm3+/n008/Zffu3eTm5uLxeHo0C5Cu
      61RWVlpJ1rsLn3zyCUIICgsLrWtm7HYzwqNhGFRUVHRb3UIIdu3axbp16/D7/ZSUlHRrEu1d
      u3ZRUVFBTU0NTqcTl8vVbWPT0tLCjh07OhzdMh02bNiAx+OxolU2Njbi8/ms5O89jU2bNlFf
      X98t3yRaE7r7fD7y8/Ota4cPH2bZsmV4vV4GDBiQdjx8Ph+ffPIJ27dvp7Cw0OoHn8/HsmXL
      2Lt3L4MGDbKibnq9Xuv5oqIiK4S31+tl2bJl7Nu3L+75LE4uHDp0iEOHDlm5WIQQfPPNN12m
      VykpUlNTEz//+c+pqamhurqaRx55hIaGBhobG3n55ZfbLbiurs7K6JUpwuFwxukVO4LKykrq
      6+vjrv33f/83c+fOpampCYiGzn3xxRe7pT4hBG+++SbPPvssqqqyYsWKuIQc3YHXX3+dL774
      gg0bNvDLX/6Sl19+OaPk7ZkgGAxaaR23bNnC0qVLu1zmgw8+yO9//3urjZs2bbKSvx8NHDx4
      kEOHDnW5nKamJp544glmz57NunXrrOtVVVXcf//95Ofns3z58rg0jYnYs2cP9957L/X19Wia
      xpw5c6itrSUSiTB37lwikQgHDx7k0UcftQSJX/7ylzQ0NKCqKr/4xS+oq6sjHA4zd+5cVFVl
      3759PPbYY902B7I4vvD+++9b9NjEs88+2+VyU+4A1q5dS35+Ptdddx2nnXYa3//+91EUhZUr
      V/LJJ5+Qn59PS0sLffr0oaqqitWrV7Nz50769u2LoiisWLGC1atXk5eXRzAYpG/fvgSDQd57
      7z127tzJwIED20S5VFWVDz/8kEsuucS6ZkpWf/vb32hsbGTQoEH4fD4OHz5s5RNoamqitraW
      /Px8Dh06xHvvvUdTUxODBw+2ktqUlpYyYMAAq9w1a9Ywfvx4NmzYwLe+9S00TePDDz/k4osv
      RgjBgQMH+Pvf/47X62XQoEEEAgH2799PcXExuq6zfv16+vTpg81m49ChQ0QiEUsqq6mp4c9/
      /jNPP/00Y8aM4dxzz6WsrAxd1/nqq69Yu3Yt9fX1lJWVIcsy4XCYVatW8dVXX+F2uy2pcv36
      9axcudJK4RgrUa5YsYLrr7+eCy64gEsuuYTFixdTUlJC//79aWpq4t1337XSJtpsNhobG6mr
      q2Pz5s2sXbvWihEfCoVYuXIlW7duJTc3l9zcXGw2m5XIZ/ny5XzzzTfW7qW6uhqn02mNXWVl
      JQ6Ho92IpWvWrEEIQXl5OcXFxezZs4dgMMjYsWNRVZWlS5fy5Zdf0qdPH3JyctixY4fVFoBt
      27ZRWFiIJEmsXr2aNWvWkJ+fT35+PpFIhN27d7N9+3Y+++wz+vbty+7du1mxYoUVx/+bb77B
      6/Wyc+dODh48yJAhQ6y8zNu2bWP58uVWngCAHTt2UFRUxBdffIEsy1Y8/X379lFaWsrEiRMJ
      h8OMGTMGgEWLFvHd736XqVOncu655/LMM89w+eWXJ931CSG49NJLmThxIqNGjaKxsRGIMpGW
      lhZmzJjBhAkTWLZsGSNHjqSgoIDvf//7TJgwgdGjR1NXV4fNZmP//v3ous5NN93ExIkTee+9
      9xgzZky7eS6yOPGwceNGxo0bx4oVK6zcIO+//z7f//73EUKwfft2li9fjmEYlJaWUltbi9fr
      JS8vj3A4zBdffMHAgQORJInKykpcLlc0q2CqCkeNGsWyZcv44IMPCIVCFvFpbGwkHA7T2NhI
      IBAA4O2330aSJIQQzJkzB1VVaWxsJBQKWc/pus7DDz9sqSsefvhhDMNo98Nra2tZsGAB5eXl
      bN++nVdffRUhBL/73e8saWfx4sXs27eP6upqfvWrX1FeXs7XX3/N66+/nrbs888/n4qKCg4f
      Phx3/dChQyxcuJDhw4ezadMmFi1ahKZpPPfccwghOHToEA899BAbNmwAotK4uZOAKOGeMmVK
      mwxLVVVVrFq1ioKCAj7//HNeeeUVIMrJ9+3bh9vt5u233wbg73//O8uXL2fkyJH8/ve/Z+fO
      nSm/w263M336dD788EOCwSAPPvggJSUl+Hw+nnzySWuCzJkzh8OHD1NcXMzjjz+OYRg8+eST
      1NTU4HK5rLqbm5t588030TQNr9dLIBCwxnPr1q0sWbIEiBKyJ598st0xNHHLLbfwpz/9qU0e
      6fnz59PY2EhJSQkPPPAAdXV1bNiwgY8++giIJjx5+umnURSFRYsWsXHjRoYPH87jjz9OdXU1
      zc3N3HPPPRw8eJCCggJmzJjBZ599xoABA1iwYIFV10cffUTfvn2prKxk4cKF1li98cYbjB49
      msWLF7N69WoMw+CFF17gV7/6FStXrkTXdauMkSNHWvmwY7F7927OOOMMIJoDeeDAgSnTQxYV
      FVnJkyoqKli1ahVjx47lm2++4cwzzwSimdXOOOMMdu3aRXFxMR6PByEEO3fu5LPPPmP06NFU
      VFQwceJE6/nTTz894zSkWZx4mDBhAn6/v006zg0bNvDaa68xevRolixZwurVq2lsbLQ0MF98
      8QWPPPIIhw4dQgjBM888Y9HzlAygf//+/Pa3v+Xrr7/m1ltvZdGiRTgcDqZNm8aQIUO4/PLL
      mTRpkpUIe8SIEQwYMACPx0MgEGDq1KkMHTqUyy+/nDPPPJM9e/bQp08fLrroIr73ve/Rp08f
      9u3bx/bt29m8eXPS/LwA//jHP7jyyis588wzueGGG9i4cSMFBQXW+5qm8eWXX3L22WezfPly
      pk+fzplnnsmNN97I+vXr026JFUXhhhtu4NVXX427vnTpUq699lomTpzIzTffzNq1aykoKEBR
      FBobG/n888/56U9/ytq1a1FVlaqqKoYOHWq97/f7rd1JLAYMGMANN9xASUkJZ511lkXUA4EA
      paWlfPvb3+aOO+5AkiQ++OADfvazn3HGGWdw0003sWzZspTfAVBcXIzf72f9+vWcffbZnHfe
      efzoRz+isbERv98PwBVXXMFVV13FRRddhNPpRNd1AoEAZWVlTJkyhdtuuy1ul2Hmmj3ttNO4
      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
      srYtFRZLde/LUNmypuzKfcPOr3w+9a9VjMIKCCKLrHr3J/oZbgUkqqyd6jz3eve26n06MFZA
      YVsry2nNCuj99FF4X76fGTOPZteuXWzevBkI1UGFQiFe3I1Sqy5fvpwXXniBbDbLBz7wgXiN
      c/v27fT09LBmzRqmTJlSta8eSine3PJ+w/0LjpracF8zGgqAQ4mnn3yAdDpL9cdS+zBr/lZN
      tlV2BNTcnlqTwKp6oOpFrCy/XpkN66n8+GvKGcU1iFauv2H7oj/qtbl5vU3bWft8VL2R6gj3
      reoa67Sr9tWu9+waXVPltmb3ufK8kbY1unf16lBN9o1Ub71n3/Qaom01z72emWq9d6KirGFm
      vM3qG/aON/u22ngWte9MvfJVzTvT6LutPF8pSmYnR17898yYeTTNcF0X0zQnfGDNw0IAJCQk
      JCS0TxIKIiEhIWGSkgiAhISEhElKIgASEhISJimJAEhISEiYpCQCICEhIWGSkgiAhISEhElK
      IgASEhISJimJAEhISEiYpCQCICEhIWGSkgiAhISEhElKIgASEhISJimTXgAopZK8ApOc5B1I
      mOhEiV0ilFJV/x4tDfMBRJU+8MAD3Hnnnbz22mvMmjWLbDa735VGZUdpIFtl7dq1WJZFR0fH
      mLQBwtzH//qv/8rpp58ebyuVStx4440cddRRcV0vv/wynueRz+f3u06lFBs3buQXv/gFTz31
      FJqmMWvWrP0uN2Lv3r3cfPPNPP/882zcuJEpU6bQ0dExZpEJf/GLX7Bo0SI0TcP3/ZZSeTbj
      5Zdf5sknn6wKiXvfffcxd+7cAxJNUSnFD37wA84444wxKevdd9/l17/+NUuWLIm37927l+uv
      v57777+ffD7PzJkzG5ZRKpW48847ufvuu3nzzTeZP38+tm3j+z633nord955J8Vikfnz5yOE
      oFgscscdd/Cb3/yGDRs2MG/ePGzbxvM8brnlFn79619TLpeZN2/ehI9OmVCfn//853z/+9/n
      oosuitPgfvOb3+TjH//4fpXbcAaglOK6667jueee43Of+xwnnngi27Zt26/KKvntb3/Lgw8+
      2NY5a9asYefOnWPWBggFUW0at2KxyKpVq7jhhhviZMovvfQSW7ZsGZM633zzTf7f//t/rFix
      gk996lO89957Y1JuRF9fH2+88Qannnoq2WyWb33rWzz//Flc+LsAACAASURBVPNjVv7s2bPj
      juT//J//g+d5+1XeSy+9xE033cTLL78cb/vd7343YqLssWQs3iulFP/+7//O1VdfzQMPPBBv
      l1Jy9dVXc/zxx3P55Zdz7bXXNn2X/umf/olsNsuXv/xlpk2bxo9+9CMAbrrpJvr7+/na177G
      M888w8MPPwzAP/7jP5LP5/nyl7/M1KlT+dd//Vcg7DRKpRL/43/8D5544gkee+yx/b7GhIND
      EAQsWbKE2267Ld5W+d2Vy2U2bNgQZxarnDEopaqODYIg/rYa5gTes2cPzz//PNdffz1CiDj3
      rpSSe+65h7Vr1zJnzhxWrlxJOp3m/vvv59xzz8U0Td599122bt3KsmXLePDBB7Esi8ceewxd
      17niiivYtWsXDz/8MIZhsGHDBlasWMFrr73G5z73OYQQeJ7Hb3/7W/70T/90xBtTKBT46U9/
      yp49ezj//PM57bTTuPfeeznzzDPJZrMopbjnnnv41Kc+xcDAAD/72c/o6+vj4x//OB/60Ica
      lnviiSeyd+9eNm7cyNy5c6v29fX18dOf/pRCocAFF1zAsmXLWL16Naeffjq5XI5169axd+9e
      zjvvPDzPY/Xq1Xzyk5+Mz//5z3/OVVddxQc+8AEA5s+fD4Sp2h599FEcx2HFihWsWLGCcrnM
      L3/5S7Zt28acOXP47Gc/i2VZvPbaa9x+++10dHSwcuXKODlOxJQpU1i8eDGLFy9myZIlfPe7
      3+Wkk05CSslNN93EW2+9xemnn87HP/5xhBDce++96LrO008/TXd3N1dccQWWZXHPPffw6quv
      0tPTwyWXXMLUqVPp7+9HCMFdd93Fpk2buP7660mlUnz605/mySef5FOf+hRCCPr6+li7di3n
      n3/+iM/xsssu44YbbuCf//mfq1LrKaX43e9+x1NPPcXRRx/NypUr8TyPZ555hvPPPx8hBO++
      +y6bNm3i9NNPZ926dfzmN79h6tSpXH755XR2dvLQQw/hui7PPPMMPT09fPjDH+a//uu/0DSN
      K6+8klwuR6lU4oYbbmDz5s2sWLGCj3zkIwgheOedd/j5z3+OEILPf/7zzJ07l9dee410Os3W
      rVvZsGEDX/ziF+P2nnnmmXz5y1/mG9/4Rrxtz549lEolzjvvPAAuueQSHnzwQS677LK69+Jv
      /uZvsG0bgDPOOIPf//73BEHA008/zT//8z+TyWT4yle+wo9//GPOPfdcrrrqqqrjH330UXzf
      Z+3atfzLv/wL6XSar3zlK1x//fWcddZZIz6LhInJJz7xCf7jP/6Diy66iM7Oznj71q1b+f73
      v8/ixYt56aWX+Ju/+Rt27tzJ888/z5VXXslrr73GlVdeyapVq8jn83znO9/hqquuoru7u/EM
      4I033ghThtVMGe+9917efPNNrrrqKmbPns0Pf/hDAB5++GF83wdgx44dvPjiiwA8+uijvPHG
      G1xxxRUsXryYu+++myOOOIITTzyRpUuXcsEFF3DMMcfw2muv8d///d9AqBJ46623RrwhSimu
      ueYaTjvtNL75zW9yxx13sHnzZvbs2cOTTz4JhJl31qxZgxCCa665hhUrVvDNb36T2267reko
      TAjBl770papZAIQC8Ac/+AHnnHMO3/jGN7j55pt57733ePfdd3nuuedQSrFq1SruuusupJRs
      2rSJ1157LT4/CAK2b98ed/qVOI7DZz7zGS6//HJuu+023nvvPe6++25s2+bKK6/kiCOOwHVd
      du/ezbXXXsvXvvY1LrroIn7wgx801QfOmDEjTgp93XXXMW3aNL7zne/w3HPP8eyzzwJw1113
      USgU+F//639h2zZPPPEEr7zyCi+99BJXXnklp556Kv39/QA88MADSCk57bTT6O3t5eMf/zgf
      +9jH6OrqYtWqVbz/fpi56MEHH6RYLI74HKM2zp8/n8cff7xq++9//3tefvllrrrqKhYsWMA/
      /MM/kM/nuf322+P37Z577kHTNLZs2cKNN97It7/9bc4++2z+4R/+AQjzpe7evZuvf/3rFAoF
      7r33Xv7yL/+SefPmsXr1aiBUu5x66ql8/etf57777uPFF1/EdV2uvvpqLr30Ur70pS/xwx/+
      EMdxWL9+PT/+8Y956KGHWLFiRdU7Uy+z07vvvsuxxx4b/3vBggVN372oM9+1axff/e53ufji
      i3EcB9u2yWQyAPT29lIoFKqO37FjB9/73ve4+OKLKZVKpNNp0uk0ANOnT4+fX8Khia7rXHrp
      pfznf/5n1fZbbrmFr3/961x55ZVcddVV3HLLLSxZsoSXX34ZpRRPP/00F110EevWrcNxHEql
      Et3d3UATFZDv+1iWNWz7o48+yl/91V+Rz+c5//zz2bFjR9MFNF3X+cxnPkNvby/z58+nWCyS
      zWbp6emht7eX2bNnk81m+exnP8uvf/3rOI/wJz/5SdavX89NN93ErbfeWlfNUCqV2LNnD9Om
      TWP37t2ccsopPP/883z0ox/loYceQinFgw8+yPnnn0+xWKRQKNDT08Pu3btZunQpL7zwQtMb
      Pm/ePLLZbNVxhUIhvoF79uzhpJNO4sUXX+T0009nzZo1FItFdF3n2GOPZcuWLaxZs4YPf/jD
      8flSyoY680WLFvHKK6+wevVqlFJs376d6dOn89xzz/HGG2+wfPlystksL774IosXL2ZgYCB+
      RiN93KZpEgQBr7/+OgsXLmT79u2cdtpprFmzBoDOzk4uvPBCuru7mTdvHsVika6uLjZv3sy6
      des45phj4llgxIwZM8hmsxx99NEcddRRaJrGRRddxKpVq1BK8eijj3LuuefGx69du5abbrqJ
      3/zmN3XVO5dddhm33HJL3LFDOLD467/+a/L5POeeey59fX0opVi+fDlr165FKcULL7zABz/4
      QZ566ilWrFjB+++/T1dXFzt37ozXmSIBdfTRR3POOecwbdo05syZg+M4QDhjOvHEE5kyZQor
      V67k2Wef5Y9//COzZs1CSonjOBxxxBHxwKSnp4e/+7u/q0pX2ggpZZyQG8Jvotk3o5RizZo1
      fPvb32blypWcc845KKWqZkaV749SiqeeeoqrrrqKL37xi5x55pkADY9POHQ5/fTT2bRpU5U6
      /q233uLWW2/lu9/9Lj/72c/Yvn07lmWRz+fZtWsXGzduZOXKlTzzzDP893//d9XaVEMV0Jw5
      c+IPtfLlqRUMuq6Pia520aJFXHfddWzdupX33nuP+fPns2vXLk444QQ0Tat6mSOUUuzevZtH
      Hnkk3jZ//nx6e3sRQrBjxw6ee+45Pv3pT+N5Hrt27ao6tla1U4sQgssvv5xrrrmGpUuXAuEI
      vrIcTdOYM2cOxxxzDFu3buXll1/mhBNOYPr06axdu5ZXX32VT3/603GZhmGQSqXYsWNHldrG
      8zz+7u/+jj/90z9l4cKFced17rnnMmvWLJ588kl++tOf8n//7//F8zw2bNgQj/yWLFmCaZoN
      r6NYLLJnzx7y+TyFQoHHHnssvp/Lli1reN7s2bO5+uqrefzxx/nbv/1b/uIv/qJqxBs9g0rO
      O+88/uf//J+ceeaZ9PT0kMvl4n0zZ87ENM243bXk83nOPPNMVq1aFW/zfb/qeMMwkFJywQUX
      cN1115HP5znhhBPQdR3XddmwYUM86zjjjDNGZd0jpUTTNFzXZcuWLfGznj17djz1Pu2001ru
      VHt7e6tG/Fu2bKG3t7fh8evWreOmm27iRz/6EV1dXQBYlkWpVML3fQzDoFAoxPflmWee4dZb
      b+VHP/pR3D7btikWi/Hx/f39pFKptu9FwsRCCMEVV1zB9ddfH2/r6enhr/7qrzjiiCNQSsV9
      9vLly3nggQfo7Oykp6eHPXv28NRTT1WpZBvOAKIR3X333RdntX/nnXdYsmQJq1atQkrJH/7w
      BwzDQNd1DMOgr68P3/d5/fXXR7yQbDbL1q1bCYIg/uAuvPBC/v7v/54zzjgDIQS9vb0sXbqU
      k046KR5BeZ6H67q4rott20yfPp0zzjiDlStXcv7555PJZBBC8JGPfISf/exnHHnkkaTTaTo6
      Oujt7eXMM89k5cqVfPSjH42n082YOXMmCxYsiBfQ8vk83d3dnH322axcuZLzzjuPTCaDaZrM
      mjWLO+64g1NPPZXFixfz5JNPYllWleWUEIJPf/rT/OhHP2JgYADXdXn99dcZHBzEsizOOuss
      ent72b59O0IIXn/9dWbOnMlll13GOeecw5tvvsnChQsJgoDPfvazfOELX+DEE0+MLQMipJS4
      rsv27dv5/ve/z4UXXoht28ybN4/jjz+elStX8id/8idVusRa3nnnHQA+85nP8JWvfCVW69XS
      19cXLyylUik++MEPcvXVV/OJT3yiqpM86qijWLp0KYsWLWrYeV5yySX813/9V7yYdfLJJ3P3
      3XcjpWTjxo1IKTEMgyOPPJL+/n5+/etfx+srJ510Ep7n8ed//ud84QtfYMGCBVUj72YopfB9
      n2KxyC9/+UuWL1/Osccei5SSiy66iC984QuceuqpdWfFlWV4nofv+1V/T5s2jb6+Pt566y1c
      1+Wuu+6KBen69evZu3dvVRk33ngj3/nOd8hkMriui+d5mKbJvHnzeOihhwiCgLvvvpvly5ej
      lOLmm2/mb//2b0mn0/HxlmUxZ84cHnvsMYIg4K677mL58uUt3YuEic2iRYsIgiA2XLjkkkv4
      3ve+x1133cV//Md/8JOf/AQIZwv/+Z//yYc+9CE0TWP+/Pk8/fTTLFiwIC6roRloJEF++9vf
      cscdd/DEE0+waNEizjzzTFavXs0dd9zBiy++yLe+9S1yuRy5XI5/+Zd/4bHHHsOyLI455hjm
      zZvH1q1bWbRoEbZt4zgOxWKR4447jhkzZrBq1Sruu+8+pk6dyhFHHMGsWbO46aab+N//+3/H
      ustK3nvvPe655x4efvhhHnnkEU4++WSWLVvGDTfcwP33389rr73GsmXLyOfzzJgxg1tuuYXL
      LruMnp4eNE1j4cKF8bGvv/46y5Yto6Ojg23btsUjfCC+uSeddBIQ6mzXrl3L6aefzrRp0zju
      uOPictavX8+yZcvI5XJkMhk2b97MJz/5SVKpFH/4wx9Yvnw5xxxzTNV1zJkzh1KpxL//+7/H
      1iKnnnoqW7Zs4Re/+AXPPvssRx99NMcffzz9/f385Cc/4YEHHsB1XS655JJ4hnPDDTfw4IMP
      4rouJ598ctzZua7LAw88wMMPP8wLL7zAxz72MT760Y8ihODEE0/ktttu43e/+x3r1q3jxBNP
      pLe3l82bN7N06VI0TaO/vx/btsnlcvzkJz/hvvvuY/369Xzxi18kl8vx9ttvc8opp6BpGj09
      Pfz4xz/mmWeeYcWKFei6zpFHHsndd9/N1772tbozt1p2795Nb28vPT09GIYRT13PPvtsjjvu
      OB555BF+9atfsW7dOr71rW/FQkvTNN58800uueQShBBMnz6dvr4+fv7zn/PQQw9hmiYnnXQS
      W7duZeHChdi2za5du+K6BgcH+f/Ze7MYS47zXPCLXM5+au+uXth7s0mqmxS1UBJFypYoyVos
      6Rr2ADOGDRt+HRiGAT0NYPthDPhpgDEMY2zA4zHGgO0xxpci5lq6tiTqiiYtkaZEiluT3exu
      srvZe9d2qs6WW8xDnj/Pn3EiMvOcWpq86g8oVFVm7Bnxb/HHH1EU4ciRI3jttdfw7W9/G9/7
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Tri-State New Cases + Deaths' width='384'>
      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
      Wi0LffcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
