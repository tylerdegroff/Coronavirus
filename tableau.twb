<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook source-build='2020.2.2 (20202.20.0614.2338)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='4.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='data.state' name='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr'>
            <connection class='textscan' directory='/Users/tylerdegroff/Documents/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='deaths.percap' ordinal='8' />
            <column datatype='string' name='countyState' ordinal='9' />
            <column datatype='integer' name='cases.new' ordinal='10' />
            <column datatype='integer' name='deaths.new' ordinal='11' />
            <column datatype='string' name='cases.new.7dsma' ordinal='12' />
            <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='fips' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='county' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
              <column datatype='integer' name='population' ordinal='6' />
              <column datatype='real' name='cases.percap' ordinal='7' />
              <column datatype='real' name='deaths.percap' ordinal='8' />
              <column datatype='string' name='countyState' ordinal='9' />
              <column datatype='integer' name='cases.new' ordinal='10' />
              <column datatype='integer' name='deaths.new' ordinal='11' />
              <column datatype='string' name='cases.new.7dsma' ordinal='12' />
              <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr' name='data.state.csv' table='[data.state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='dateState' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='cases' ordinal='3' />
              <column datatype='integer' name='deaths' ordinal='4' />
              <column datatype='integer' name='pop' ordinal='5' />
              <column datatype='real' name='cases.perCap' ordinal='6' />
              <column datatype='real' name='deaths.perCap' ordinal='7' />
              <column datatype='integer' name='cases.new' ordinal='8' />
              <column datatype='integer' name='deaths.new' ordinal='9' />
              <column datatype='real' name='cases.new.perCap' ordinal='10' />
              <column datatype='real' name='deaths.new.perCap' ordinal='11' />
              <column datatype='real' name='cases.new.perM' ordinal='12' />
              <column datatype='real' name='deaths.new.perM' ordinal='13' />
              <column datatype='real' name='cases.new.7dsma' ordinal='14' />
              <column datatype='real' name='deaths.new.7dsma' ordinal='15' />
              <column datatype='real' name='cases.new.perCap.7dsma' ordinal='16' />
              <column datatype='real' name='deaths.new.perCap.7dsma' ordinal='17' />
              <column datatype='real' name='cases.new.perM.7dsma' ordinal='18' />
              <column datatype='real' name='deaths.new.perM.7dsma' ordinal='19' />
              <column datatype='integer' name='cases.active' ordinal='20' />
              <column datatype='real' name='cases.active.perCap' ordinal='21' />
              <column datatype='real' name='cases.active.perM' ordinal='22' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cases (data.state.csv)]' value='[data.state.csv].[cases]' />
          <map key='[cases.active.perCap]' value='[data.state.csv].[cases.active.perCap]' />
          <map key='[cases.active.perM]' value='[data.state.csv].[cases.active.perM]' />
          <map key='[cases.active]' value='[data.state.csv].[cases.active]' />
          <map key='[cases.new (data.state.csv)]' value='[data.state.csv].[cases.new]' />
          <map key='[cases.new.7dsma (data.state.csv)]' value='[data.state.csv].[cases.new.7dsma]' />
          <map key='[cases.new.7dsma]' value='[data.csv].[cases.new.7dsma]' />
          <map key='[cases.new.perCap.7dsma]' value='[data.state.csv].[cases.new.perCap.7dsma]' />
          <map key='[cases.new.perCap]' value='[data.state.csv].[cases.new.perCap]' />
          <map key='[cases.new.perM.7dsma]' value='[data.state.csv].[cases.new.perM.7dsma]' />
          <map key='[cases.new.perM]' value='[data.state.csv].[cases.new.perM]' />
          <map key='[cases.new]' value='[data.csv].[cases.new]' />
          <map key='[cases.perCap]' value='[data.state.csv].[cases.perCap]' />
          <map key='[cases.percap]' value='[data.csv].[cases.percap]' />
          <map key='[cases]' value='[data.csv].[cases]' />
          <map key='[countyState]' value='[data.csv].[countyState]' />
          <map key='[county]' value='[data.csv].[county]' />
          <map key='[date (data.state.csv)]' value='[data.state.csv].[date]' />
          <map key='[dateState]' value='[data.state.csv].[dateState]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[deaths (data.state.csv)]' value='[data.state.csv].[deaths]' />
          <map key='[deaths.new (data.state.csv)]' value='[data.state.csv].[deaths.new]' />
          <map key='[deaths.new.7dsma (data.state.csv)]' value='[data.state.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.7dsma]' value='[data.csv].[deaths.new.7dsma]' />
          <map key='[deaths.new.perCap.7dsma]' value='[data.state.csv].[deaths.new.perCap.7dsma]' />
          <map key='[deaths.new.perCap]' value='[data.state.csv].[deaths.new.perCap]' />
          <map key='[deaths.new.perM.7dsma]' value='[data.state.csv].[deaths.new.perM.7dsma]' />
          <map key='[deaths.new.perM]' value='[data.state.csv].[deaths.new.perM]' />
          <map key='[deaths.new]' value='[data.csv].[deaths.new]' />
          <map key='[deaths.perCap]' value='[data.state.csv].[deaths.perCap]' />
          <map key='[deaths.percap]' value='[data.csv].[deaths.percap]' />
          <map key='[deaths]' value='[data.csv].[deaths]' />
          <map key='[fips]' value='[data.csv].[fips]' />
          <map key='[pop]' value='[data.state.csv].[pop]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[state (data.state.csv)]' value='[data.state.csv].[state]' />
          <map key='[state]' value='[data.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyState]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>countyState</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cases.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dateState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dateState]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>dateState</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>pop</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.perCap</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.perCap</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perCap</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perCap</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perM</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perM</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.7dsma (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.7dsma</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.7dsma (data.state.csv)]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.7dsma</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perCap.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perCap.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perCap.7dsma</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perCap.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perCap.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perCap.7dsma</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new.perM.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.new.perM.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.new.perM.7dsma</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new.perM.7dsma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.new.perM.7dsma]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>deaths.new.perM.7dsma</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.active]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perCap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.active.perCap]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active.perCap</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.active.perM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.active.perM]</local-name>
            <parent-name>[data.state.csv]</parent-name>
            <remote-alias>cases.active.perM</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;' value='Σ Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' value='Case 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;' value='Σ Deaths' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;' value='Deaths 7D Avg.' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='Death Rate' datatype='real' default-format='p0.00%' name='[Calculation_187532707400040448]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[deaths (data.state.csv)] / [cases (data.state.csv)]' />
      </column>
      <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY() - 1' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='County-Level' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data.state.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' role='measure' type='quantitative' />
      <column caption='s_Cases Cumulative' datatype='integer' name='[cases (data.state.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
      <column datatype='integer' name='[cases.active]' role='measure' type='quantitative' />
      <column caption='s_Cases New' datatype='integer' name='[cases.new (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[cases.new.perCap.7dsma]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[cases.new.perCap]' role='measure' type='quantitative' />
      <column datatype='real' name='[cases.new.perM.7dsma]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='s_Cases per Capita' datatype='real' name='[cases.perCap]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County and State' datatype='string' name='[countyState]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
      </column>
      <column caption='s_Date' datatype='date' name='[date (data.state.csv)]' role='dimension' type='ordinal' />
      <column caption='s_Date, State' datatype='string' name='[dateState]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='s_Deaths Cumulative' datatype='integer' name='[deaths (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='s_Deaths New' datatype='integer' name='[deaths.new (data.state.csv)]' role='measure' type='quantitative' />
      <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='s_Deaths per Capita' datatype='real' name='[deaths.perCap]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' hidden='true' name='[fips]' role='measure' type='quantitative' />
      <column caption='s_Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='s_State' datatype='string' name='[state (data.state.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cases.new.7dsma]' derivation='None' name='[none:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_187532707400040448]' derivation='Sum' name='[sum:Calculation_187532707400040448:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases (data.state.csv)]' derivation='Sum' name='[sum:cases (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.active]' derivation='Sum' name='[sum:cases.active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new (data.state.csv)]' derivation='Sum' name='[sum:cases.new (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perCap.7dsma]' derivation='Sum' name='[sum:cases.new.perCap.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perCap]' derivation='Sum' name='[sum:cases.new.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new.perM.7dsma]' derivation='Sum' name='[sum:cases.new.perM.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.perCap]' derivation='Sum' name='[sum:cases.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths (data.state.csv)]' derivation='Sum' name='[sum:deaths (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new (data.state.csv)]' derivation='Sum' name='[sum:deaths.new (data.state.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.perCap]' derivation='Sum' name='[sum:deaths.perCap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pop]' derivation='Sum' name='[sum:pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County, State,Cases per Capita (bins))' hidden='true' name='[Action (County, State,Cases per Capita (bins))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
          <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),County,State)' hidden='true' name='[Action (MDY(Yesterday),County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MDY(Yesterday),State)' hidden='true' name='[Action (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (cases.new.7dsma,State)' hidden='true' name='[Action (cases.new.7dsma,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cases.new.7dsma:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Contiguous USA' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[state]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Northern Mariana Islands&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;Puerto Rico&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Cases per Capita (bins),County,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County, State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1718193694053994508:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MDY(Yesterday),State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Bins' role='dimensions'>
        <folder-item name='[Cases per Capita - County (bin)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[cases.new.7dsma]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new.7dsma]' type='field' />
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='dimensions'>
        <folder-item name='[Calculation_1718193694053994508]' type='field' />
        <folder-item name='[Calculation_204561939512385536]' type='field' />
        <folder-item name='[countyState]' type='field' />
        <folder-item name='[date]' type='field' />
        <folder-item name='state, county' type='drillpath' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='measures'>
        <folder-item name='[Calculation_1718193694052151304]' type='field' />
        <folder-item name='[population]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Metadata' role='groups'>
        <folder-item name='[Continental United States]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='State-Level Fields' role='dimensions'>
        <folder-item name='[date (data.state.csv)]' type='field' />
        <folder-item name='[dateState]' type='field' />
        <folder-item name='[state (data.state.csv)]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='State-Level Fields' role='measures'>
        <folder-item name='[cases (data.state.csv)]' type='field' />
        <folder-item name='[cases.new (data.state.csv)]' type='field' />
        <folder-item name='[cases.perCap]' type='field' />
        <folder-item name='[deaths (data.state.csv)]' type='field' />
        <folder-item name='[deaths.new (data.state.csv)]' type='field' />
        <folder-item name='[deaths.perCap]' type='field' />
        <folder-item name='[pop]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Bins'>
          <folder-item name='[Cases per Capita - County (bin)]' type='field' />
        </folder>
        <folder name='Cases'>
          <folder-item name='[cases.new.7dsma]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new.7dsma]' type='field' />
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
        <folder name='Metadata'>
          <folder-item name='[Calculation_1718193694052151304]' type='field' />
          <folder-item name='[Calculation_1718193694053994508]' type='field' />
          <folder-item name='[Calculation_204561939512385536]' type='field' />
          <folder-item name='[Continental United States]' type='field' />
          <folder-item name='[countyState]' type='field' />
          <folder-item name='[date]' type='field' />
          <folder-item name='[population]' type='field' />
          <folder-item name='state, county' type='drillpath' />
        </folder>
        <folder name='State-Level Fields'>
          <folder-item name='[cases (data.state.csv)]' type='field' />
          <folder-item name='[cases.new (data.state.csv)]' type='field' />
          <folder-item name='[cases.perCap]' type='field' />
          <folder-item name='[date (data.state.csv)]' type='field' />
          <folder-item name='[dateState]' type='field' />
          <folder-item name='[deaths (data.state.csv)]' type='field' />
          <folder-item name='[deaths.new (data.state.csv)]' type='field' />
          <folder-item name='[deaths.perCap]' type='field' />
          <folder-item name='[pop]' type='field' />
          <folder-item name='[state (data.state.csv)]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Documents/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='11/05/2020 09:01:01 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
            <relation name='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' table='[Extract].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[cases (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases]' />
            <map key='[cases.active.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active.perCap]' />
            <map key='[cases.active.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active.perM]' />
            <map key='[cases.active]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.active]' />
            <map key='[cases.new (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new]' />
            <map key='[cases.new.7dsma (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.7dsma]' />
            <map key='[cases.new.7dsma]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.new.7dsma]' />
            <map key='[cases.new.perCap.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perCap.7dsma]' />
            <map key='[cases.new.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perCap]' />
            <map key='[cases.new.perM.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perM.7dsma]' />
            <map key='[cases.new.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.new.perM]' />
            <map key='[cases.new]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.new]' />
            <map key='[cases.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[cases.perCap]' />
            <map key='[cases.percap]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases.percap]' />
            <map key='[cases]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[cases]' />
            <map key='[countyState]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[countyState]' />
            <map key='[county]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[county]' />
            <map key='[date (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[date]' />
            <map key='[dateState]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[dateState]' />
            <map key='[date]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[date]' />
            <map key='[deaths (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths]' />
            <map key='[deaths.new (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new]' />
            <map key='[deaths.new.7dsma (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.7dsma]' />
            <map key='[deaths.new.7dsma]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.new.7dsma]' />
            <map key='[deaths.new.perCap.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perCap.7dsma]' />
            <map key='[deaths.new.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perCap]' />
            <map key='[deaths.new.perM.7dsma]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perM.7dsma]' />
            <map key='[deaths.new.perM]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.new.perM]' />
            <map key='[deaths.new]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.new]' />
            <map key='[deaths.perCap]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[deaths.perCap]' />
            <map key='[deaths.percap]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths.percap]' />
            <map key='[deaths]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[deaths]' />
            <map key='[pop]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[pop]' />
            <map key='[population]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[population]' />
            <map key='[state (data.state.csv)]' value='[data.state.csv_09D45CB279DD4396BA9415ED380F7A05].[state]' />
            <map key='[state]' value='[data.csv_62B351438B2C46A48040691DC829D2A9].[state]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='708722' timestamp-start='2020-11-05 21:01:01.627' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>352</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8604</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13770</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2266</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15936</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289230</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>81828</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>countyState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[countyState]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>countyState</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16792</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1149</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>118</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3183</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma]</local-name>
              <parent-name>[data.csv_62B351438B2C46A48040691DC829D2A9]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>414</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dateState</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dateState]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>dateState</remote-alias>
              <ordinal>13</ordinal>
              <family>data.state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13156</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>14</ordinal>
              <family>data.state.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>337</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>15</ordinal>
              <family>data.state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>16</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5832</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>17</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2621</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[pop]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>pop</remote-alias>
              <ordinal>18</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>750</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.perCap</remote-alias>
              <ordinal>19</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7013</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.perCap</remote-alias>
              <ordinal>20</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4878</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>21</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2022</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>22</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>224</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perCap</remote-alias>
              <ordinal>23</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7211</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perCap</remote-alias>
              <ordinal>24</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3575</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perM</remote-alias>
              <ordinal>25</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7211</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perM</remote-alias>
              <ordinal>26</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3575</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.7dsma (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.7dsma</remote-alias>
              <ordinal>27</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3984</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.7dsma (data.state.csv)]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.7dsma</remote-alias>
              <ordinal>28</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>709</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perCap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perCap.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perCap.7dsma</remote-alias>
              <ordinal>29</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8470</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perCap.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perCap.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perCap.7dsma</remote-alias>
              <ordinal>30</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4388</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new.perM.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.new.perM.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.new.perM.7dsma</remote-alias>
              <ordinal>31</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9070</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new.perM.7dsma</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.new.perM.7dsma]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>deaths.new.perM.7dsma</remote-alias>
              <ordinal>32</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4447</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.active]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active</remote-alias>
              <ordinal>33</ordinal>
              <family>data.state.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4020</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perCap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perCap]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active.perCap</remote-alias>
              <ordinal>34</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8460</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.active.perM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.active.perM]</local-name>
              <parent-name>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</parent-name>
              <remote-alias>cases.active.perM</remote-alias>
              <ordinal>35</ordinal>
              <family>data.state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9042</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>5</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>4</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>3</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_187532707401031681:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203182039043:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:Calculation_187532707400040448:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_325455445230501890:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.perCap:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:pop:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_2367697203179343874:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.state:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perCap.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.perM.7dsma:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864367105:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864514562:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864535043:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864580100:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864633349:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864649734:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864666119:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864682504:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1077556619864698889:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.perCap:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new (data.state.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='County-Level' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='deaths.percap' ordinal='8' />
                  <column datatype='string' name='countyState' ordinal='9' />
                  <column datatype='integer' name='cases.new' ordinal='10' />
                  <column datatype='integer' name='deaths.new' ordinal='11' />
                  <column datatype='string' name='cases.new.7dsma' ordinal='12' />
                  <column datatype='real' date-parse-format='yy|#|#|mm' name='deaths.new.7dsma' ordinal='13' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='data.csv_62B351438B2C46A48040691DC829D2A9' table='[Extract].[data.csv_62B351438B2C46A48040691DC829D2A9]' type='table' />
            </properties>
          </object>
          <object caption='data.state.csv' id='data.state.csv_09D45CB279DD4396BA9415ED380F7A05'>
            <properties context=''>
              <relation connection='textscan.1e6l43u02j8ijb1d3oe8x0t33eyr' name='data.state.csv' table='[data.state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='dateState' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='integer' name='cases' ordinal='3' />
                  <column datatype='integer' name='deaths' ordinal='4' />
                  <column datatype='integer' name='pop' ordinal='5' />
                  <column datatype='real' name='cases.perCap' ordinal='6' />
                  <column datatype='real' name='deaths.perCap' ordinal='7' />
                  <column datatype='integer' name='cases.new' ordinal='8' />
                  <column datatype='integer' name='deaths.new' ordinal='9' />
                  <column datatype='real' name='cases.new.perCap' ordinal='10' />
                  <column datatype='real' name='deaths.new.perCap' ordinal='11' />
                  <column datatype='real' name='cases.new.perM' ordinal='12' />
                  <column datatype='real' name='deaths.new.perM' ordinal='13' />
                  <column datatype='real' name='cases.new.7dsma' ordinal='14' />
                  <column datatype='real' name='deaths.new.7dsma' ordinal='15' />
                  <column datatype='real' name='cases.new.perCap.7dsma' ordinal='16' />
                  <column datatype='real' name='deaths.new.perCap.7dsma' ordinal='17' />
                  <column datatype='real' name='cases.new.perM.7dsma' ordinal='18' />
                  <column datatype='real' name='deaths.new.perM.7dsma' ordinal='19' />
                  <column datatype='integer' name='cases.active' ordinal='20' />
                  <column datatype='real' name='cases.active.perCap' ordinal='21' />
                  <column datatype='real' name='cases.active.perM' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' table='[Extract].[data.state.csv_09D45CB279DD4396BA9415ED380F7A05]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[date]' />
                <expression op='[date (data.state.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[state]' />
                <expression op='[state (data.state.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='data.csv_62B351438B2C46A48040691DC829D2A9' />
            <second-end-point object-id='data.state.csv_09D45CB279DD4396BA9415ED380F7A05' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='County-Level Perspective' type='sheet' worksheet='5b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='County-Level Perspective' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Controlling for the Effect of Resident Population on Total Cumulative Case Counts' type='sheet' worksheet='Nation-Wide Top 25 Most Infected Counties' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Controlling for the Effect of Resident Population on Total Cumulative Case Counts' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='County-Level Perspective' type='sheet' worksheet='5a' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='County-Level Perspective' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='1c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>State-Level New Case Density</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{B06C2684-0D41-49AE-A343-241CCF03CE02}' />
    </worksheet>
    <worksheet name='1d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>County-Level New Case Density</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='New Cases 7D SMA'>
              <formatted-text>
                <run>New Cases 7D SMA</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{277AF070-EEB8-474C-A442-6620AAEDDFD8}' />
    </worksheet>
    <worksheet name='5a'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[State-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6670967.0743742296' min='-14670203.825095043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{6E5C1D5A-A324-4D39-AA35-1E76DE613F2C}' />
    </worksheet>
    <worksheet name='5b'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[County-Level New Case Density - <]]></run>
            <run>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201027' />
              <groupfilter function='member' level='[state]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (County,MDY(Yesterday),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[md:Calculation_204561939512385536:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20200730</value>
                    <value>&quot;Douglas&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>123.85714285714286</value>
                    <value>&quot;POLYGON((-96.3274 41.19,-96.3656 41.2341,-96.3506 41.2652,-96.4076 41.3146,-96.4244 41.3661,-96.4707 41.3932,-96.329 41.3931,-95.9387 41.3932,-95.9378 41.3908,-95.9288 41.3701,-95.9571 41.3496,-95.9252 41.3214,-95.8856 41.3181,-95.8775 41.2846,-95.9126 41.2795,-95.9276 41.2984,-95.9115 41.229,-95.9235 41.1909,-96.3274 41.19))&quot;</value>
                    <value>41.291899999999998</value>
                    <value>-96.150199999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-29' y='-55' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{42E61C40-2836-4455-BDA4-B4B6380BBC4B}' />
    </worksheet>
    <worksheet name='5c'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases - Daily and 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201027' />
              <groupfilter function='member' level='[state]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='line-interpolation' value='linear' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C85D93EA-FE10-4771-B4D8-03FB23236857}' />
    </worksheet>
    <worksheet name='5d'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases and Deaths - Cumulative</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Yesterday' datatype='date' name='[Calculation_204561939512385536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='TODAY() - 1' />
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204561939512385536]' derivation='MDY' name='[md:Calculation_204561939512385536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_204561939512385536:ok]' />
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[md:Calculation_204561939512385536:ok]' member='20201027' />
              <groupfilter function='member' level='[state]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (MDY(Yesterday),County,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C63D437F-3477-486E-A4A0-0691D9000DA3}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Missouri&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Virgin Islands&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' field-type='quantitative' min='0.0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <annotations>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2026.2043420347375</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-1' y='-180' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>5835.3770249089184</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-103' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>&quot;New York&quot;</value>
                    <value>985.11527015542401</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='76' y='-224' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>7771.4921285496757</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-63' y='-53' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='195'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>&quot;North Dakota&quot;</value>
                    <value>13201.025638333891</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-128' y='54' />
          </annotation>
          <annotation class='point' id='10' mark-position='1' pullback='12' text-width='209'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>&quot;South Dakota&quot;</value>
                    <value>11360.309452568732</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-81' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{C7BE4A65-2880-415E-821D-E62636CC1C9A}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period] (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Puerto Rico&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;Virgin Islands&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' max='24196' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>5780.9156789067929</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-61' y='-63' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='288'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;South Dakota&quot;</value>
                    <value>8058.4722474987548</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='45' y='-95' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='135'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>4077.2163886832536</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='60' y='-115' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='124'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;New York&quot;</value>
                    <value>741.92072083871858</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='112' y='-230' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='125'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>1126.4170317845378</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-10' y='-175' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{F9B8090F-3186-48A8-B8BA-249F4FEF1B75}' />
    </worksheet>
    <worksheet name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' minor-origin='#2020-05-14#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='#898989' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='subtotal' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='total' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='*m/d/yyyy' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_5' value='0' />
            <format attr='line-visibility' id='annotation_5' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='192'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases Reported: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-04 18:21:18.720#'>
                  <node-reference>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12348.994845360825'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;New York&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='119' y='1' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='114.477' text-width='166'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Peak New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-12#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>15282</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-98' y='-89' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-08-30#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2979.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-52' y='-131' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='291'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-11#</value>
                    <value>&quot;New York&quot;</value>
                    <value>4607.3826791917427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='186' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-19#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>4925.0533238208473</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='185' y='-20' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='296'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;South Dakota&quot;</value>
                    <value>8058.4722474987548</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-236' y='29' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='293'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>4077.2163886832536</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-186' y='-29' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='294'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2579.3154940962677</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='187' y='-20' />
          </annotation>
          <annotation class='point' id='15' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='2'>on</run>
              <run bold='true' fontalignment='2'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='2'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-27#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>7178.2694316500638</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-173' y='31' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0CF20289-F574-46F5-941E-C539B8F24827}' />
    </worksheet>
    <worksheet name='County-Level Infection Saturation - Cases as % Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' min='0.0' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' field-type='quantitative' max-size='1' min='6.0664887163309884e-05' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='per Capita'>
              <formatted-text>
                <run>per Capita</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5E2EF612-59BE-45E9-8040-5841F0B15503}' />
    </worksheet>
    <worksheet name='County-Level Total Cumulative Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' value='Σ Cases'>
              <formatted-text>
                <run fontcolor='#000000'>Σ </run>
                <run>Cases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F606AAAB-6F72-4FC5-A920-05FCDE64E617}' />
    </worksheet>
    <worksheet name='Daily New Cases, by State, over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column datatype='real' name='[cases.active.perM]' role='measure' type='quantitative' />
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.active.perM]' derivation='Sum' name='[sum:cases.active.perM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' minor-origin='#2020-05-14#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='#898989' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='subtotal' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='total' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='*m/d/yyyy' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_5' value='0' />
            <format attr='line-visibility' id='annotation_5' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='192'>
            <formatted-text>
              <run bold='true' fontcolor='#000000'>New York</run>
              <run fontcolor='#000000'>Æ </run>
              <run fontcolor='#787878'>on </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases Reported: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-04 18:21:18.720#'>
                  <node-reference>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12348.994845360825'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;New York&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='182' y='23' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='114.477' text-width='166'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Peak New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-12#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>15282</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-98' y='-89' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-08-30#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2979.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-52' y='-131' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='12' text-width='291'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-11#</value>
                    <value>&quot;New York&quot;</value>
                    <value>4607.3826791917427</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='186' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-19#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>4925.0533238208473</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='185' y='-20' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='296'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;South Dakota&quot;</value>
                    <value>8058.4722474987548</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-236' y='29' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='293'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run>on</run>
              <run bold='true'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-24#</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>4077.2163886832536</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-186' y='-29' />
          </annotation>
          <annotation class='point' id='14' mark-position='1' pullback='12' text-width='294'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='0'>on</run>
              <run bold='true' fontalignment='0'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='0'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-24#</value>
                    <value>&quot;Connecticut&quot;</value>
                    <value>2579.3154940962677</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='187' y='-20' />
          </annotation>
          <annotation class='point' id='15' mark-position='1' pullback='12' text-width='292'>
            <formatted-text>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]> ]]></run>
              <run fontalignment='2'>on</run>
              <run bold='true' fontalignment='2'><![CDATA[ <[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]> ]]></run>
              <run fontalignment='2'>Actively Contageous Cases per Million</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-27#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>7178.2694316500638</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.active.perM:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-173' y='31' />
          </annotation>
          <annotation class='point' id='17' mark-position='1' pullback='12' text-width='191'>
            <formatted-text>
              <run bold='true' fontalignment='2' fontcolor='#000000'>Wisconsin</run>
              <run fontalignment='2' fontcolor='#787878'> on </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases Reported: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-10-27#</value>
                    <value>&quot;Wisconsin&quot;</value>
                    <value>5331</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-61' y='-136' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{A072099D-D86D-4E6D-B854-1D710F4A2659}' />
    </worksheet>
    <worksheet name='Florida'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='New Cases Reported' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' max='16000' min='-1000' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='New Cases Reported' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' minor-origin='#2020-05-14#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='#898989' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='subtotal' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='total' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='*m/d/yyyy' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_5' value='0' />
            <format attr='line-visibility' id='annotation_5' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]))</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='192'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>New Cases Reported: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-04 18:21:18.720#'>
                  <node-reference>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='12348.994845360825'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;New York&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='119' y='1' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='114.477' text-width='166'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Peak New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-07-12#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>15282</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-98' y='-89' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-08-30#</value>
                    <value>&quot;Florida&quot;</value>
                    <value>2979.2857142857138</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-52' y='-131' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F118991D-F193-495B-8834-F00012BA9080}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Cumulative Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='132'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Σ Deaths: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>233923</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-190' y='-64' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' max='10000000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='138'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878'>Σ Cases: </run>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>9631467</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-192' y='-61' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily New Cases with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-01-01#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='146'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-11-04#</value>
                    <value>109018</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-140' y='-126' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Nation-Wide Top 10 Most Infected Counties Map (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Nation-Wide Most Infected Counties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
            </column>
            <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
            </column>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='Cumulative Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County, State,Cases per Capita (bins))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1718193694053994508]' />
              <groupfilter function='level-members' level='[Cases per Capita - County (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='relative-date' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='day' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (County, State,Cases per Capita (bins))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-6866846.1194105344' min='-14166693.367251523' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6736507.4146388639' min='1531757.6653652792' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' min='0.01' num-steps='5' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' field-type='quantitative' max-size='1' min='6.0664887163309884e-05' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='true' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{4EB98FD4-1A69-4D73-BD6C-762BC1A4A549}' />
    </worksheet>
    <worksheet name='Nation-Wide Top 25 Most Infected Counties'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
            </column>
            <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
            </column>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok:22]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694053994508:nk]' />
                <order field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (Cases per Capita (bins),County, State)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='2' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Big Horn, Montana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Colfax, Nebraska&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Sevier, Arkansas&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='3' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Bristol Bay Borough, Alaska&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Buffalo, South Dakota&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;East Carroll, Louisiana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;East Feliciana, Louisiana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Ford, Kansas&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Issaquena, Mississippi&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Madison, Louisiana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Nobles, Minnesota&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Rosebud, Montana&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Seward, Kansas&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Stewart, Georgia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Texas, Oklahoma&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Wayne, Tennessee&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='4' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Buena Vista, Iowa&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Chicot, Arkansas&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Dakota, Nebraska&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Lee, Arkansas&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='5' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Lafayette, Florida&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Lake, Tennessee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Trousdale, Tennessee&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='6' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Chattahoochee, Georgia&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1718193694053994508:nk]' member='&quot;Lincoln, Arkansas&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
              <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
              <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-10-29#' />
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok:22]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='10' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='11' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='12' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='13' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='14' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='15' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='16' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='17' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='18' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='19' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='20' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='21' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='22' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='23' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='24' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='25' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694053994508:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok:22]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Inclusions (Cases per Capita (bins),County, State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2d9da</color>
                <color>#f3c2c3</color>
                <color>#f4abad</color>
                <color>#f59395</color>
                <color>#f67b7e</color>
                <color>#f76367</color>
                <color>#f84b4f</color>
                <color>#f93237</color>
                <color>#fa191f</color>
                <color>#fc0107</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' field-type='quantitative' max-size='1' min='6.0664887163309884e-05' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' />
              <text column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-halo' value='true' />
                <format attr='has-stroke' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694053994508:nk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</cols>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{3272EB68-1E71-4C15-96A7-07367B551AA1}' />
    </worksheet>
    <worksheet name='New York'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='New Cases Reported' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' max='16000' min='-1000' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='New Cases Reported' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' field-type='quantitative' major-origin='#2020-03-01#' major-spacing='1.0' major-units='months' min='#2020-03-07#' range-type='fixedmin' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='#898989' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='subtotal' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' data-class='total' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' value='*m/d/yyyy' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-pattern-only' id='annotation_3' value='solid' />
            <format attr='stroke-size' id='annotation_3' value='0' />
            <format attr='line-visibility' id='annotation_3' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]))</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-07-11 15:19:17.760#'>
                  <node-reference>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='14264.809278350516'>
                  <node-reference>
                    <fields>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Florida&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-108' y='0' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='171'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Date: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run fontalignment='2'>Æ&#10;</run>
              <run fontalignment='2' fontcolor='#787878'>Peak New Cases: </run>
              <run bold='true' fontalignment='2'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-04-04#</value>
                    <value>&quot;New York&quot;</value>
                    <value>12274</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-1' y='-117' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Case 7D Avg.: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-08-30#</value>
                    <value>&quot;New York&quot;</value>
                    <value>624.14285714285722</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-54' y='-104' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{DB266024-E994-49C5-AFE7-9845F291AD30}' />
    </worksheet>
    <worksheet name='Notable States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{18B2D08C-D4D2-4F82-8F4C-7C904941F167}' />
    </worksheet>
    <worksheet name='Notable States - Cases + Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Cases and Deaths (the &quot;curves&quot;) for Notable States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' datatype-customized='true' name='[cases.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths - 7D SMA' datatype='real' name='[deaths.new.7dsma]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new.7dsma]' derivation='Sum' name='[sum:cases.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new.7dsma]' derivation='Sum' name='[sum:deaths.new.7dsma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk] + ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new.7dsma:qk])))</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
      </table>
      <simple-id uuid='{3AEE0153-2BB7-47F3-A410-04767AF59D72}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Controlling for the Effect of Resident Population on Total Cumulative Case Counts'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='750' maxwidth='1000' minheight='750' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93666' id='26' param='horz' w='98400' x='800' y='1067'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93666' id='22' param='vert' w='98400' x='800' y='1067'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5600' id='23' w='98400' x='800' y='1067'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='88066' id='7' param='horz' w='98400' x='800' y='6667'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='88066' id='5' w='98400' x='800' y='6667'>
                  <zone h='88066' id='16' name='Nation-Wide Top 25 Most Infected Counties' w='49200' x='50000' y='6667'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='88066' id='273' name='Nation-Wide Top 10 Most Infected Counties Map (2)' w='49200' x='800' y='6667'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4200' id='68' param='horz' w='98400' x='800' y='94733'>
            <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='4200' id='274' name='Nation-Wide Top 10 Most Infected Counties Map (2)' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' w='60800' x='800' y='94733'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4200' id='275' name='Nation-Wide Top 10 Most Infected Counties Map (2)' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' w='37600' x='61600' y='94733'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='333' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97866' id='332' param='vert' w='98400' x='800' y='1067'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5600' id='23' w='98400' x='800' y='1067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88066' id='273' is-fixed='true' name='Nation-Wide Top 10 Most Infected Counties Map (2)' w='49200' x='800' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='4200' id='274' name='Nation-Wide Top 10 Most Infected Counties Map (2)' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' w='60800' x='800' y='94733'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4200' id='275' name='Nation-Wide Top 10 Most Infected Counties Map (2)' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' w='37600' x='61600' y='94733'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88066' id='16' is-fixed='true' name='Nation-Wide Top 25 Most Infected Counties' w='49200' x='50000' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{54BE3D3C-B07D-4D5C-8330-65B8D3F91E03}' />
    </dashboard>
    <dashboard name='County-Level Perspective'>
      <style />
      <size maxheight='750' maxwidth='1000' minheight='750' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97866' id='28' param='horz' w='98400' x='800' y='1067'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97866' id='7' param='horz' w='98400' x='800' y='1067'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97866' id='5' w='98400' x='800' y='1067'>
                <zone h='44664' id='3' name='5c' w='49203' x='49997' y='1067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44227' id='10' name='5b' w='49197' x='800' y='50055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4651' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49197' x='800' y='94282'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44664' id='14' name='5a' w='49197' x='800' y='1067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4324' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49197' x='800' y='45731'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44336' id='26' name='5d' w='49203' x='49997' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4269' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49203' x='49997' y='45731'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4597' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49203' x='49997' y='94336'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='172' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97866' id='171' param='vert' w='98400' x='800' y='1067'>
                <zone fixed-size='280' h='44664' id='14' is-fixed='true' name='5a' w='49197' x='800' y='1067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4324' id='15' name='5a' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49197' x='800' y='45731'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44664' id='3' is-fixed='true' name='5c' w='49203' x='49997' y='1067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4269' id='9' leg-item-layout='horz' name='5c' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49203' x='49997' y='45731'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44336' id='26' is-fixed='true' name='5d' w='49203' x='49997' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4597' id='29' leg-item-layout='horz' name='5d' pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='49203' x='49997' y='94336'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44227' id='10' is-fixed='true' name='5b' w='49197' x='800' y='50055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4651' id='11' name='5b' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' show-title='false' single-line='true' w='49197' x='800' y='94282'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836711AE-A8FC-40BB-A283-4102C7E23F92}' />
    </dashboard>
    <dashboard name='Florida vs. New York'>
      <style />
      <size maxheight='750' maxwidth='1000' minheight='750' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97866' id='15' param='horz' w='98400' x='800' y='1067'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97866' id='12' param='vert' w='98400' x='800' y='1067'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5600' id='13' w='98400' x='800' y='1067'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92266' id='10' w='98400' x='800' y='6667'>
                <zone h='46128' id='3' name='New York' w='98400' x='800' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='41949' id='5' name='Florida' w='98400' x='800' y='52795'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4189' id='16' name='Florida' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='98400' x='800' y='94744'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='131' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97866' id='130' param='vert' w='98400' x='800' y='1067'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5600' id='13' w='98400' x='800' y='1067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46128' id='3' is-fixed='true' name='New York' w='98400' x='800' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41949' id='5' is-fixed='true' name='Florida' w='98400' x='800' y='52795'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4189' id='16' name='Florida' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' show-title='false' w='98400' x='800' y='94744'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A115D1E8-BAF4-4E32-9616-7AB61FBE9AB6}' />
    </dashboard>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources />
      <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93919' id='58' param='vert' w='98888' x='556' y='920'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4828' id='59' w='98888' x='556' y='920'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89091' id='7' param='horz' w='98888' x='556' y='5748'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='89091' id='5' w='98888' x='556' y='5748'>
                <zone h='59344' id='35' name='Nation-Wide Daily New' w='49413' x='25223' y='5748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29651' id='146' name='Nation-Wide Cumulative New' w='24667' x='556' y='5748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29693' id='155' name='Nation-Wide Cumulative Deaths' w='24667' x='556' y='35399'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29658' id='252' name='1c' w='24808' x='74636' y='5748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29747' id='311' name='Notable States' show-title='false' w='98888' x='556' y='65092'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29686' id='324' name='1d' w='24808' x='74636' y='35406'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='4241' id='126' w='98888' x='556' y='94839'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4241' id='125' param='horz' w='98888' x='556' y='94839'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4241' id='253' name='1c' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='45068' x='556' y='94839'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='1' fixed-size='599' h='4241' id='254' is-fixed='true' name='1c' name1='1d' synchronized='1' trailctrls='0' w='42153' x='45624' y='94839'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='4241' id='325' name='1d' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' show-domain='false' show-null-ctrls='false' w='11667' x='87777' y='94839'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='507' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98160' id='506' param='vert' w='98888' x='556' y='920'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4828' id='59' w='98888' x='556' y='920'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' h='29651' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24667' x='556' y='5748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59344' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49413' x='25223' y='5748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' h='29658' id='252' is-fixed='true' name='1c' w='24808' x='74636' y='5748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4241' id='253' name='1c' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' w='45068' x='556' y='94839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='230' h='29693' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24667' x='556' y='35399'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='4241' id='325' name='1d' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' show-domain='false' show-null-ctrls='false' w='11667' x='87777' y='94839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='230' h='29686' id='324' is-fixed='true' name='1d' w='24808' x='74636' y='35406'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='230' h='29747' id='311' is-fixed='true' name='Notable States' show-title='false' w='98888' x='556' y='65092'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='1' fixed-size='599' h='4241' id='254' name='1c' name1='1d' synchronized='1' trailctrls='0' w='42153' x='45624' y='94839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='Nation-Wide Total Cumulative Cases - Absolute and Relative to Resident Population'>
      <style />
      <size maxheight='750' maxwidth='1000' minheight='750' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89447' id='17' param='vert' w='98400' x='800' y='1067'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5600' id='18' w='98400' x='800' y='1067'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='83847' id='7' param='horz' w='98400' x='800' y='6667'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='83847' id='5' w='98400' x='800' y='6667'>
                <zone h='83847' id='3' name='County-Level Infection Saturation - Cases as % Population' w='49201' x='49999' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='83847' id='29' name='County-Level Total Cumulative Cases' w='49199' x='800' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='1' h='4192' id='10' name='County-Level Infection Saturation - Cases as % Population' name1='County-Level Total Cumulative Cases' synchronized='1' w='98400' x='800' y='90514'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4227' id='31' name='County-Level Total Cumulative Cases' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' w='49141' x='800' y='94706'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4227' id='8' name='County-Level Infection Saturation - Cases as % Population' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' w='49259' x='49941' y='94706'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='260' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97866' id='259' param='vert' w='98400' x='800' y='1067'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5600' id='18' w='98400' x='800' y='1067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83847' id='29' is-fixed='true' name='County-Level Total Cumulative Cases' w='49199' x='800' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4227' id='31' name='County-Level Total Cumulative Cases' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' w='49141' x='800' y='94706'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83847' id='3' is-fixed='true' name='County-Level Infection Saturation - Cases as % Population' w='49201' x='49999' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4227' id='8' name='County-Level Infection Saturation - Cases as % Population' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' w='49259' x='49941' y='94706'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='1' h='4192' id='10' name='County-Level Infection Saturation - Cases as % Population' name1='County-Level Total Cumulative Cases' synchronized='1' w='98400' x='800' y='90514'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D80522BC-8C60-4ABD-87E5-F610E0CB76B1}' />
    </dashboard>
  </dashboards>
  <windows pres-mode='true' source-height='30'>
    <window class='dashboard' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='1c'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='1d'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Notable States'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='254' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='dashboard' name='Controlling for the Effect of Resident Population on Total Cumulative Case Counts'>
      <viewpoints>
        <viewpoint name='Nation-Wide Top 10 Most Infected Counties Map (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Top 25 Most Infected Counties' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{39211BAF-95AE-448C-8618-F98556F69FBB}' />
    </window>
    <window class='dashboard' name='Nation-Wide Total Cumulative Cases - Absolute and Relative to Resident Population'>
      <viewpoints>
        <viewpoint name='County-Level Infection Saturation - Cases as % Population'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='County-Level Total Cumulative Cases'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6711D28B-9769-45D1-9AE5-93E4D1A9A8AE}' />
    </window>
    <window class='dashboard' name='County-Level Perspective'>
      <viewpoints>
        <viewpoint name='5a'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5b'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='5c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='5d'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{3FD9FA44-6E72-44CA-A079-4E2D80E4338F}' />
    </window>
    <window class='dashboard' name='Florida vs. New York'>
      <viewpoints>
        <viewpoint name='Florida'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='New York'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{66F1CF0A-63A7-4E84-AB51-3AFFC038631D}' />
    </window>
    <window class='worksheet' name='Notable States - Cases + Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E29869-794A-42BD-9FD3-6C37C11A1D8D}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A27A623D-2455-4E71-9350-83AEACEE3B0B}' />
    </window>
    <window class='worksheet' name='Daily New Cases, by State, over Time'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9F07A71-CACB-4EB8-86DD-3CDBF4B37EDC}' />
    </window>
    <window class='worksheet' maximized='true' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-04-11#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C16D9719-18FC-49FF-9506-40BA605AB53C}' />
    </window>
    <window class='worksheet' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period] (2)'>
      <cards>
        <edge name='left'>
          <strip size='151'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-04#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51F1FD6A-B3B4-4CDB-8C82-F8793548E683}' />
    </window>
    <window class='worksheet' hidden='true' name='1c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59732700-92E5-42F2-AB6B-3436D85DF36F}' />
    </window>
    <window class='worksheet' hidden='true' name='1d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-16#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7A69FE9-8E67-4E4E-8D8A-5DEA02588AF4}' />
    </window>
    <window class='worksheet' hidden='true' name='5a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED5063A-3620-48EF-A2E5-BD1E1DA58829}' />
    </window>
    <window class='worksheet' hidden='true' name='5b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new.7dsma:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:Calculation_204561939512385536:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4B5A0E-088B-4C88-A0B3-21B1C81304AE}' />
    </window>
    <window class='worksheet' hidden='true' name='5c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D64A6E8-DE6A-46B7-B86E-B23AC593D8C9}' />
    </window>
    <window class='worksheet' hidden='true' name='5d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_325455445245566979:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.new:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E95A138C-5A92-427D-9DA7-5B0D9AF77F38}' />
    </window>
    <window class='worksheet' hidden='true' name='County-Level Infection Saturation - Cases as % Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-07-02#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{6EE07B7E-39C8-4338-86B6-142320E3156F}' />
    </window>
    <window class='worksheet' hidden='true' name='County-Level Total Cumulative Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-07-02#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDC33A73-46E2-4C77-A4CE-41BE092B493C}' />
    </window>
    <window class='worksheet' hidden='true' name='Florida'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78F71486-21B1-46B1-A3E8-F8DB48EB241C}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Top 10 Most Infected Counties Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3C135B7-A514-474D-B0C4-B1FF4DE0AAD0}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Top 25 Most Infected Counties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F0AD05B-DF88-4E25-A15E-A5F2A251B92F}' />
    </window>
    <window class='worksheet' hidden='true' name='New York'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AD7CA02-5FE9-4854-827C-A191CD77318E}' />
    </window>
    <window class='worksheet' hidden='true' name='Notable States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;South Dakota&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{798B147B-0696-4FFF-81B2-64334898F022}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period]' width='384'>
      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
      Hh5ok/8Pmqub4ndAssQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Actively Contageous Cases per Million Persons, Current with History [Assumes 9-Day Contageous Period] (2)' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Actively Contageous Cases per Million, by State, over Time [Assumes 9-Day Contageous Period]' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Controlling for the Effect of Resident Population on Total Cumulative Case Counts' width='384'>
      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
      wMBAdHR0IDo6GitXroRCocCOHTtw7NgxtLa2Ijw8HGVlZXjyyScxa9Ysl/XoSG1tLV588UX4
      +vrCZDJBpVJh/fr1qKiowCuvvILKykr6jI899hhGjhyJZ555BlqtFiqVCrW1tfjb3/6GSZMm
      ucyDEIK9e/fi2WeftVPyvLx85513MG3aNIwZMwYAcOjQIZw/fx5Lly7F/v37sW3bNnAch5CQ
      EJSWlmLy5MkoKChAcHAwysrK8PHHHyM0NBTff/89WJalBoJjO7Zl165d2L59O8LDw6FWq5GU
      lIQXX3wR27dvx44dOwDigaeffprk5eU5/W3btm1k9erVxGKxEI7jyL59+8jSpUsJIYSUl5eT
      hQsXksrKSsJxHNFqteT2228nBoOBcBxHXnzxRZKbm0s4jiMcxxFCCFm/fj259957yRtvvEHa
      29tpmk899RQxmUyEEEIyMzPJfffdR8xmMyGEkAcffJDU1dURQggpLCwkzz77LC3f2rVrSWZm
      JiGEkPT0dLJ06VLS1NREOI4jdXV15O677yaEEFJSUkJuvfVWUlNTQziOI0ajkdxxxx3EYDDY
      PS/HcWTFihXk5MmTtNy7du0iK1asIGazmXAcRw4dOkQefvhhwnEcqaqqIjfffDO59957SV5e
      HrFYLHZpcRxHbrnlFmIymezq4d577yUHDhwgLMsSjuPIypUryZEjRwghhDz88MMkMzOTcBxH
      dDodueeee0hZWZldOc1mM5k5cyb5/PPPyZYtW8iWLVvIl19+SVpaWgjHcSQnJ4f84x//oHny
      z/Hhhx/Sz6WlpWTJkiVEq9USjuNIdnY2efTRR4nVaiWFhYXkrrvuonWpVquJXq8nLMuSm266
      yS5dW7799luyfPlyWlfp6enkoYceIlarlXAcR9atW0eOHTvm9N6NGzeSb7/9lhBCiMViIUeO
      HCG33norUavV9F3v2rWLcBxHWJYlTz31FDl69CghhJBFixaR6upqQgghRqOR/r+kpIQ89dRT
      NM27776b7Nu3j+b/0ksv0Xp/6623yGeffUbTX7FiBdm7dy9tg7t376b94OWXXyb79+8nHMeR
      trY2snjxYpd1kpWVRV544QX6WaPRkKVLl5J9+/YRs9lMFi9eTHJzc2nZn3jiCXLo0CFCCCFL
      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
      o/w/8pK6l8Sin9MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='County-Level Perspective' width='384'>
      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
      sjKGhob41re+hdfr5Y9//CO33HILHo+HL3/5y6xZs4bZs2fzu9/9jrKyMi699FIAjh49ysTE
      BJdddhmCICBJEuXl5ciyzP3338/IyAiyLFNTU8Ntt91GMBjkO9/5DgaDgYmJCT796U+zbNky
      nn/+ed544w0sFgutra18+ctfzjjJJUli6dKlrFq1ipdffplrr72Wf//3f6erq4toNMqKFSv4
      y7/8S7q7u7n//vsxGo1YrVYmJiZ48MEHOXLkCA899BButxufz8ddd91FdXU1P/rRj/iHf/gH
      Hn/8cXbv3s23vvUtLBYLt956K2vWrOEHP/gBZrOZiYkJvvvd73L//ffn/aZ2u53ly5fzP//z
      P9x8880p995++23+8z//k4qKCsLhMHfffTc7d+6kp6eHm266CYDf/va3VFdXc/755/P973+f
      eDzO2NgYn/vc51i6dCmPPfYYnZ2dSJLE0aNHWbhwIQMDA0xMTLB69Wo+8YlPAInF5HQ66e/v
      59Zbb2X+/Pn09PTwwx/+kPLyckZGRrjzzjupqqri3nvv5ROf+ASPPfYYn/70p7nqqqu0Pu/e
      vZvBwUG+8IUv8Mwzz+Qc+w033KD9PTw8jNlsRhRFPvzwQ/7lX/4FQRCYMWMGgiAwPj7OypUr
      tfKhUAiv14vNZmPDhg1cffXVSJKEJEksX76cnTt3ctlll+V9/5lgNBq56aab+NWvfsU3v/nN
      lHt79uzhscceo6qqikAgwD333MPGjRsRBIHVq1ezd+9e7rrrLp566ilsNhsPPfQQ119/vSbh
      b9u2jXnz5mk7baPRiNvtJhQKcdddd2E0GvH7/Sxfvpwbb7yR3t5evv/97+N2u/F6vdx22200
      Nzfz4x//mMHBQYLBIKtWrWL16tVs3ryZ3/zmN7hcLoLBID/60Y8KYgIAgiBgt9v52te+xi23
      3MJNN93Ejh07ePbZZ3E6nYyNjfFP//RPtLa2smnTJhRF4Yorrkj5Hv/8z//M/fffj9ls1sbz
      wx/+UOvDz3/+c/bu3YvRaMRgMPD//t//w2g08o//+I9YLBZEUaSvr497772XpqYmNm7cyLPP
      PktpaSkHDhzga1/7Wsa+K4rC008/zU033ZRzvEajkSuuuIIdO3bw9ttvc9FFF2n0JysDKC8v
      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
      reKpp54ylg/3/cvKyqK6upqHHnoIi8XCd7/7Xbq6umhpacFisfC9730PTdP45je/SWdnJ1lZ
      WSkdh1kcPXqU0tLSIX/vXq+XVatWYbVaiUajfO1rX+Omm25i3bp13HzzzSxfvty4a33zzTep
      ra3ly1/+MpFIhG984xtceumlrF+/nptuuolLLrlkyBzeTqeT5557ztj+3XffTSAQQNd1ZsyY
      wX333YeiKNx///309vbS1dXF+vXrWbVqFTabjZ/97GejfrbYrIShUIiXX36Zp556CqfTyUsv
      vcSaNWu4/PLLefbZZ7FarWiaxt13300wGOT+++/nyJEjCd8/p9PJI488gsfj4e2332bbtm1M
      mzaNHTt28JOf/AS73Z5Sm1hfXx85OTlJq5IGl6OxslTTNP7pn/6JKVOm8Ne//pWOjg6++MUv
      0tHRwY9+9KMR3xvvlltuQVXVgXnchztAp9NJb2/vkOV1dXXMmzfP+KLMmzePffv2JVylDeZ2
      u43bN5vNNmzj0vXXX8+//du/sWjRItavX8/jjz/Ou+++y+9+9zsAHnvssaTvq6+v549//CMW
      iwVd12loaMBmszFjxgy2bduGx+OhoKAAj8dDXV0dbW1tNDY2AgOF8Gi/sKKiIqZNm8Zbb71l
      LOvo6ODIkSNGKDQ1NWG1Wrn55pt5/vnnCYVC+P1+rr32WtatW0dxcXHCeYudl56eniH78/l8
      rFq1it7eXhRFMa52v/CFL/C///f/pry8nKuvvppZs2ZRV1eHz+dj3759wMCVXCQSGXKbHa+n
      pwe3201dXR3RaJQ33ngDgIMHDxpfoFgVj6IoxsTiyfY/ElVVufzyy1m9ejXLly8HSJiW8Ne/
      /jUbNmwgPz+fb3/720P+GCorK8nPz2fdunXGsuG+f/PnzycjI8PYRuyPub6+noaGBuNOsrW1
      1aiKFMe5XK6kf++BQIBVq1bR0dGBqqq0t7ej6zqXXXYZTz75JH/9619ZtmwZK1asoK6ujv37
      9xvnuqWlhb6+Pi699FJ++MMf8tprr3H++ecnzO8dDod5/vnnaW1txWq10traaoSEx+Mxfp+x
      cuOTTz5h8eLFo1bzxuvu7sbtdtPX10drays//elPgYEpNsvLy4lEIvzsZz+jqakJVVVpbm4m
      HA4nnW3NbrcbV+qx75jNZmPFihV84xvfYPLkyVx33XVUVRHso/MAABNLSURBVFUZ73n22WfZ
      v38/NTU13HnnncDAPM4+ny/lzxDjdDqNv8n4/x6L9evX89///d9YrdbhAyArK4tgMEhLSwtF
      RUXG8szMTNra2oyf29rayMnJGfMHgYGrvPgePbGG1rVr11JcXExGRgZLly5lyZIlxvrDHeuN
      N95oVK3ECr8VK1bwxz/+kczMTC677DJg4EtVU1PDwoULAbj99tsT6tiHO85bb72Vb37zm0yd
      OhUY+EUUFxdz++23G+u5XC6sViv5+fmsXbuW2tpaZs6cySuvvEJTUxM33XRTwnbPO+88Xnnl
      Fc4///yEz/aHP/yBOXPmsGLFCnRd59577wXg0ksv5aKLLqKhoYEf/OAHPPXUU3g8HhYuXGhU
      T91+++0jfiFaW1s5dOgQlZWVeDwerrnmGnJzcwG44447RrxtTbb/wedpcA+tyy67jJUrVxKN
      RrnkkksStn/zzTfzxS9+0XjvYIqicNttt/Hwww8b38Gxfv88Hg9z5szhC1/4AjBwfuLvwsSA
      SZMmceDAAbq7uxPa5FavXk1paSn33nsvFovF+C6WlZXx7LPP0t7ezi9+8QtUVcXj8bBkyRKW
      LVsGDJxrr9dLVlYWzz77LB0dHbz44ouoqsoVV1wBDDTipqWl8eijj6KqKt/+9rdHPM709HTj
      4i0Vmqbxxz/+kYsuugibzUZhYWHC36zT6eT9999HVVXjGOIbYlPpCaUoCtdffz1XXnkl+/bt
      45FHHuEXv/iFUQ7dfffd6Lqe8B13OBw4nU4aGhqYNGlSwvZOtvfVSO8PBoP853/+J08++SQZ
      GRnDB4DVauXWW2/l29/+NrfddhvRaJSWlhauuuoq7r33XioqKoCBHhtPPfUUPT09bN26lV27
      drF161a2bt066oFWVFTw6quvsmzZMioqKvB6vVx77bU8/PDDPPnkkwDGVWi8rVu3Gleqs2fP
      Zvny5bzwwgtcf/31HDlyhIMHD3LHHXcwbdo0mpubOXjwoPFLX758OY888gjp6ekoisLatWu5
      7777Rj3WzMxMzj//fH79619zzTXXkJ2djcfj4dVXX2XOnDls376dSZMmsWzZMpYsWcJPf/pT
      nn76adxuNw6Hg/r6eqPeM+bcc8/l5Zdf5plnnmHZsmV88sknzJ8/H5fLxYEDB9izZw+vvfYa
      hw8fBgZ6wixbtgyn04nVakVVVS655BJ++MMf4nA40HWdN998c0hPgubmZv7nf/6HI0eO8Npr
      r3HXXXdht9u58sor+elPf8qXvvQluru72blzJ3fdddew5yDZ/uNlZWWxb98+Pv74Y1wuFzU1
      NWRkZDBjxgxeffVVfvnLXyasn+x3O1heXh5z587lD3/4A7fddhuLFi1K+v1rb29P+v758+fz
      m9/8hkmTJpGZmcm7777LzTffTGFh4Yj7NRuXy8UNN9zA/fffzy233ILP56O/vx+n08nevXup
      q6tj7dq1NDQ0AAMXKS6XiylTpqBpGi6Xi7lz5/Kd73zHqO588803ueeee1i9ejUOh4OpU6cS
      jUYTLricTidNTU3s27eP9957j08++WTE45w9ezYvvPACU6dORVEU3nnnHc4777wh661ZswZN
      03jvvffIyspi0aJFWCwWysrK+N3vfseCBQv45JNPyMnJwePx0NLSwr59+/jggw/YsWMHgPEd
      X7NmDdnZ2UPaAGP8fj/PP/88F110ETBwlxD/vU72PbdYLNx555088MADxkVbfX09t912Gw6H
      g3fffReXy8X//b//d0y9ArOzs1mzZg0lJSW88sorQxrVYxdp+/bto6enB/V7sW4WSZSVlTFr
      1iy2bduG3+9n6dKlFBQUsGDBAtavX09LSwt33nknubm5eDwe3G43H374IZWVlVx88cWUl5dj
      tVrJyckxbv3T0tIoKirC7XZTXV3N4cOHqa+vp7q6GpfLRWZmJuvWreP2229PWj+WlpZGOBwm
      EokQiUQoKipi3rx5eL1etm3bhs1m44orrjBuj3JycqitrTW6d3q9XqPA7u7u5vLLLyc7Oxun
      00lBQUFCLxGn00l+fr7RxWzatGnk5OQwa9YsnE4nixcv5ujRo9TV1VFZWcmiRYtQVZXCwkLy
      8/OZP38+FouF4uJiZs2aZbR1xP8yli1bRjAYZM+ePRQVFTFnzhxqampoampi165dXHDBBcyb
      N4/S0lIKCgrYuHEjDQ0NfOlLX6KoqIisrCxmzpzJtm3b8Pl8XHHFFQmfwWq1YrVaCYfD5OXl
      ceuttxp3WmVlZRQXF7N161Z0Xedzn/scaWlppKWlUVhYiNvtNs5hSUlJ0v3b7Xby8vLIzc1F
      VVVqamrYsGEDLpfLuLJRFIVQKJRy7yCXy0VhYSGZmZkoikJNTQ05OTnMmDGDjIyMpN8/VVXJ
      zc0lPz/f+D2XlpaSlpbG4sWL2b17N21tbSxdupSKioox99gyg6qqKioqKti+fTuaprFkyRJm
      z55NR0cHW7duZdGiRSxatIjS0lJKS0vZu3cvW7du5ZxzzuGCCy4gIyODefPmsX37djo7O7ns
      ssvIy8ujuLiYuro6tm7dypw5c7jwwguN819aWorf7+fjjz/mnHPO4fzzz6e0tBSHw2E0AMPx
      36fb7Wb+/Pl8+OGHBAIBLr/8cioqKhJ6v2VnZ9Pb24vVamX58uVceeWVRp33woUL6e7uZs+e
      PZSWlnL++edTXl5OKBTio48+Yvbs2Vx44YWUlpZitVo555xz+Pjjj/H5fNTW1pKVlWW0lTgc
      DvLz88nLyyMzM5ONGzfS3NzMV77ylZR6mxUWFnLuueeyfft2enp6WLJkiVFerVu3jv7+fj73
      uc9RWVlpBFVJSYlRDRUrrywWC9nZ2RQXF1NbW8vGjRtpb29nxYoVVFVVUVBQgN1uJz8/n/z8
      fGbMmMHbb7+Npmln1pzABw8e5JVXXqGsrIzrrrvudB+OGAfbtm3jxRdf5B//8R+N6jMhxJnh
      jAqA9957D7/fz0UXXTTmhg1xZvr973/P1KlTmTNnzuk+FCHEIGdUAAghhPj0yGBwQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIA
      QghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUhIAQghhUtbTfQDjxe/v
      IxQMnu7DEOKUs6gqGRne030YYgKYMAFQt/Mjsj54Evo6TvehCHFKtVZdz/zr7j3dhyEmgAkT
      ABY0Svv2QHfj6T4UIU6p7vBnU143Go2iqqrx70j27NlDUVERGRkZtLS0oOs6xcXFJ3u4Q3R2
      dtLX9/+3by8xTa1bAMf/ZdNSaCCgUMorltJKSIGbkIqggBiJHDEEZCImzu9QB3fgROMdOICh
      cYJv1BkabVDB2ASwPOKDEDRWUGIQobRSi5ZiKa1738HJaY65R+85Ro9X+H6Tr+luutZeSdfa
      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
    </thumbnail>
    <thumbnail height='384' name='Daily New Cases, by State, over Time' width='384'>
      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
      /Hb2AzWE+/grUkaRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Florida vs. New York' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXgV9b348fec/WRfyEoWAoEQwi5bCKCiuCDQVtTaWnvrr7QiV9uqVW+1
      rly1tdhS2+qtXrcrtbiLoCCbELaEJSQsgZCF7Cf7evYzZ+b3R5ojKVuIiSHJ9/U8PjLnzPKZ
      gTOfme8qqaqqIgiCIAw5mv4OQBAEQegfIgEIgiAMUSIBCIIgDFEiAQiCIAxRIgEIgiAMUSIB
      CIIgDFEiAQiCIAxRIgEIgiAMUd8oAaiqSl/2I1MUpU/3P9ipqoqiKP0dhiAIl6mLJoCqqio+
      /PDDLv/l5OQA8MYbb7Bv374eH/zw4cMcPHjwnN+pqspDDz2E1Wrt8f6/CVVV2bRpE9nZ2V0+
      b21tZdeuXX1yzO3bt1NZWdnlM6fTybp163qUCOvq6njqqad6KTpBEAabiyaAgoICPv/8c1wu
      l+8/WZYBaGtrw+Fw9PjgjY2NNDc3n/M7VVWpra3ttydYVVV5/fXXeeqpp2hoaPB9Xl9fz/vv
      v98nx2xtbWXVqlVdzvn999/n2LFjPdqf2+2msbGxt8ITBGGQ0XVnpdGjR3PHHXdcdD1VVamq
      qsJms5GQkIDZbPZ97vF4MBgMeL1e2traCA0N5aqrrjprH06nk4aGBgICAs76zuFw0NTUhL+/
      P8HBwUiS1OXYbrcbg8Hg+7zzuHq9HkmSsNlsNDc3Exoair+//0XPx2AwsGjRIl5//XUeeeSR
      867X1tZGdXU1ERERhIeHAx03X51Oh0aj8S1rNBp0uo5L7vV6UVXVtwxw00038dFHH3Hw4EFm
      zJhBc3MzH3/8Ma+++qrvnJxOJ+Xl5ZjNZuLi4nyfy7KMJElotVrsdvs54zzXNRIEYejqVgLo
      DlmW+f3vf09+fj7Dhg2jpqaGp556itTUVBoaGnjqqae49957efrppwkNDeWVV15h3bp1uN1u
      fvCDHwDw5Zdf8ve//52YmBicTidVVVW+/b/11lts2rSJyMhI6urqmDVrFr/4xS98N1hFUbjv
      vvt4+OGHSU5OBqC8vJznnnuOl19+mc8//5w1a9YQExNDbW0tN998M7fddttFz2vp0qXce++9
      lJWVkZiYeNb3e/fu5aWXXmLkyJEUFxdz1113ccMNN/Dss8+yYMEC5syZg6Io/PznP2fkyJE8
      8cQTALz99tsEBQVxyy23+PZlMBhYvnw5f//735k6dSr/93//x6JFi4iMjASgsLCQJ554goiI
      CJqbm0lOTuY3v/kNBoOBd955h6ioKKqqqvj0009Zvnw5kydP9u1bVVU+/vhjsrOzef7559Fq
      tZf6VywIwiDTrQTg8Xhob2/3LRuNRgwGQ5d1tm7dSmNjI2+99RZ6vZ6srCxeeOEFXnvtNVRV
      pbKykt/97nf8+te/9t2YZFn2FSdVVlby8ssvs3r1akaMGIGiKNx5552+/S9YsIAf/vCHGAwG
      HA4HP/nJT7jtttuIjY0FQKvVMnfuXDZv3uxLAFu2bGH27NlotVree+89/vCHP5CYmIjL5aKu
      rq5bF8hkMvH//t//45VXXuH555/v8p3dbucvf/kLv//970lMTKS+vp6f//znzJs3j2nTprFn
      zx7mzJmDxWLBZDJRWFjoezPYt28fjz766FnHmz17Nh988AFr1qxh7969vP76677vfve737Fi
      xQrmzJmDLMs88cQTbNq0iSVLluDxeFi7di0JCQm88847hISEdEmge/bsYf369axevVrc/AVB
      ALrZCigzM5Ply5f7/vvyyy/PWic7O5tbbrkFvV4PwMyZM3G5XLS1tQEdRRePPvoo06ZN61Ls
      0SkrK4v58+eTlJSEJElIkuR7ugeIiIggJyeHtWvXsnbtWoCz6g+uv/56tm/fjqIoKIrC9u3b
      uf766wFISkritdde48CBA8iyTHx8fHdOHYDrrruOqqqqs8riKysrCQkJwWw2U1dXh6qqxMfH
      U1JSwsyZMzl8+DCyLHPo0CHmzZtHQkICp06dorW1lba2NkaMGHHWsTQaDffccw+vvfYad9xx
      h68ozGq10tbWxuzZs5EkCb1ezy233EJWVpZv28jISJ588knCwsJ8185ms7Fr1y7+9re/8d//
      /d+EhIR0+7wFQRjcuvUGcM0115zzafVMVquVwMBA37IkSfj5+eFwONDr9cTHx5OSknLB7aOj
      o8/5naqqPPnkk76n/NjY2C7H6hQREcHw4cM5cuQIOp2OyMhIoqKiAHjsscfYsmULH330ES+8
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
      kUceoaGhgdraWuW4nm7nzp0sWLCARYsWsWPHDuUcuNpnV3nbpk2b+OSTT/jTn/5EfX096enp
      JCUlKe999913ALzxxht8/vnnyLLc9R1AS0sLQUFB3ZyOzu655x6WLl1Kfn4+bm5uLF++HIDH
      Hnus19t49NFHqampoampiQMHDlBXV8fSpUvZsmWLy0AoU6ZM4fXXX8fhcGC1WjEYDERERPDu
      u+/y1FNPERYWRnx8PC+++CKJiYnd7ru6uhpZlrn//vuBtgxj+/bt3HHHHZ327yqdZ4bDhK6P
      Y/uPorKykrFjxyqFZH19PRMmTGDRokVcc801AHz++eedvsvUqVNRq9VceumlhIWF9fr4DneB
      gYFKTa+35xDg5ptvZuXKldx0003k5OQQGxvrMjLcr371K956660OYU137drFTTfdxMKFC1m4
      cCG//OUv0Wg0REREUFlZSWlpKcuXL+fw4cPceOONpKWlKb8d6Ps11NLSQnx8PPHx8Urkub5e
      Q71JX/szOHd3d26++WZKS0uV30htbS1XXnkljzzyCNCWyZrNZnx9fTt9j/fff5/77rsPaHs+
      V1NTA8CYMWM6fTYkJIS8vDzA9fnrzXlyc3MjMjKS0tJSpeWgvaYObc991qxZQ0xMDAsWLGDF
      ihX8/Oc/Z8yYMeTn5zNhwgT27NnDn//8507pu++++1i6dKnynQE+++wzHn/8cS699FLAdZPR
      /v37efnll/H09FSagTw8PFzu86WXXuoybysqKuLNN99UCr3Y2FgqKyvx9fVVCpmcnBz++te/
      th2LTin5j+DgYPbs2dPV233SU/jDdk6nk9WrVxMREUFYWBh6vb7LWsPp254zZw4pKSk0NTWx
      ePFiABoaGnj77beVfbef6O7U19cTGRmpvI6MjGTfvn3nlM6ujmNNTQ1r164lISEBPz8/rFYr
      AA888ACbN2/mscceIzw8nKeeesrld/H19eU3v/kN//d//0ddXR0PPfSQCBjTC2VlZQQFBfX5
      WvPz82PcuHFkZGTw448/cuONN7r83Lhx4/D29u5wl9zQ0MDRo0c5evQoAFqtFofDwdy5c0lO
      TqasrIx77rmHtLQ0mpub8fT07BCes6/X0DPPPMPmzZt5/fXXWbhwIXfddddZXUO9Td+5KCkp
      wWq1Ks0YVVVVyp3GAw880OnzRUVFhIaGdnn+enuerrnmGrZv3054eHiH2j+0na+IiAigLX/x
      8fHB4XCwbNkytm3bho+PD0FBQXh7e3f73dqPdUNDQ4fmrzPV1taSl5fH73//e6DtvKanpzNj
      xgyX++wub/vlL3+pZP4HDx5k06ZNzJo1C6fTidPppKmpSWlWhm4KgNjYWIqKiigrK1OCgdvt
      dlQqlRIE3G639+mBxenrtgeVP11lZSXBwcGsXLkSWZbJzs5W3nM6nciy7LIwue6663jrrbcw
      mUz84Q9/ANra+ZcuXcrUqVMBOgR670pUVBQnTpxQ9pOWlqbUQk7ff3fpPFNXxzE5OZnbb7+d
      q6++GpvNpvzA1Wo1K1asANpu1bKyslx+F7vdzrRp00hISKC1tZU1a9aIAqAHZrOZ//3f/+W+
      ++7r0zlsd+edd/Lee++h1+uZNGlSl597+OGHlesQ2q7F0+8sDQYDbm5uzJkzh+effx6tVktI
      SAjTpk3j/fffZ/bs2R2219drKCgoiNWrVyPLMitWrODOO+88q2uot+mDtkLNbDb3eAzP9Pe/
      /12p/QNMnDixw/O601VVVfHNN9/w5ptvdnv+enOepk2bxnvvvUdxcTHr16+nrq5OeW/MmDGk
      p6czc+ZMLBYLRqMRNzc3pk2bxttvv83WrVu5/vrre/0dY2Nj2bp1K/fccw+nTp3qlPft3LmT
      3/3ud1x99dVAW6+i77//nhkzZrjcZ3d52+n543fffcfzzz9PUFAQ5eXlbNy4kdDQUHJycmhq
      asLPz6/rAkCtVvP000+zdu1aRo8eTX19Pbfccgvx8fG88MILHD58mOrqaiVDP5OrjHrmzJms
      XbuWoKAgKioqlFuidqNGjaKgoIANGzZQVVVFRUWFsp2EhARWrlxJWFgYq1ev7rBeWFgYLS0t
      BAQEKKXyPffcw9q1a4mOjqa5uZlJkyZ1eOjkir+/P7Nnz+axxx4jNDSU+vp6Xn755U77f/zx
      x7tMZ2+P49SpU3n++efJysqisrJS+fF89NFH5OfnExoaysmTJ7n//vsJCwvr9F1uuOEG1q9f
      z7hx46ipqeGqq67q9rsNVyqVir/+9a9s3rwZs9nMzTffzPTp07HZbL0+h+3GjRuHXq9n7ty5
      LvfTvn5oaCixsbFKW+5VV13FM888w5o1a5SHtC+99BJ+fn4YjUbi4+OBthr38uXLOz0b6+s1
      tG7dOnQ6HRqNhqioKNRqtcvfQ0/XUG/TB6DT6bDZbPzhD39QmjDPPD5nqqqqoqGhQcnIXFGp
      VEomL8syq1evRqfT4eHh0eX56815UqlUTJw4kbq6Ojw9PTuk7+6772bNmjVMnDiRvLy8Dk3C
      M2fO5Mcff3R5d+JqXwA/+clPeO2113j00UcZNWpUp2PR3vzTLj4+nldffVWpcJ65z97mbbNn
      z+bZZ58lPDycxsZGfHx8cHNz49FHH2XdunVtD/zlHkiSJNfV1ckWi0VZ1tLSIldXV8uSJPW0
      eie1tbVyU1NTl+/b7Xa5vLxcttlsnd5ramqSDQaDy/VaW1tlk8nUKe2NjY0ut9WdlpYWuays
      rNP3O33/3aXTFVfH0Wg0ypWVlZ3209raKldUVMgOh6Pb7+J0OuWqqiq5ubm5T99PaNPXcyjL
      srxq1Sq5oaHhrPbX2toqt7a2ntW6sty3a6ihoUGuqanptP5AXkOSJMm1tbWy1Wo95231Rnfn
      71zOkyy3HZeysrJO+Y3Vau3zsTIajcr5qaurkx9//PE+re9qn73N2xobG+W6uroOy06/BkVM
      YEHohcrKSl5++WWmT5/eoclCuLBciOfp0KFDfPTRR3h4eGAymXjkkUc6dMk839auXYvZbMbh
      cIig8ILQG7Is43Q6cXPrstVUuACI89Q3ogAQBEEYpsRkcIIgCMOUKAAEQRCGKVEACIIgDFNd
      PinpzcCp7jgcDvEgRuiV/rpWzpyQz2q1uhxw2FfiWhaGqgF7CGwwGLqcIVMQTtde2bhQrxdx
      LQtDVbfVGlmWyc/P55JLLgHa5u2oq6sjISGBhoYGHA4Ho0aNQpIkcnJyiIuL67QNSZJ6nH99
      uFGr1b2eH2m46o9rTxCE7nX7DODYsWPKVKOtra3k5uYSHh5OcnIyubm5HD58GGibK72r6ZZl
      WUaSJPHvtH/DrUCUWqox/vNWbEf/3ut1+uPaEwShe90WAAkJCcrMcRUVFcTFxREREaHMOaLT
      6WhtbaWsrMzl1K2CAGDd+xJSXR6S4VTPH/4Pce0JwsDrdS8gd3d3LBaLUqOHthn10tPTxQMy
      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
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Total Cumulative Cases - Absolute and Relative to Resident Population' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3xUVfr4/56SXkknIQkhlIReEilKlWKjs6CggLi62MF1sWGoEQQUVmVR
      KS6r4rorggiBgNFIMYSQAIYQWoCEhDRSJpnJZOr5/ZGd+8skk4ZYPl/m/XrxInPvueece9rz
      nOecex6ZEEJgx44dO3buOOS/dwbs2LFjx87vg10A2LFjx84dil0A2LFjx84dil0A2LFjx84d
      il0A2LFjx84dil0A2LFjx84dil0A2LFjx84dil0A2LFjx84dil0ANIMQgj/qd3JCCMxm8++d
      DZv8kfP2f51fo02azeY/bDu3xa+R3/9rZXC7UCxdunRpcwEKCgo4ePAg7du3x8XFRbqelpaG
      g4MDbm5ubU5UCEFCQgLu7u54eHi0+fmm4vz+++9p166dlE8hBHv37kUul+Pr6yuFPXr0KG5u
      bri4uPDpp58SHR2NQqFoFGdKSgpJSUn069evVXk4c+YMR48e5dy5c1b/Ll26RKdOnWymcatU
      VFSwZMkSxo4da/O+RqNh7969HDp0iGvXrhEQEHBLdXUr5Ofns379ekaOHHlLz2s0Gnbt2kV0
      dDRy+e3RUcxmM8ePH2fPnj38/PPPKBQKAgMDkclktyX+201SUhLJycn06dPHKo9///vf8fb2
      xt/f/7al9eyzzzJmzBiUSuVti/PXwmw288ILLzBmzBir/qTT6di9ezfnzp0jOzubmzdv4u/v
      j4ODQ6vifeGFFxgxYkSrw9entraW//znP3Tv3v22tddbpbCwkMTERM6dO8fFixepqqoiMDCw
      yXy1mNsLFy7w/vvvs2XLFisJuXfvXq5du9ZihjQaDa+88koj6Zqfn49Op2vx+bZw9OhRUlJS
      pN+FhYWsX7+eL774QrpmMBh47733JE3qypUrTWqrGo2GqqqqVqdvNBqpqamhpqaGHTt2kJeX
      R01NDVqttkXt4vTp02zZsqXVaZlMJm7evGnzXklJCXPmzOHixYt06dIFlUrFl19+2eq4fylG
      o5GysrJWhT1+/DifffaZ1TWDwUBubu5ty4/JZOKtt95iy5YthIaG4uXlxYcffviHnaUYDAa2
      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
      ysrKpHjy8vLE66+/3urn6+ezvLxc6PV6q+sajUao1epGYaurq4VGo2lzOhb0er3Izc0VWq22
      0fWSkhJhMpmEEEJotVpRUFDQ6jKxvEf9vJlMJlFQUCBqampuKZ/5+flCp9M1GcZgMIiCggJR
      W1trMy8Ny6/+c+Xl5Y2eUavVQq1WW7WN+phMJnHz5k2rPDVVTrW1tTbzVlNTI6qqqqzSqK6u
      Fjdu3GhT+2stmZmZYtOmTS2GO336tPjoo49aHa/ZbBbXr18XlZWVrX7m5s2bjfre7cJW+zOb
      zaK4uFiUlpZapanRaERBQYHU1ltDdXW1qKiokH5nZWWJVatW3XI+DQaD1XW1Wt2on5jNZqFS
      qRr11dtJbW2tqKysbFQnKpXKqu2aTCZRUlLSZH+0Na62Bp1OJ8rLy63qwmg0ioKCApvvrdFo
      RFlZmZAJ8Qs3ot5Gdu/eTUJCAi+//HKLZh87dn4rxP/2Ws+YMYPw8PBmw61evZrHHnuMDh06
      /IY5/L/Jp59+yuHDh1m+fLnVB1l2fjv+UAKgtrYWhULRqn26duz8VgghSE9PZ8CAAc0ufrY2
      nJ06ampqcHR0bLQt2M5vxx9KANixY8eOnd8O+2FwduzYsXOHYhcAduzY+U0wGAxt/ujyj0h2
      djbp6ekthsvKypK+ifmj0uxpoHbs2Llz+OCDD0hOTubEiRPcvHmT8PDw22qf37FjBwqFosnz
      sKDugyhHR0dpDeXKlSskJycTHR192/JhQfzvtONt27YRGxsrbckUQlBUVMTWrVvp3LlzowPf
      tm3bxuDBg6Wv2k+fPs3WrVuJjY21Wr/csmULQ4cOJS8vj82bN7N//36uX79O9+7dUSqVlJeX
      8+6777Jnzx60Wq10KujNmzfZtm0bu3btIiMjg86dO+Pu7o7JZGL79u18/vnnnD9/nl69ev3i
      9dJmj4KwLw/89tRfPDSbza1eTLSEu1111nAftJ3/n9Z+Sfprlt+txi3+90GSrW9e0tPTWbZs
      mXRE9jvvvGPzRNhbpba2tsWv7t966y0WL14sHUvh5+fX6Nj024EQgk2bNnHp0iWKi4sxmUzS
      YLpz506SkpKora1t9KGdRqOhsrJS+q5Io9GwZcsWtFqt1VEdarVa+sh1x44dzJkzBz8/P774
      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
    </thumbnail>
    <thumbnail height='384' name='Notable States - Cases + Deaths' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
