<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0525.1210                               -->
<workbook original-version='18.1' source-build='2020.2.1 (20202.20.0525.1210)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='tableau_15932866299700' path='/workbooks' revision='1.9' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1oajcr91csrz9w199mwof0mnrywi'>
            <connection class='textscan' directory='/Users/tylerdegroff/Library/Mobile Documents/com~apple~CloudDocs/Github/Coronavirus' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='cases.per100k' ordinal='8' />
            <column datatype='real' name='deaths.percap' ordinal='9' />
            <column datatype='real' name='deaths.per100k' ordinal='10' />
            <column datatype='integer' name='cases.new' ordinal='11' />
            <column datatype='integer' name='deaths.new' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='fips' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='cases' ordinal='4' />
            <column datatype='integer' name='deaths' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='real' name='cases.percap' ordinal='7' />
            <column datatype='real' name='cases.per100k' ordinal='8' />
            <column datatype='real' name='deaths.percap' ordinal='9' />
            <column datatype='real' name='deaths.per100k' ordinal='10' />
            <column datatype='integer' name='cases.new' ordinal='11' />
            <column datatype='integer' name='deaths.new' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.percap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.per100k</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases.per100k]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.per100k</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.percap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.percap]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.percap</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.per100k</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths.per100k]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.per100k</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cases.new</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths.new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths.new]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>deaths.new</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;' value='Cases' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;' value='Moving Average' />
          <alias key='&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;' value='7-Day Moving Average' />
        </aliases>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
      </column>
      <column caption='New Cases - 7D SMA' datatype='real' name='[Calculation_705305989325619205]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='None' caption='Cases (bin)' datatype='integer' name='[Cases (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[cases]' peg='0' size='10000' />
      </column>
      <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
      </column>
      <column caption='New Cases per Capita - State' datatype='real' name='[Cases per Capita - State (copy)_705305989344137228]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new] / [population]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
      <column caption='Cases per 100K' datatype='real' name='[cases.per100k]' role='measure' type='quantitative' />
      <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;New York City&quot;' value='-74.006' />
        </semantic-values>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Deaths' datatype='integer' name='[deaths.new]' role='measure' type='quantitative' />
      <column caption='Deaths per 100K' datatype='real' name='[deaths.per100k]' role='measure' type='quantitative' />
      <column caption='Deaths per Capita' datatype='real' name='[deaths.percap]' role='measure' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='FIPS' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[data.csv_62B351438B2C46A48040691DC829D2A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Max' name='[max:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cases (bin)]' derivation='None' name='[none:Cases (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.per100k]' derivation='Sum' name='[sum:cases.per100k:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.new]' derivation='Sum' name='[sum:deaths.new:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.per100k]' derivation='Sum' name='[sum:deaths.per100k:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths.percap]' derivation='Sum' name='[sum:deaths.percap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_705305989325619205]' derivation='User' name='[usr:Calculation_705305989325619205:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_705305989325619205]' derivation='User' name='[usr:Calculation_705305989325619205:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Cases per Capita - State (copy)_705305989344137228]' derivation='User' name='[usr:Cases per Capita - State (copy)_705305989344137228:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,State)' hidden='true' name='[Action (Date,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Continental United States' name='[Continental United States]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[state]' member='&quot;Alabama&quot;' />
          <groupfilter from='&quot;Arizona&quot;' function='range' level='[state]' to='&quot;Georgia&quot;' />
          <groupfilter from='&quot;Idaho&quot;' function='range' level='[state]' to='&quot;Wyoming&quot;' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Cases per Capita (bins),County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (County,Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county:nk]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cases' role='measures'>
        <folder-item name='[Calculation_705305989325619205]' type='field' />
        <folder-item name='[Cases per Capita - State (copy)_705305989344137228]' type='field' />
        <folder-item name='[cases.new]' type='field' />
        <folder-item name='[cases.per100k]' type='field' />
        <folder-item name='[cases.percap]' type='field' />
        <folder-item name='[cases]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[deaths.new]' type='field' />
        <folder-item name='[deaths.per100k]' type='field' />
        <folder-item name='[deaths.percap]' type='field' />
        <folder-item name='[deaths]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Cases'>
          <folder-item name='[Calculation_705305989325619205]' type='field' />
          <folder-item name='[Cases per Capita - State (copy)_705305989344137228]' type='field' />
          <folder-item name='[cases.new]' type='field' />
          <folder-item name='[cases.per100k]' type='field' />
          <folder-item name='[cases.percap]' type='field' />
          <folder-item name='[cases]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[deaths.new]' type='field' />
          <folder-item name='[deaths.per100k]' type='field' />
          <folder-item name='[deaths.percap]' type='field' />
          <folder-item name='[deaths]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/tylerdegroff/Library/Mobile Documents/com~apple~CloudDocs/Github/Coronavirus/data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/30/2020 04:08:48 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='280337' timestamp-start='2020-06-30 16:08:48.001' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>fips</remote-name>
              <remote-type>20</remote-type>
              <local-name>[fips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fips</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16953</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>258</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7764</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4647</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1019</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16720</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.percap</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>89006</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.per100k</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases.per100k]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.per100k</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>89006</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.percap</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.percap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.percap</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28925</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.per100k</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deaths.per100k]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.per100k</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28925</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases.new</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>921</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths.new</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths.new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths.new</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_62B351438B2C46A48040691DC829D2A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]&#10;[none:county:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;New York&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Florida&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Maine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Texas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Washington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;California&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Utah&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:county:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#2a5784'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#2b5885'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#2d5a87'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#35628e'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#396794'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#3a6795'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#3c6996'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#416e9c'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#416f9c'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#42719f'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4573a1'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#4b7ba9'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#5081af'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#5182b0'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#5384b0'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#5485b1'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#6394bd'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#6a9bc4'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#76a6cc'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#77a7cd'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#7aaacf'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#7babd1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#7daed2'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#7daed3'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#7fafd3'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#7fb0d4'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#81b1d6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#84b4d7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#85b4d8'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#88b7d9'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#89b9db'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#8cbadc'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#8dbbdc'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#8ebcdd'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#8ebdde'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#91c0df'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#92c0e0'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#97c5e2'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#99c5e3'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#9bc8e4'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#a4cfe9'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#a8d1eb'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a8d2eb'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#abd4ec'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#aed6ed'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b0d7ee'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#b3d9ee'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b3d9ef'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b4daef'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#b6dbef'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#fc0107'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>21</bucket>
            </map>
            <map to='#bd273f'>
              <bucket>20</bucket>
            </map>
            <map to='#c43141'>
              <bucket>19</bucket>
            </map>
            <map to='#c93942'>
              <bucket>18</bucket>
            </map>
            <map to='#cf4244'>
              <bucket>17</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>16</bucket>
            </map>
            <map to='#db5247'>
              <bucket>15</bucket>
            </map>
            <map to='#e05a48'>
              <bucket>14</bucket>
            </map>
            <map to='#e56249'>
              <bucket>13</bucket>
            </map>
            <map to='#e96a49'>
              <bucket>12</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>11</bucket>
            </map>
            <map to='#f27b4a'>
              <bucket>10</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f5c75f'>
              <bucket>2</bucket>
            </map>
            <map to='#f6834b'>
              <bucket>9</bucket>
            </map>
            <map to='#f6be59'>
              <bucket>3</bucket>
            </map>
            <map to='#f7b455'>
              <bucket>4</bucket>
            </map>
            <map to='#f98c4c'>
              <bucket>8</bucket>
            </map>
            <map to='#f9aa51'>
              <bucket>5</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>6</bucket>
            </map>
            <map to='#fc964e'>
              <bucket>7</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1509198523617779724:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694026174465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases (bin):ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989323722754:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989324251140:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989330145287:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Cases per Capita - State (copy)_705305989344137228:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523528433666:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk:1]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.per100k:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths.new:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.per100k:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989328637958:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989349380110:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[__tableau_internal_object_id__].[cnt:data.csv_62B351438B2C46A48040691DC829D2A9:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Cases per Capita - County (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>81</bucket>
            </map>
            <map to='#b2143a'>
              <bucket>61</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>55</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>5</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>53</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>49</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>47</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>44</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>38</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>36</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>30</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>4</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>29</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>28</bucket>
            </map>
            <map to='#e03841'>
              <bucket>27</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>26</bucket>
            </map>
            <map to='#e54244'>
              <bucket>25</bucket>
            </map>
            <map to='#e84746'>
              <bucket>24</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>23</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>22</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>21</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>3</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>20</bucket>
            </map>
            <map to='#f26250'>
              <bucket>19</bucket>
            </map>
            <map to='#f36654'>
              <bucket>18</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>17</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>16</bucket>
            </map>
            <map to='#f67561'>
              <bucket>15</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>14</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>13</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>12</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>11</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>10</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>9</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>8</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>7</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>6</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_62B351438B2C46A48040691DC829D2A9'>
            <properties context=''>
              <relation connection='textscan.1oajcr91csrz9w199mwof0mnrywi' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='fips' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='cases' ordinal='4' />
                  <column datatype='integer' name='deaths' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='real' name='cases.percap' ordinal='7' />
                  <column datatype='real' name='cases.per100k' ordinal='8' />
                  <column datatype='real' name='deaths.percap' ordinal='9' />
                  <column datatype='real' name='deaths.per100k' ordinal='10' />
                  <column datatype='integer' name='cases.new' ordinal='11' />
                  <column datatype='integer' name='deaths.new' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State-Level Perspective' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='State-Level Perspective' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Nation-Wide Cumulative Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:deaths:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Cases: </run>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-06-28#</value>
                    <value>2557590</value>
                    <value>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0BB4B64A-63C0-4622-8F7E-08B9E123E1E1}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[New Case Density as of <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='New Cases - 7D SMA' datatype='real' name='[Calculation_705305989325619205]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_705305989325619205]' derivation='User' name='[usr:Calculation_705305989325619205:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{B06C2684-0D41-49AE-A343-241CCF03CE02}' />
    </worksheet>
    <worksheet name='Nation-Wide Cumulative New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='1' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{0D6175A6-539D-4492-9FBD-F4612420119A}' />
    </worksheet>
    <worksheet name='Nation-Wide Daily New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily New Cases with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989341708297]' role='measure' type='quantitative' user:unnamed='Nation-Wide Daily Cases'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_705305989341708297]' derivation='User' name='[usr:Calculation_705305989341708297:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Action (State)]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/diamond' />
                <format attr='size' value='1.5' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989341708297:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' size='9999' trail-effect='none' />
      </table>
      <simple-id uuid='{CC5F8587-995F-4734-A3D9-663EBBC87EA0}' />
    </worksheet>
    <worksheet name='Nation-Wide Top 10 Most Infected Counties'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Index' datatype='integer' name='[Calculation_1718193694052151304]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='County, State' datatype='string' name='[Calculation_1718193694053994508]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[county] + &quot;, &quot; + [state]' />
            </column>
            <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
            </column>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1718193694053994508]' derivation='None' name='[none:Calculation_1718193694053994508:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1718193694052151304]' derivation='User' name='[usr:Calculation_1718193694052151304:ok:22]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694053994508:nk]' />
                <order field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
              <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
              <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-06-29#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok:22]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_1718193694052151304:ok:22]' member='10' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694053994508:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok:22]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' value='p0.00%' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2d9da</color>
                <color>#f3c2c3</color>
                <color>#f4abad</color>
                <color>#f59395</color>
                <color>#f67b7e</color>
                <color>#f76367</color>
                <color>#f84b4f</color>
                <color>#f93237</color>
                <color>#fa191f</color>
                <color>#fc0107</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' field-type='quantitative' max-size='1' min='6.0664887163309884e-05' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' />
              <text column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-halo' value='true' />
                <format attr='has-stroke' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694053994508:nk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</cols>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{3272EB68-1E71-4C15-96A7-07367B551AA1}' />
    </worksheet>
    <worksheet name='Nation-Wide Top 10 Most Infected Counties Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Nation-Wide Top 10 Most Infected Counties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
            </column>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='%null%' />
                <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='1' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
              <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-06-29#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2d9da</color>
                <color>#f3c2c3</color>
                <color>#f4abad</color>
                <color>#f59395</color>
                <color>#f67b7e</color>
                <color>#f76367</color>
                <color>#f84b4f</color>
                <color>#f93237</color>
                <color>#fa191f</color>
                <color>#fc0107</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' field-type='quantitative' max-size='1' min='6.0664887163309884e-05' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' value='Quad. 3, 4'>
              <formatted-text>
                <run>Quad. 3, 4</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]' />
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <size column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='true' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{B4D283D8-2DEB-4CDC-BC06-6E3042DE72E4}' />
    </worksheet>
    <worksheet name='New Cases - California'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk])</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{FC1E0ECC-6390-475B-9680-86DD8698AC19}' />
    </worksheet>
    <worksheet name='New Cases - Florida'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{6BBDFAA9-8112-421F-98D7-D1517DEC995B}' />
    </worksheet>
    <worksheet name='New Cases - New York'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{B914B506-9BAA-4723-84A0-51BDFEAAB609}' />
    </worksheet>
    <worksheet name='New Cases - Texas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='display' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{1E4FD359-4CEF-41D5-949B-0B8517739889}' />
    </worksheet>
    <worksheet name='State-Level - Cumulative'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='15' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk])</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{8550A81D-22A9-4FA8-B532-9453397BA0F2}' />
    </worksheet>
    <worksheet name='State-Level - New'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily New Cases with 7-Day Moving Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='WINDOW_AVG(SUM([New Cases]), -6, 0)' datatype='real' name='[Calculation_705305989316575233]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([cases.new]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Cases' datatype='integer' name='[cases.new]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.new]' derivation='Sum' name='[sum:cases.new:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_705305989316575233]' derivation='User' name='[usr:Calculation_705305989316575233:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-15#</min>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='-90' />
            <format attr='font-weight' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='normal' />
            <format attr='font-size' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' value='15' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk] * ([federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.new:qk] + [federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989316575233:qk]))</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{8FBE7C42-261E-41F3-B892-30C18CBDAE19}' />
    </worksheet>
    <worksheet name='Worst States by County'>
      <layout-options>
        <title>
          <formatted-text>
            <run>All States by Worst (Most Infected) County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-06-29#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' value='p0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' value='Quad. 1, 2'>
              <formatted-text>
                <run>Quad. 1, 2</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' />
              <text column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-halo' value='true' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]</cols>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F96A7CEC-7BE0-4C44-BD29-5EFCD5DAA1EB}' />
    </worksheet>
    <worksheet name='Worst States by County Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Contiguous States by Worst (Most Infected) County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
            <column aggregation='None' caption='Cases per Capita (bins)' datatype='integer' name='[Cases per Capita - County (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-3' formula='[cases.percap]' peg='0' size='0.025' />
            </column>
            <column caption='Cases per Capita' datatype='real' name='[cases.percap]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='37.084200000000003' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;New York City&quot;' value='40.712800000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Joplin&quot;' value='-94.513300000000001' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;New York City&quot;' value='-74.006' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[cases.percap]' derivation='Max' name='[max:cases.percap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases per Capita - County (bin)]' derivation='None' name='[none:Cases per Capita - County (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases.percap]' derivation='Sum' name='[sum:cases.percap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]' />
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cases per Capita - County (bin):ok]' />
              <groupfilter function='member' level='[none:Cases per Capita - County (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-06-29#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</column>
            <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624115' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' min='0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e5da</color>
                <color>#f3d9c3</color>
                <color>#f5cdab</color>
                <color>#f6c093</color>
                <color>#f8b47c</color>
                <color>#f9a763</color>
                <color>#fa9b4b</color>
                <color>#fc8e32</color>
                <color>#fd8119</color>
                <color>#ff7400</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' min='0.0' num-steps='3' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' value='false' />
            <format attr='in-tooltip' field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]' />
              <lod column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]' />
              <geometry column='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='true' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</rows>
        <cols>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</cols>
        <show-full-range>
          <column>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Cases per Capita - County (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='18' mark-position='1' pullback='12' text-width='194'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, ]]></run>
              <run fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>
]]></run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Cases for </run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]>]]></run>
              <run fontalignment='0' fontsize='8'> Residents</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Saturation</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5</value>
                    <value>&quot;Trousdale&quot;</value>
                    <value>&quot;Tennessee&quot;</value>
                    <value>0.13080467919177596</value>
                    <value>36.390900000000002</value>
                    <value>-86.140199999999993</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='124' y='0' />
          </annotation>
          <annotation class='point' id='19' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, ]]></run>
              <run fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>
]]></run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Cases for </run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]>]]></run>
              <run fontalignment='0' fontsize='8'> Residents</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Saturation</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>3</value>
                    <value>&quot;Lake&quot;</value>
                    <value>&quot;Tennessee&quot;</value>
                    <value>0.098489167616875706</value>
                    <value>691</value>
                    <value>7016</value>
                    <value>36.343899999999998</value>
                    <value>-89.4636</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-118' y='0' />
          </annotation>
          <annotation class='point' id='20' mark-position='1' pullback='12' text-width='190'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, ]]></run>
              <run><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>
]]></run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]> ]]></run>
              <run fontsize='8'>Cases for </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]>]]></run>
              <run fontsize='8'> Residents</run>
              <run>Æ&#10;</run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]> ]]></run>
              <run fontsize='8'>Saturation</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>3</value>
                    <value>&quot;Dakota&quot;</value>
                    <value>&quot;Nebraska&quot;</value>
                    <value>0.088085488864476175</value>
                    <value>1764</value>
                    <value>20026</value>
                    <value>42.402200000000001</value>
                    <value>-96.570800000000006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-137' y='0' />
          </annotation>
          <annotation class='point' id='21' mark-position='1' pullback='12' text-width='188'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, ]]></run>
              <run fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>
]]></run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Cases for </run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]>]]></run>
              <run fontalignment='0' fontsize='8'> Residents</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Saturation</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>3</value>
                    <value>&quot;Buena Vista&quot;</value>
                    <value>&quot;Iowa&quot;</value>
                    <value>0.086238532110091748</value>
                    <value>1692</value>
                    <value>19620</value>
                    <value>42.735900000000001</value>
                    <value>-95.150700000000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='172' y='0' />
          </annotation>
          <annotation class='point' id='22' mark-position='1' pullback='12' text-width='190'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, ]]></run>
              <run fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>
]]></run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Cases for </run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]>]]></run>
              <run fontalignment='0' fontsize='8'> Residents</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Saturation</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>3</value>
                    <value>&quot;Lincoln&quot;</value>
                    <value>&quot;Arkansas&quot;</value>
                    <value>0.079622235872235866</value>
                    <value>1037</value>
                    <value>13024</value>
                    <value>33.9818</value>
                    <value>-91.709500000000006</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='1' y='113' />
          </annotation>
          <annotation class='point' id='23' mark-position='1' pullback='12' text-width='188'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]> County, ]]></run>
              <run fontalignment='0'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]>
]]></run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Cases for </run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]>]]></run>
              <run fontalignment='0' fontsize='8'> Residents</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontsize='8'><![CDATA[<[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]> ]]></run>
              <run fontalignment='0' fontsize='8'>Saturation</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:population:qk]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Latitude (generated)]</field>
                      <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>3</value>
                    <value>&quot;Nobles&quot;</value>
                    <value>&quot;Minnesota&quot;</value>
                    <value>0.07624023302048176</value>
                    <value>1649</value>
                    <value>21629</value>
                    <value>43.678899999999999</value>
                    <value>-95.753100000000003</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='1' y='-65' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{79C2F344-5862-4361-845E-EC857FF72A1C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Controlling for the Effect of Resident Population on Total Cumulative Case Counts'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93708' id='26' param='horz' w='98698' x='651' y='1048'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93708' id='22' param='vert' w='98698' x='651' y='1048'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='23' w='98698' x='651' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='88204' id='7' param='horz' w='98698' x='651' y='6552'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='88204' id='5' w='98698' x='651' y='6552'>
                  <zone h='44107' id='16' name='Nation-Wide Top 10 Most Infected Counties' w='49356' x='49993' y='50649'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44106' id='24' name='Nation-Wide Top 10 Most Infected Counties Map' w='49342' x='651' y='50650'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44098' id='40' name='Worst States by County Map' w='49342' x='651' y='6552'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44097' id='42' name='Worst States by County' w='49356' x='49993' y='6552'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4196' id='68' w='49307' x='651' y='94756'>
            <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4196' id='43' name='Worst States by County' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' single-line='true' w='49307' x='651' y='94756'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4196' id='27' leg-item-layout='horz' name='Nation-Wide Top 10 Most Infected Counties Map' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' w='49391' x='49958' y='94756'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='74' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='73' param='vert' w='98698' x='651' y='1048'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='23' w='98698' x='651' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44098' id='40' is-fixed='true' name='Worst States by County Map' w='49342' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44097' id='42' is-fixed='true' name='Worst States by County' w='49356' x='49993' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4196' id='43' name='Worst States by County' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' single-line='true' w='49307' x='651' y='94756'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44107' id='16' is-fixed='true' name='Nation-Wide Top 10 Most Infected Counties' w='49356' x='49993' y='50649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44106' id='24' is-fixed='true' name='Nation-Wide Top 10 Most Infected Counties Map' w='49342' x='651' y='50650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4196' id='27' leg-item-layout='horz' name='Nation-Wide Top 10 Most Infected Counties Map' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' w='49391' x='49958' y='94756'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{54BE3D3C-B07D-4D5C-8330-65B8D3F91E03}' />
    </dashboard>
    <dashboard name='Nation-Wide Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='93701' id='58' param='vert' w='98698' x='651' y='1048'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='59' w='98698' x='651' y='1048'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='88197' id='7' param='horz' w='98698' x='651' y='6552'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='88197' id='5' w='98698' x='651' y='6552'>
                <zone h='58769' id='10' name='Nation-Wide Cumulative Map' w='24658' x='74691' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='58769' id='35' name='Nation-Wide Daily New' w='49394' x='25297' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29428' id='40' name='New Cases - New York' w='24658' x='651' y='65321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29428' id='43' name='New Cases - Florida' w='24678' x='25309' y='65321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29428' id='45' name='New Cases - Texas' w='24663' x='49987' y='65321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29428' id='47' name='New Cases - California' w='24699' x='74650' y='65321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29381' id='146' name='Nation-Wide Cumulative New' w='24646' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29388' id='155' name='Nation-Wide Cumulative Deaths' w='24646' x='651' y='35933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='4203' id='126' w='98698' x='651' y='94749'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4203' id='125' param='horz' w='49304' x='651' y='94749'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4203' id='42' leg-item-layout='horz' name='New Cases - New York' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='49304' x='651' y='94749'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='4203' id='127' param='horz' w='49394' x='49955' y='94749'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4203' id='12' name='Nation-Wide Cumulative Map' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' show-title='false' single-line='true' w='49394' x='49955' y='94749'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='245' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='244' param='vert' w='98698' x='651' y='1048'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='59' w='98698' x='651' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29381' id='146' is-fixed='true' name='Nation-Wide Cumulative New' w='24646' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58769' id='35' is-fixed='true' name='Nation-Wide Daily New' w='49394' x='25297' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58769' id='10' is-fixed='true' name='Nation-Wide Cumulative Map' w='24658' x='74691' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4203' id='12' name='Nation-Wide Cumulative Map' pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' show-title='false' single-line='true' w='49394' x='49955' y='94749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='228' h='29388' id='155' is-fixed='true' name='Nation-Wide Cumulative Deaths' w='24646' x='651' y='35933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29428' id='40' is-fixed='true' name='New Cases - New York' w='24658' x='651' y='65321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='4203' id='42' leg-item-layout='horz' name='New Cases - New York' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='49304' x='651' y='94749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29428' id='43' is-fixed='true' name='New Cases - Florida' w='24678' x='25309' y='65321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29428' id='45' is-fixed='true' name='New Cases - Texas' w='24663' x='49987' y='65321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29428' id='47' is-fixed='true' name='New Cases - California' w='24699' x='74650' y='65321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAD1F7D8-DA80-49EC-858A-5954919C9B1E}' />
    </dashboard>
    <dashboard name='State-Level Perspective'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='data' name='federated.1nztcxy0bg79ji1bjyyer1uqtx6r' />
      </datasources>
      <datasource-dependencies datasource='federated.1nztcxy0bg79ji1bjyyer1uqtx6r'>
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='16' param='vert' w='98698' x='651' y='1048'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='17' w='98698' x='651' y='1048'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92400' id='5' param='horz' w='98698' x='651' y='6552'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92400' id='3' w='85679' x='651' y='6552'>
                <zone h='92400' id='1' name='State-Level - New' w='42842' x='43488' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='92400' id='8' name='State-Level - Cumulative' w='42837' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='92400' id='4' is-fixed='true' param='vert' w='13019' x='86330' y='6552'>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8650' id='7' name='State-Level - New' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='13019' x='86330' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='83750' id='6' name='State-Level - New' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' values='cascading' w='13019' x='86330' y='15202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='125' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97904' id='124' param='vert' w='98698' x='651' y='1048'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5504' id='17' w='98698' x='651' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92400' id='8' is-fixed='true' name='State-Level - Cumulative' w='42837' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='83750' id='6' mode='checkdropdown' name='State-Level - New' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' values='cascading' w='13019' x='86330' y='15202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92400' id='1' is-fixed='true' name='State-Level - New' w='42842' x='43488' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8650' id='7' name='State-Level - New' pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' w='13019' x='86330' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{00D19BA9-6846-45E9-994C-7B68C7FCB8C6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Nation-Wide Perspective'>
      <viewpoints>
        <viewpoint name='Nation-Wide Cumulative Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Nation-Wide Cumulative New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Nation-Wide Daily New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - California'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - Florida'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases - New York'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='New Cases - Texas'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{697E1558-AD93-4060-B033-1FE7C050E5E8}' />
    </window>
    <window class='dashboard' name='State-Level Perspective'>
      <viewpoints>
        <viewpoint name='State-Level - Cumulative'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State-Level - New'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{E9A947AE-5183-41DB-9C6A-53EAC5F65E4F}' />
    </window>
    <window class='dashboard' maximized='true' name='Controlling for the Effect of Resident Population on Total Cumulative Case Counts'>
      <viewpoints>
        <viewpoint name='Nation-Wide Top 10 Most Infected Counties'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Nation-Wide Top 10 Most Infected Counties Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Worst States by County'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Worst States by County Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{39211BAF-95AE-448C-8618-F98556F69FBB}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CCC2BE1-4619-4E11-9B48-076EE565FDF8}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-28#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_705305989325619205:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59732700-92E5-42F2-AB6B-3436D85DF36F}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Cumulative New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F26C0C47-AC5C-46FA-A5EA-1AFCCCC05911}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Daily New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{954CAAC3-FF7A-4B4E-BBD9-C346F099324F}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Top 10 Most Infected Counties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_1718193694053994508:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1509198523542175750:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok:22]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F0AD05B-DF88-4E25-A15E-A5F2A251B92F}' />
    </window>
    <window class='worksheet' hidden='true' name='Nation-Wide Top 10 Most Infected Counties Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]' type='color' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-28#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55FAD78E-D49D-4BB2-A44C-4247093ED129}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - California'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03D80F0F-E9AF-4297-AB65-A46BD0A7AE79}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - Florida'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F1486C4-5B63-4167-B59B-545A3EA575F0}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - New York'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A4225C0-C0AC-4562-952F-FF3A3570ED7C}' />
    </window>
    <window class='worksheet' hidden='true' name='New Cases - Texas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0271F810-9FBA-48E9-AE38-254E23C494B7}' />
    </window>
    <window class='worksheet' hidden='true' name='State-Level - Cumulative'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Calculation_705305989343621130:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC85C3E9-A59D-4486-9C54-5C7BA85A9F3C}' />
    </window>
    <window class='worksheet' hidden='true' name='State-Level - New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[:Measure Names]' type='color' />
            <card param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D057535-1148-4A3E-9E15-1860A5E0C5B4}' />
    </window>
    <window class='worksheet' hidden='true' name='Worst States by County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok:25]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[usr:Calculation_1718193694052151304:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A354F15C-D833-4226-9B97-F23784B0AFB6}' />
    </window>
    <window class='worksheet' hidden='true' name='Worst States by County Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[Continental United States]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[max:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:Cases per Capita - County (bin):ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:county:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:ok]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:date:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[none:state:nk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[sum:cases.percap:qk]</field>
            <field>[federated.1nztcxy0bg79ji1bjyyer1uqtx6r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFBE53C4-1BFF-4FE3-9B49-36972EC928EC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Controlling for the Effect of Resident Population on Total Cumulative Case Counts' width='384'>
      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
      8MMPOwRyr6mpYdWqVQQGBpKWlsarr75KcXExO3fuZMWKFchkMj7//HOUSiV33HEH0Bpla+PG
      jdx5552cOXOGsWPHcuTIEVpaWjCbzSiVStzd3SksLGT16tXExcWRkZHBvHnzGDFiBKtXr2bq
      1Km8++67zJgxgzFjxrBixQqpjgsWLGDPnj1kZGTwwgsv4OrqyjPPPCMFjdm/fz833HCDgyCz
      RWJKSEhACEFSUhLTp0+nvLwcgOzsbNatW0dcXBzp6eksWrSIQYMG8corr9DU1IRMJiMkJIRR
      o0axfft21Go1P/zwA7NmzSIxMbFDGv3DH/6Aj48P4eHhnD59mpdffpnCwkK+/PJL3Nzc+P77
      73n00Uf58ccfOX36NL6+vhiNRp599ln0er3UtqamJm677TY+++wz6urqKCgoYOzYsdx88828
      9tpr6PV6DAYDffv25YEHHqCxsZHnnnsOX19fLBaLg/lg8uTJ7N27VxIAQgj+85//8PTTT0uT
      2yaIT548ybvvviv1yYoVK4iMjOTJJ59k/fr1yGQyduzYgaurK1OnTuWxxx5DqVTSq1cvMjIy
      WLp0KXV1dezatYukpCS2b9/O7Nmz2bBhAxs2bMDV1ZXy8nLeeOMNXnnllc6m+v80jhw5wujR
      o4mOjub777/vlgCwxSJPTU1lyJAhKJVKgoKCOHToEN9++y2HDh3iq6++4u6776a2tpbt27cT
      HBxMVlYWy5Yto6mpie3bt6NSqdi7dy8zZ85kyJAhLF++nLCwMAoLC7n11luZMmUKGzdupKCg
      QAoY8/TTTzvMq61bt5KZmUlxcTGjR49mxowZPP7442zcuBGVSkV2djZbt27l+eefB1oDy4eG
      hlJSUkJkZCSlpaXMnTtXEgTJycmMGzcOIQTvvPNO5wKgurqa8PDwdqvVzz//nDlz5nDjjTdi
      Mpl47LHHpAj0DzzwAImJidTX17N+/XruueceFi5cyA8//OAQptC2qjl69CgajYbXX38daGX0
      NtiryLb/HzhwgH79+vHggw8ik8lYtmxZh6qvLf3x48d54YUX8PPza6eW33DDDVRXV0sh/37/
      +98THh7OE088QX19PWvXrpXS/uEPf5D+v2nTJlJSUnj88ccpLS2V0lmtVj755BNee+01NBoN
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Nation-Wide Perspective' width='384'>
      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
      H89jjz1GQkICFRUVvPnmm4TDYRYvXszy5csvW34JCQkkJE8htMkAACAASURBVCRgt9uJi4vT
      QphCdxjP1157DYvFwkMPPcSoUaPYsGED69atw2azXXkN4JFHHuG1117TKhd099R+9KMfsW7d
      Or72ta/x0ksv0dbWRlNTEwUFBaiqyubNm3nnnXeQZZmamhrOnj2rXa8oClVVVVojeS6hUIi7
      776bJ598kgMHDnDq1Cm6urr4y1/+wpe+9CXWrVuH1+tFkiT+/d//nYcffpinnnqK559/Hq/X
      y2uvvUZaWhpPPfUUGRkZfZ4XjY6OZsWKFbz99tu9jp8+fZodO3bw3e9+l7lz5/KrX/0Ku93O
      3/72NxRFoampie3bt7N7926gu1dwfoSkL3/5y7zwwgv88Y9/5JFHHtECzj/77LPcfvvtfOMb
      32Dz5s2cPHmSUCjEhg0b+I//+A8WLFhAQkKClk5+fj579uzp15TBcGfSpElYLBYtRnEPPS/A
      v/7rvxKJRPjb3/6Gw+Fg48aNQPfoYd++fVq9euONN3pFajt16hQLFy684MUJBoPMmDGDp556
      ivHjx/P73/8egOeff54VK1bwxS9+UQsw/uc//xmHw8H3v/99rZzr6urYtm0bX/7yl1m7dm2f
      YyerqookSdrf+Ws6v/71r0lNTeU73/kOfr+fV199Feieivz+979PcnIykyZNoq6ujqKiIu23
      ffv28YUvfIF169ZpITwlSeK+++7jiSeeYOvWrVRUVPRJxhsRURR55JFH+OMf/9jrmfd0vr75
      zW9y991385Of/ASDwcDu3bvp6urC5/Px/vvvs2XLFqB7KvfcOMJtbW0kJiZeEG5TVVVsNhuP
      PfYYDz30EL/61a8IhULs3r2bjo4OvvKVrzBnzhx8Ph+1tbX85S9/4Z//+Z9ZvXo1P/7xj1FV
      lV/84hesW7eOxx9//KoUt9vt5te//jX/8A//wEMPPcRPf/pTVFUlMTGR559/npqamisrgLi4
      OBYvXqw9COju/ZtMJqxWKy6Xi2nTpnHq1CkWL17MwYMH8fl8GI1GsrKyqKur4+DBgyxevLjX
      QwIuGnN28uTJFBUVsWnTJmRZpr6+HqvVSiAQYPfu3djtdmbOnEltba2m0bu6upgwYQJFRUWk
      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
      qtUx4QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='State-Level Perspective' width='384'>
      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
      CD/+8Y95+umnMZlMNDY2MnnyZL797W93WkAWFBSwYsUKRo0axcmTJ3nggQdwu9189tln2vnf
      cccduFwuPvzwQ202seXLlzN27Niz7nPt2rUsW7ZM++BMJhMAn3zyCbt37yY6Oprc3Fyef/55
      YmNjtRnW3G43qampfP/732ft2rXs2rWL2NhYzGYzv/vd78jLy+Pll19m2LBhlJaW8pvf/Ib4
      +Phznp8k9YSgoCAeeeQRVq5cycyZM3nllVdobGzEaDRiNpt54YUX8Pf357HHHuPZZ5/VpmYF
      WLNmDT6fj7vvvhshBCtXruSWW25p931KTU0lLy+PnJwcxo0bpy0XQrBq1SpKSkowmUyYTCb+
      53/+h2XLlvHcc88RGhrKk08+SWBgII899hgVFRWsWrWKp556Stt+586dvPXWW1rZ0HZH8sYb
      b1BdXY2/vz/19fWsXLmSoqKiM75zcXFxvPbaa5jNZlRVJS4ujvvvv59Nmzaxdu1aEhMTqays
      5PXXX9eO8Ze//IWJEycybdo0PvroI9avX8/q1asBeOCBB3jzzTf5/e9/z7333suRI0fYsWMH
      eXl5hIaG8uMf/xiAl19+mbi4OJqampgxYwZ33nnnWT+b9evXc/3112vlzuk6TAD19fUMHDjw
      rAXm6XVvp/9844038qMf/Yj6+npefvllnnvuOQAefvjhs65/Nt/73ve0nz/44AP279/Pbbfd
      Rk5ODj/84Q9JSEgAWidOEUIQFhZGaGgolZWVDBw4kC+//JIf/vCHHDx4kJiYGH72s5+hqio/
      //nPufXWWzu93fz73//OE088QXJyMvX19TzzzDP88Y9/ZNGiRcTExDB37lztPKZNmwbAqVOn
      2LBhQ4cJoLGx8awF86JFi1i0aBEAX331Fbt27SItLY2mpiZee+017e7HbrezdetW/vCHP2Aw
      GHjzzTc5cuQIJ06c4Pbbb+emm27qsfYZSeqq+Ph4rFYrQggeeeQRbfnLL79MUVERqamp2h36
      6RYsWMAvfvELvv3tb+N2uykpKWl34dnmRz/6ES+++CKvvvqqtqy+vp68vDxWrlyJEILf/OY3
      VFVVcc0115CVlcXcuXPxer3U1taiqipZWVlcc8012vYulwt/f/+zFo5tF5rQmgzy8vI4cuQI
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
